
#query Para ajustes de propuesta
ajustarP.query.seguimientoPropuesta = insert into RF_TR_SEGUIMIENTO_PROP_REIN (seguimiento_id, fecha_movimiento, id_usuario, propuesta_id, estatus_prop_rein_id) values ({0},{1},{2},{3},{4})
ajustarP.query.detallePropuesta = insert into RF_TR_DET_PROP_REIN (importe, id_detalle_propuesta, id_cve_prog, id_mes, id_partida_transf, propuesta_id) values ({0},{1},{2},{3},{4},{5})
ajustarP.query.propuestaReintegro = insert into RF_TR_PROPUESTA_REINTEGRO (propuesta_id, no_propuesta, no_secuencia, importe_total, fecha_elaboracion, estatus_prop_rein_id) values ({0},{1},{2},{3},{4},{5})

ajustarP.query.updateAutorizarPropuesta = update  RF_TR_PROPUESTA_REINTEGRO set estatus_prop_rein_id=2  where propuesta_id={0}
ajustarP.query.updateCancelarPropuesta = update   RF_TR_PROPUESTA_REINTEGRO set  estatus_prop_rein_id=4  where propuesta_id={0}
ajustarP.query.updateActualizarPropuesta = update  RF_TR_PROPUESTA_REINTEGRO set estatus_prop_rein_id=5  where propuesta_id={0}


ajustarP.query.updateDetallePropuesta = update RF_TR_DET_PROP_REIN set  importe={0}  where id_detalle_propuesta={1}
ajustarP.query.updatePropuestaReintegro = update RF_TR_PROPUESTA_REINTEGRO set  importe_total={0}  where propuesta_id={1}

ajustarP.query.borraDetallePropuesta = delete RF_TR_DET_PROP_REIN where propuesta_id={0}
ajustarP.query.borraDetallePropuestaIdDetallePropuesta = delete RF_TR_DET_PROP_REIN where id_detalle_propuesta={0}
ajustarP.query.borraSeguimientoReintegro = delete RF_TR_SEGUIMIENTO_PROP_REIN  where propuesta_id={0}
ajustarP.query.borraPropuestaReintegro = delete RF_TR_PROPUESTA_REINTEGRO  where propuesta_id={0}

#query para impresion de contos de nomina  para el pago de servicios personales
serviciosPersonales.query.consultarCostosCxl = select consecutivo_cl, unidad_ejecutora, clave_programatica, entidad, ambito, partida, tipo_conc, concepto, alias, consecutivo, codigo_contable, tipo_contrata, fch_vig_ini, fch_vig_fin, sum(valor) as valor, no_control, nota_ue from ( select cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, ce.partida, c.tipo_conc, c.concepto, c.alias, c.consecutivo, ce.ajustes, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy') as fch_vig_ini, to_char(z.fecha_vig_fin,'dd/MM/yyyy') as fch_vig_fin, t.pagoxy, sum(ce.valor) as valor, cl.no_control, cl.nota_ue from sia_admin.rh_tr_plazas p, sia_admin.rh_tc_conceptos c, sia_admin.rh_tr_conc_empl ce, sia_admin.rh_tc_claves_programaticas z, sia_admin.rh_tr_cuentas_por_liquidar cl, sia_admin.rh_tc_tipo_plazas tp, sia_admin.rh_tc_prog_contratas pc, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_talon t where cl.consecutivo_cl = {0} and p.unidad_ejecutora = cl.unidad_ejecutora and z.cons_cveprog = dcl.cons_cveprog and cl.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.unidad_ejecutora='{1}' and p.plaza = t.plaza and p.ejercicio = t.ejercicio and p.periodo = t.periodo and p.tipo_plaza = tp.tipo_plaza and tp.tipo_contrata = {2} and pc.tipo_contrata = tp.tipo_contrata and t.estatus_pago in (0,2) and t.pagoxy = 2 and t.nomina = ce.nomina and t.num_empleado = ce.num_empleado and ce.nomina=cl.nomina and ce.tipo_conc=c.tipo_conc and ce.concepto=c.concepto and ce.consecutivo=c.consecutivo and to_date(c.vigencia_desde,'yyyyMMdd')<=to_date(ce.aplico_desde,'yyyyMMdd') and to_date(c.vigencia_hasta,'yyyyMMdd')>=to_date(ce.aplico_hasta,'yyyyMMdd') and p.cons_cveprog = z.cons_cveprog and c.tipo_conc in ('D','P') and ce.tipo_conc||ce.concepto||ce.consecutivo<>'D029A' and ce.tipo_conc||ce.concepto||ce.consecutivo<>'P007A' and ce.tipo_conc||ce.concepto||ce.consecutivo<>'P002A' and ce.tipo_conc||ce.concepto<>'D062' and ce.tipo_conc||ce.concepto<>'D017' and ce.tipo_conc||ce.concepto<>'D081' and ce.ajustes in ('P','O','P2','O2') and ce.valor<>0 group by cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, ce.partida, c.tipo_conc,c.concepto, c.alias, c.consecutivo, ce.ajustes, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy'), to_char(z.fecha_vig_fin,'dd/MM/yyyy'), t.pagoxy, cl.no_control, cl.nota_ue union select cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, ce.partida, c.tipo_conc, c.concepto, c.alias, c.consecutivo, ce.ajustes, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy') as fch_vig_ini, to_char(z.fecha_vig_fin,'dd/MM/yyyy') as fch_vig_fin, t.pagoxy, sum(ce.valor) as valor, cl.no_control, cl.nota_ue from sia_admin.rh_tr_plazas p, sia_admin.rh_tc_conceptos c, sia_admin.rh_tr_conc_empl ce, sia_admin.rh_tc_claves_programaticas z, sia_admin.rh_tr_cuentas_por_liquidar cl, sia_admin.rh_tc_tipo_plazas tp, sia_admin.rh_tc_prog_contratas pc, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_talon t where cl.consecutivo_cl = {0} and p.unidad_ejecutora = cl.unidad_ejecutora and z.cons_cveprog = dcl.cons_cveprog and cl.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.unidad_ejecutora='{1}' and p.plaza = t.plaza and p.ejercicio = t.ejercicio and p.periodo = t.periodo and p.tipo_plaza = tp.tipo_plaza and tp.tipo_contrata = {2} and pc.tipo_contrata = tp.tipo_contrata and t.estatus_pago in (0,2) and t.pagoxy = 0 and ce.nomina=cl.nomina  and t.nomina = ce.nomina and t.num_empleado = ce.num_empleado and ce.tipo_conc=c.tipo_conc and ce.concepto=c.concepto and ce.consecutivo=c.consecutivo and to_date(c.vigencia_desde,'yyyyMMdd')<=to_date(ce.aplico_desde,'yyyyMMdd') and to_date(c.vigencia_hasta,'yyyyMMdd')>=to_date(ce.aplico_hasta,'yyyyMMdd') and p.cons_cveprog = z.cons_cveprog and c.tipo_conc in ('D','P') and ce.tipo_conc||ce.concepto||ce.consecutivo<>'D029A' and ce.tipo_conc||ce.concepto||ce.consecutivo<>'P007A' and ce.tipo_conc||ce.concepto||ce.consecutivo<>'P002A' and ce.tipo_conc||ce.concepto<>'D062' and ce.tipo_conc||ce.concepto<>'D017' and ce.tipo_conc||ce.concepto<>'D081' and ce.ajustes in ('C','C2','N','N2','O','O2') and ce.valor<>0 group by cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, ce.partida, c.tipo_conc, c.concepto, c.alias, c.consecutivo, ce.ajustes, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy'), to_char(z.fecha_vig_fin,'dd/MM/yyyy'), t.pagoxy, cl.no_control, cl.nota_ue union select cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, decode(tp.tipo_contrata,'1',1103,1202) as partida, 'P' as tipo_conc, decode(tp.tipo_contrata,'1','007','002') as concepto, decode(tp.tipo_contrata,'1','007','002') as alias, 'A' as consecutivo, 'P' as ajustes, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy') as fch_vig_ini, to_char(z.fecha_vig_fin,'dd/MM/yyyy') as fch_vig_fin, t.pagoxy, sum(decode(ce.tipo_conc,'D',ce.valor*-1,ce.valor)) as valor, cl.no_control, cl.nota_ue from sia_admin.rh_tr_plazas p, sia_admin.rh_tc_conceptos c, sia_admin.rh_tr_conc_empl ce, sia_admin.rh_tc_claves_programaticas z, sia_admin.rh_tr_cuentas_por_liquidar cl, sia_admin.rh_tc_tipo_plazas tp, sia_admin.rh_tc_prog_contratas pc, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_talon t where cl.consecutivo_cl = {0} and p.unidad_ejecutora = cl.unidad_ejecutora and z.cons_cveprog = dcl.cons_cveprog and cl.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.unidad_ejecutora='{1}' and p.plaza = t.plaza and p.ejercicio = t.ejercicio and p.periodo = t.periodo and p.tipo_plaza = tp.tipo_plaza and tp.tipo_contrata = {2} and pc.tipo_contrata = tp.tipo_contrata and t.estatus_pago in (0,2) and t.pagoxy = 2 and ce.nomina=cl.nomina  and t.nomina = ce.nomina and t.num_empleado = ce.num_empleado     and ce.tipo_conc=c.tipo_conc and ce.concepto=c.concepto and ce.consecutivo=c.consecutivo and to_date(c.vigencia_desde,'yyyyMMdd')<=to_date(ce.aplico_desde,'yyyyMMdd') and to_date(c.vigencia_hasta,'yyyyMMdd')>=to_date(ce.aplico_hasta,'yyyyMMdd') and p.cons_cveprog = z.cons_cveprog and c.tipo_conc in ('D','P') and ce.tipo_conc||ce.concepto||ce.consecutivo in ('P007A','P002A','D017A','D017M') and ce.ajustes in ('P','O','P2','O2') and ce.valor<>0 group by cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, ce.partida, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy'), to_char(z.fecha_vig_fin,'dd/MM/yyyy'), t.pagoxy, cl.no_control, cl.nota_ue union select cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, decode(tp.tipo_contrata,'1',1103,1202) as partida, 'P' as tipo_conc, decode(tp.tipo_contrata,'1','007','002') as concepto, decode(tp.tipo_contrata,'1','007','002') as alias, 'A' as consecutivo, 'N' as ajustes, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy') as fch_vig_ini, to_char(z.fecha_vig_fin,'dd/MM/yyyy') as fch_vig_fin, t.pagoxy, sum(decode(ce.tipo_conc,'D',ce.valor*-1,ce.valor)) as valor, cl.no_control, cl.nota_ue from sia_admin.rh_tr_plazas p, sia_admin.rh_tc_conceptos c, sia_admin.rh_tr_conc_empl ce, sia_admin.rh_tc_claves_programaticas z, sia_admin.rh_tr_cuentas_por_liquidar cl, sia_admin.rh_tc_tipo_plazas tp, sia_admin.rh_tc_prog_contratas pc, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_talon t where cl.consecutivo_cl = {0} and p.unidad_ejecutora = cl.unidad_ejecutora and z.cons_cveprog = dcl.cons_cveprog and cl.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.unidad_ejecutora='{1}' and p.plaza = t.plaza and p.ejercicio = t.ejercicio and p.periodo = t.periodo and p.tipo_plaza = tp.tipo_plaza and tp.tipo_contrata = {2} and pc.tipo_contrata = tp.tipo_contrata and t.estatus_pago in (0,2) and t.pagoxy = 0 and ce.nomina=cl.nomina and t.nomina = ce.nomina and t.num_empleado = ce.num_empleado and ce.tipo_conc=c.tipo_conc and ce.concepto=c.concepto and ce.consecutivo=c.consecutivo and to_date(c.vigencia_desde,'yyyyMMdd')<=to_date(ce.aplico_desde,'yyyyMMdd') and to_date(c.vigencia_hasta,'yyyyMMdd')>=to_date(ce.aplico_hasta,'yyyyMMdd') and p.cons_cveprog = z.cons_cveprog and c.tipo_conc in ('D','P') and ce.tipo_conc||ce.concepto||ce.consecutivo in ('P007A','P002A','D017A','D017M') and ce.ajustes in ('C','C2','N','N2','O','O2') and ce.valor<>0 group by cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, ce.partida, c.codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy'), to_char(z.fecha_vig_fin,'dd/MM/yyyy'), t.pagoxy, cl.no_control, cl.nota_ue    union select cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, decode(tp.tipo_contrata,'1',1103,1202) as partida, 'D' as tipo_conc, '029' as concepto, '029' as alias, 'A' as consecutivo, 'P' as ajustes, '8-1' as codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy') as fch_vig_ini, to_char(z.fecha_vig_fin,'dd/MM/yyyy') as fch_vig_fin, t.pagoxy, sum(decode(ce.tipo_conc||ce.concepto||ce.consecutivo||ce.ajustes,'X103AA',valor*-1,valor)) as valor, cl.no_control, cl.nota_ue from sia_admin.rh_tr_plazas p, sia_admin.rh_tc_conceptos c, sia_admin.rh_tr_conc_empl ce, sia_admin.rh_tc_claves_programaticas z, sia_admin.rh_tr_cuentas_por_liquidar cl, sia_admin.rh_tc_tipo_plazas tp, sia_admin.rh_tc_prog_contratas pc, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_Talon t where cl.consecutivo_cl = {0} and p.unidad_ejecutora = cl.unidad_ejecutora and z.cons_cveprog = dcl.cons_cveprog and cl.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.unidad_ejecutora='{1}' and p.plaza = t.plaza and p.ejercicio = t.ejercicio and p.periodo = t.periodo and p.tipo_plaza = tp.tipo_plaza and tp.tipo_contrata = {2} and pc.tipo_contrata = tp.tipo_contrata and t.estatus_pago in (0,2) and t.pagoxy = 2 and t.nomina = ce.nomina and t.num_empleado = ce.num_empleado and ce.nomina=cl.nomina and ce.tipo_conc=c.tipo_conc and ce.concepto=c.concepto and ce.consecutivo=c.consecutivo and ce.tipo_conc in ('D','X') and ce.tipo_conc||ce.concepto||ce.consecutivo in ('D029A','D017B') and ce.ajustes in ('P','O','P2','O2') and ce.valor<>0 and to_date(c.vigencia_desde,'yyyyMMdd')<=to_date(ce.aplico_desde,'yyyyMMdd') and to_date(c.vigencia_hasta,'yyyyMMdd')>=to_date(ce.aplico_hasta,'yyyyMMdd') and p.cons_cveprog = z.cons_cveprog group by cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy'), to_char(z.fecha_vig_fin,'dd/MM/yyyy'), t.pagoxy, cl.no_control, cl.nota_ue union select cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, decode(tp.tipo_contrata,'1',1103,1202) as partida, 'D' as tipo_conc, '029' as concepto, '029' as alias, 'A' as consecutivo, 'N' as ajustes, '8-1' as codigo_contable, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy') as fch_vig_ini, to_char(z.fecha_vig_fin,'dd/MM/yyyy') as fch_vig_fin, t.pagoxy, sum(decode(ce.tipo_conc||ce.concepto||ce.consecutivo||ce.ajustes,'X103AA',valor*-1,valor)) as valor, cl.no_control, cl.nota_ue from sia_admin.rh_tr_plazas p, sia_admin.rh_tc_conceptos c, sia_admin.rh_tr_conc_empl ce, sia_admin.rh_tc_claves_programaticas z, sia_admin.rh_tr_cuentas_por_liquidar cl, sia_admin.rh_tc_tipo_plazas tp, sia_admin.rh_tc_prog_contratas pc, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_talon t where cl.consecutivo_cl = {0} and p.unidad_ejecutora = cl.unidad_ejecutora and z.cons_cveprog = dcl.cons_cveprog and cl.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.unidad_ejecutora='{1}' and p.plaza = t.plaza and p.ejercicio = t.ejercicio and p.periodo = t.periodo and p.tipo_plaza = tp.tipo_plaza and tp.tipo_contrata = {2} and pc.tipo_contrata=tp.tipo_contrata and t.estatus_pago in (0,2) and t.pagoxy = 0 and t.nomina = ce.nomina and t.num_empleado = ce.num_empleado and ce.tipo_conc in ('D','X') and ((ce.tipo_conc||ce.concepto||ce.consecutivo in ('D029A','D017B') and (ce.ajustes in ('C','C2','N','N2','O','O2'))) or (ce.tipo_conc||ce.concepto||ce.consecutivo||ce.ajustes in ('X103AA','X103AA2'))) and ce.nomina=cl.nomina and ce.tipo_conc=c.tipo_conc and ce.concepto=c.concepto and ce.consecutivo=c.consecutivo and to_date(c.vigencia_desde,'yyyyMMdd')<=to_date(ce.aplico_desde,'yyyyMMdd') and to_date(c.vigencia_hasta,'yyyyMMdd')>=to_date(ce.aplico_hasta,'yyyyMMdd') and p.cons_cveprog = z.cons_cveprog and ce.valor<>0 group by cl.consecutivo_cl, p.unidad_ejecutora, z.clave_programatica, p.entidad, p.ambito, tp.tipo_contrata, to_char(z.fecha_vig_ini,'dd/MM/yyyy'), to_char(z.fecha_vig_fin,'dd/MM/yyyy'), t.pagoxy, cl.no_control, cl.nota_ue order by unidad_ejecutora, clave_programatica, entidad, ambito, tipo_contrata, partida, tipo_conc, concepto) group by consecutivo_cl, unidad_ejecutora, clave_programatica, entidad, ambito, partida, tipo_conc, concepto, alias, consecutivo, codigo_contable, tipo_contrata, fch_vig_ini, fch_vig_fin, no_control, nota_ue

#query para impresion de la Cuenta por liquidar del pago de servicios personales
serviciosPersonales.query.impresion = select distinct dcl.consecutivo_cl,dcl.unidad_ejecutora,no_control, fecha_exp,fecha_pago,estatus,fecha_estatus, l.nomina,nota_bancaria,nota_ue,tipo_movto, l.docto_ref,l.beneficiario, cb.num_cuenta cta_pagadora from sia_admin.rh_tr_detalle_ctas_liquidar dcl inner join sia_admin.rh_tr_cuentas_por_liquidar l on l.consecutivo_cl = dcl.consecutivo_cl inner join sia_admin.rh_tc_uni_ejecutoras ue on dcl.unidad_ejecutora = ue.unidad_ejecutora inner join  sia_admin.rh_tc_claves_programaticas cp on cp.cons_cveprog = dcl.cons_cveprog inner join rf_tesoreria.vc_cuentas_bancarias_rh cb on cb.id_cuenta=l.cta_pagadora where dcl.consecutivo_cl={0}

#query para la solicitud de movimientos para el pago de servicios personales
serviciosPersonales.query.solicitudMovimiento = select dsm.descripcion, mb.consecutivo_mov, mb.no_solicitud, mb.fecha_pago, mbdc.consecutivo, cxl.no_control, cb.num_cuenta cta_pagadora, cxl.beneficiario, cxl.nota_ue, e.neto, ue.nombre_corto, ue.unidad_ejecutora, bd.beneficiario_id from sia_admin.rh_tr_mov_bancarios mb inner join sia_admin.rh_tr_mov_bancarios_det mbdc on mbdc.consecutivo_mov=mb.consecutivo_mov and mb.consecutivo_mov={0} inner join sia_catalogos.TC_TIPO_DOCUMENTO_SOL_MOV dsm on dsm.tipo_doc_id= mbdc.tipo_doc_id inner join sia_admin.rh_tr_cuentas_por_liquidar cxl on cxl.consecutivo_cl=mbdc.consecutivo inner join rf_tesoreria.vc_cuentas_bancarias_rh cb on cb.id_cuenta= cxl.cta_pagadora inner join sia_admin.rh_tc_uni_ejecutoras ue on cxl.unidad_ejecutora=ue.unidad_ejecutora inner join RF_TC_BENEFICIARIOS_DOCTOS bd on ue.unidad_ejecutora=bd.beneficiario_pago_id inner join (select l.consecutivo_cl, num_empleado_autorizo1, num_empleado_elaboro1, sum(e.valor) as neto from sia_admin.rh_tr_conc_empl e, sia_admin.rh_tr_cuentas_por_liquidar l, sia_admin.rh_tr_plazas p, sia_admin.rh_tr_detalle_ctas_liquidar dcl, sia_admin.rh_tr_cabezapie_talon t where l.consecutivo_cl = dcl.consecutivo_cl and p.cons_cveprog = dcl.cons_cveprog and p.unidad_ejecutora = dcl.unidad_ejecutora and p.entidad = dcl.entidad and p.ambito = dcl.ambito and p.pais = dcl.pais and t.plaza = p.plaza and t.ejercicio = p.ejercicio and t.periodo = p.periodo and t.estatus_pago in (0,2) and t.nomina = e.nomina and l.nomina=e.nomina and e.num_empleado = t.num_empleado and ((e.tipo_conc='X' and e.concepto='103' and consecutivo='A') or (e.tipo_conc='X' and e.concepto='062' and e.consecutivo='A')) and (e.ajustes in ('P','O','P2','O2') ) group by l.consecutivo_cl, num_empleado_autorizo1, num_empleado_elaboro1)e on e.consecutivo_cl=cxl.consecutivo_cl

#query para cambiar el estatus de la solicitud de movimientos bancarios
serviciosPersonales.query.actualizarEstatusSolicitudMov = update sia_admin.rh_tr_mov_bancarios set estatus_sol_id={0} where consecutivo_mov={1}

#query para insertar seguimiento de la solicitud de movimientos bancarios
serviciosPersonales.query.insertarSeguimientoSolicitudMov =insert into sia_admin.rh_tr_mov_bancarios_historial (consecutivo_mov, estatus, fecha_estatus, num_empleado_actualizo, observaciones) values ({0},{1},{2},{3},{4})

##### querys para las operaciones del oficio de consolidado de ministraciones ######
#####################################################################################

#Query para actualizar el numero de oficio
solicitudRecursos.query.oficioConsolidado= update RF_TR_OFICIO_CONSOLIDADO set no_oficio={0} where id_oficio_cons ={1}

#Query para agregar una CXLC al oficio de consolidad ya existente
solicitudRecursos.query.oficioConsolidadoAgregarCxlc= insert into RF_TR_DETALLE_OFICIO (id_no_cxlc,id_oficio_cons) values ({0},{1})

#query para elemininar CXL del oficio de consolidado
solicitudRecursos.query.oficioConsolidadoEliminarCxlc= delete from  RF_TR_DETALLE_OFICIO where id_no_cxlc={0} and id_oficio_cons=id_oficio_cons={1}

#query para validar CXL del oficio de consolidado
solicitudRecursos.query.oficioConsolidadoValidarCxlc = select count(*)  into total from  RF_TR_DETALLE_OFICIO where id_no_cxlc={0}
######################################
solicitudRecursos.query.actualizarOficioConsolidado= update RF_TR_OFICIO_CONSOLIDADO set no_oficio={0},destinatario_id={1},observaciones={2},observaciones1={3},observaciones2={4} where id_oficio_cons={5}

solicitudRecursos.query.actualizarOficioConsolidadoFirmas= delete from RF_TR_FIRMAS_OFICIO_CONS  where id_oficio_cons={1}

solicitudRecursos.query.actualizarOficioConsolidadoFirmas1= insert into RF_TR_FIRMAS_OFICIO_CONS (id_oficio_cons,id_firma) values ({0},{1})

solicitudRecursos.query.actualizarOficioConsolidadoCcp= insert into RF_TR_COPIA_OFIC_CONS (id_oficio_cons,id_firma,id_ccp) values ({0},{1},{2})

solicitudRecursos.query.actualizarOficioConsolidadoCcpExt= insert into RF_TR_COPIA_OFIC_CONS_EXt (id_oficio_cons,destinatario_id,id_ccpe) values ({0},{1},{2})

##
solicitudRecursos.query.consultarOficioConsolidado= select oc.ID_OFICIO_CONS, oc.NO_OFICIO, oc.asunto, oc.FECHA_ELABORACION, pe.PREFIJO, pe.NOMBRE, pe.AP_PATERNO, pe.AP_MATERNO, pe.PUESTO, oc.observaciones, oc.observaciones1, oc.observaciones2, fa.PREFIJO_NOMBRE, emp.NOMBRES, emp.APELLIDO_PAT, emp.APELLIDO_MAT, emp.e_mail_trabajo, fa.PIE_FIRMA, emp.num_empleado, di.telefono, cl.calle, cl.no_exterior, cl.colonia, cl.codigo_postal, uf.modulo_edificio, uf.piso, e.descripcion entidad, m.descripcion municipio, extension from RF_TR_FIRMAS_AUT fa, sia_admin.rh_tr_empleados emp, RF_TR_FIRMAS_OFICIO_CONS foc, RF_TR_OFICIO_CONSOLIDADO oc, RF_TC_DESTINATARIO_OFICIO_CONS doc, RF_TC_PERSONAL_EXTERNO pe, RF_TC_DATOS_INEGI_CONTA di, sia_admin.rh_tc_centros_laborales cl, sia_admin.rh_tr_ubicaciones_fisicas uf, sia_admin.rh_tc_entidades e, sia_admin.rh_tc_municipios m, sia_admin.rh_tr_dir_telefonicos dt, sia_admin.rh_tc_telefonos t, sia_admin.rh_tc_servicios_tel st where oc.ID_OFICIO_CONS={0} and foc.ID_OFICIO_CONS=oc.ID_OFICIO_CONS and foc.ID_FIRMA=fa.ID_FIRMA and emp.NUM_EMPLEADO=fa.ID_EMPLEADO and oc.DESTINATARIO_ID=doc.DESTINATARIO_ID and doc.ID_EMPLEADO_EXT=pe.ID_EMPLEADO_EXT and doc.id_empleado_ext=pe.id_empleado_ext and cl.centro_laboral=emp.centro_laboral and cl.centro_laboral=uf.centro_laboral and emp.ubicacion_fisica =  uf.ubicacion_fisica and e.entidad= emp.entidad_residir_en  and  m.municipio = emp.municipio_residir_en  and m.entidad = emp.entidad_residir_en and dt.consecutivo = t.consecutivo and dt.num_empleado =emp.num_empleado and t.servicio = 1 and rownum<2
##### querys para las operaciones del oficio de aviso de reintegro ######
#####################################################################################
solicitudRecursos.query.oficioReintegro= update RF_TR_OFICIO_AVISO_REINTEGRO set no_oficio={0} where oficio_aviso_id ={1}

##
cuentaLiquidar.query.imprimirCxl = select cl.NO_CXL_ID, cl.NO_CXL, to_char(FECHA_EXPEDICION,'dd mm yyyy')FECHA_EXPEDICION, to_char(FECHA_PAGO,'dd mm yyyy')FECHA_PAGO, cb.NUM_CUENTA, IMPORTE, cl.UNIDAD_EJECUTORA || ' ' || upper(ue.DESCRIPCION) UNIDAD_EJECUTORA, upper(cbb.DESCRIPCION) BANCO, upper(OBSERVACIONES) OBSERVACIONES_BANCO, upper(OBSERVACIONES_2) OBSERVACIONES_UNIDAD, FOLIO_SEGURIDAD, upper(fcxl.EMPLEADO_VOBO) EMPLEADO_VOBO , upper(fcxl.PUESTO_VOBO) PUESTO_VOBO , upper(fcxla.EMPLEADO_AUT)EMPLEADO_AUT , upper(fcxla.PUESTO_AUT) PUESTO_AUT from RF_TR_CUENTA_LIQUIDAR cl inner join RF_TESORERIA.TR_CUENTAS_BANCARIAS cb on cl.ID_CUENTA_ORIGEN = cb.ID_CUENTA inner join SIA_CATALOGOS.TC_UNI_EJECUTORAS ue on cl.UNIDAD_EJECUTORA = ue.UNIDAD_EJECUTORA inner join (select distinct tcb.ID_BANCO, b.DESCRIPCION from  RF_TESORERIA.TC_BANCOS b inner join RF_TESORERIA.TR_CUENTAS_BANCARIAS tcb on b.ID_BANCO = tcb.ID_BANCO) cbb on cb.ID_BANCO = cbb.ID_BANCO and cl.ID_CUENTA_ORIGEN = cb.ID_CUENTA inner join (select fa.PREFIJO_NOMBRE || ' ' || vc.NOMBRES || ' ' || vc.APELLIDO_PAT || ' ' || vc.APELLIDO_MAT as EMPLEADO_VOBO, fa.PUESTO as PUESTO_VOBO, fa.ID_FIRMA, tfcl.NO_CXL_ID from RF_TR_FIRMAS_AUT fa inner join SIA_CATALOGOS.VC_EMPLEADOS vc on vc.NUM_EMPLEADO = fa.ID_EMPLEADO inner join RF_TR_FIRMAS_CXL tfcl on fa.ID_FIRMA = tfcl.ID_FIRMA where ID_MODALIDAD = 3  and tfcl.ID_FIRMA = fa.ID_FIRMA) fcxl on fcxl.NO_CXL_ID = cl.NO_CXL_ID inner join (select faa.PREFIJO_NOMBRE || ' ' || vca.NOMBRES || ' ' || vca.APELLIDO_PAT || ' ' || vca.APELLIDO_MAT as EMPLEADO_AUT, faa.PUESTO as PUESTO_AUT, faa.ID_FIRMA, tfcla.NO_CXL_ID from RF_TR_FIRMAS_AUT faa inner join SIA_CATALOGOS.VC_EMPLEADOS vca on vca.NUM_EMPLEADO = faa.ID_EMPLEADO inner join RF_TR_FIRMAS_CXL tfcla on faa.ID_FIRMA = tfcla.ID_FIRMA where ID_MODALIDAD = 4  and tfcla.ID_FIRMA = faa.ID_FIRMA) fcxla on fcxla.NO_CXL_ID = cl.NO_CXL_ID where cl.NO_CXL_ID = {0}

##Query cuadro ministracion
reportes.query.imprimirCuadroMinistracion = select ID_FLUJO_PPTRIO,ID_MES,ID_TIPO_MINISTRACION,PARTIDA,DESCRIPCION,EJERCICIO,DESCRIPCION_MINIS,DESCRIPCION_MES,sum(IMPORTE1) +sum (IMPORTE2)+ sum(IMPORTE3) REGULAR1,sum(IMPORTE1) REGULAR2,sum(IMPORTE_CENSO1)+ sum(IMPORTE_CENSO2)+  sum(IMPORTE_CENSO3)  CENSO_AGROPECURIO1,sum(IMPORTE_CENSO1)  CENSO_AGROPECURIO2,FECHA_PAGO1,FECHA_PAGO2,DIA2,MES2,ANIO2,DIA,MES,ANIO from (  select ifp.ID_FLUJO_PPTRIO, ifp.ID_MES, fp.ID_REGISTRO, ifp.ID_TIPO_MINISTRACION, fp.EJERCICIO, fp.proyecto, fp.IMPORTE_MINISTRACION, tcm.descripcion DESCRIPCION_MINIS, m.descripcion DESCRIPCION_MES, fp.IMPORTE_MINISTRACION, ID_NO_CXLC, NVL(FECHA_PAGO1,'') FECHA_PAGO1, case when (fp.PROYECTO='R010' and fp.partida=4301 and (FECHA_PAGO2 is not null and FECHA_PAGO1 != FECHA_PAGO2) ) then fp.IMPORTE_MINISTRACION/2 else 0 end IMPORTE_CENSO1, case when (fp.PROYECTO='R010' and fp.partida=4301 and (FECHA_PAGO2 is  null or FECHA_PAGO1 = FECHA_PAGO2) ) then fp.IMPORTE_MINISTRACION else 0 end IMPORTE_CENSO2, case when (fp.PROYECTO='R010' and fp.partida!=4301 ) then fp.IMPORTE_MINISTRACION else 0 end IMPORTE_CENSO3, case when (fp.PROYECTO!='R010' and fp.partida=4301 and (FECHA_PAGO2 is not null and FECHA_PAGO1 != FECHA_PAGO2)) then fp.IMPORTE_MINISTRACION/2 else 0  end IMPORTE1, case when (fp.PROYECTO!='R010' and fp.partida=4301 and (FECHA_PAGO2 is  null or FECHA_PAGO1 = FECHA_PAGO2) ) then fp.IMPORTE_MINISTRACION else 0  end IMPORTE2, case when (fp.PROYECTO!='R010' and fp.partida!=4301 )  then fp.IMPORTE_MINISTRACION else 0  end IMPORTE3, decode (fp.partida,4311,4301, decode(fp.partida,4312,4301, decode(fp.partida,4322,4301, decode(fp.partida,4323,4301, decode(fp.partida,4330,4301, decode(fp.partida,4332,4301, decode(fp.partida,4326,4301,fp.partida)))))))partida, decode (fp.partida,4311,'TRANSFERENCIAS PARA SERVICIOS PERSONALES', decode(fp.partida,4312,'TRANSFERENCIAS PARA SERVICIOS PERSONALES', decode(fp.partida,4322,'TRANSFERENCIAS PARA SERVICIOS PERSONALES', decode(fp.partida,4323,'TRANSFERENCIAS PARA SERVICIOS PERSONALES', decode(fp.partida,4330,'TRANSFERENCIAS PARA SERVICIOS PERSONALES',decode(fp.partida,4332,'TRANSFERENCIAS PARA SERVICIOS PERSONALES',decode(fp.partida,4326,'TRANSFERENCIAS PARA SERVICIOS PERSONALES',vp.DESCRIPCION)))))))DESCRIPCION,(select  distinct cxlc.FECHA_PAGO2 from RF_TR_CTA_LIQ_CERT cxlc inner join RF_TR_REL_MINIS_DETALLE_CXLC rmdc1 on cxlc.ID_NO_CXLC = rmdc1.ID_NO_CXLC  where rmdc1.id_flujo_pptrio = fp.ID_FLUJO_PPTRIO and FECHA_PAGO2 is not null) fecha_pago2, extract(day from FECHA_PAGO2) DIA2, extract(month from FECHA_PAGO2) MES2, extract(year from FECHA_PAGO2) ANIO2, extract(day from FECHA_PAGO1) DIA, extract(month from FECHA_PAGO1) MES, extract(year from FECHA_PAGO1) ANIO from  RF_TR_INDICE_FLUJOS_PPTRIOS ifp inner join RF_TC_TIPO_MINISTRACION_CXLC tcm on tcm.id_tipo_ministracion=ifp.id_tipo_ministracion inner join RF_TR_FLUJO_PRESUPUESTARIO fp on ifp.ID_FLUJO_PPTRIO = fp.ID_FLUJO_PPTRIO inner join RF_TV_PARTIDAS vp on vp.partida = fp.partida inner join tc_meses m on m.id_mes=ifp.id_mes inner join (select  distinct clc.ID_NO_CXLC, clc.FECHA_PAGO1, clc.FECHA_PAGO2, clc.ID_ESTATUS_CXLC, rmdc.ID_FLUJO_PPTRIO, rmdc.ID_REGISTRO from RF_TR_CTA_LIQ_CERT clc inner join RF_TR_REL_MINIS_DETALLE_CXLC rmdc on clc.ID_NO_CXLC = rmdc.ID_NO_CXLC) fpc on fpc.ID_FLUJO_PPTRIO = fp.ID_FLUJO_PPTRIO and fpc.ID_REGISTRO= fp.ID_REGISTRO where fp.ID_FLUJO_PPTRIO = {0}) group by ID_FLUJO_PPTRIO,ID_MES,ID_TIPO_MINISTRACION,PARTIDA,DESCRIPCION,EJERCICIO,DESCRIPCION_MINIS,DESCRIPCION_MES,FECHA_PAGO1,FECHA_PAGO2,DIA2,MES2,ANIO2,DIA,MES,ANIO
##Query para registrar registro contable
registroContable.query.registrarCuentaContable = insert into RF_TR_CUENTAS_CONTABLES (cuenta_contable_id, cuenta_mayor_id, cuenta_contable, nivel, descripcion, fecha_vig_ini, fecha_vig_fin, ene_cargo, feb_cargo, mar_cargo, abr_cargo, may_cargo, jun_cargo, jul_cargo, ago_cargo, sep_cargo, oct_cargo, nov_cargo, dic_cargo, ene_abono, feb_abono, mar_abono, abr_abono, may_abono, jun_abono, jul_abono, ago_abono, sep_abono, oct_abono, nov_abono, dic_abono, codigo_registro, id_catalogo_cuenta) values ({0},{1},'{2}',{3},'{4}',to_date('{5}','yyyymmdd'),to_date('{6}','yyyymmdd'),{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{7},{8},{9})
registroContable.query.modificarCuentaContable = update RF_TR_CUENTAS_CONTABLES  set descripcion={0} where cuenta_contable_id={1}
registroContable.query.validaRegistro = select * from RF_TR_CUENTAS_CONTABLES where cuenta_contable='{0}' and {1} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and id_catalogo_cuenta = {2}
registroContable.query.cuentaMayorId = select cuenta_mayor_id from RF_TC_CLASIFICADOR_CUENTAS where cuenta_mayor='{0}'
registroContable.query.reporteCuentasContables = select cuenta_contable_id, cuenta_mayor_id, cuenta_contable, descripcion from RF_TR_CUENTAS_CONTABLES where ({0} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin)) and ({1}) and (substr(cuenta_contable,{2},{3})='{4}' or substr(cuenta_contable,{2},{3})='{5}' or substr(cuenta_contable,{2},{3})='{6}') and id_catalogo_cuenta= {7} group by cuenta_contable, cuenta_mayor_id,descripcion, cuenta_contable_id order by cuenta_contable
registroContable.query.cuentasContablesSaldo = select cc.cuenta_mayor_id, cuenta_contable_id, cuenta_contable, upper(cc.descripcion) descripcion, cla.naturaleza, {0}_cargo cargos_per, {0}_abono abonos_per, {0}_cargo_acum cargos_acum, {0}_abono_acum abonos_acum, case cla.naturaleza when 'D' then ({0}_cargo_acum - {0}_abono_acum)-({0}_cargo - {0}_abono) else ({0}_abono_acum - {0}_cargo_acum)-({0}_abono - {0}_cargo) end saldo_anterior, case cla.naturaleza when 'D' then ({0}_cargo_acum - {0}_abono_acum) else ({0}_abono_acum - {0}_cargo_acum) end saldo_actual from rf_tr_cuentas_contables cc inner join rf_tc_clasificador_cuentas cla on cc.cuenta_mayor_id = cla.cuenta_mayor_id where {1} between extract(year from cc.fecha_vig_ini) and extract(year from cc.fecha_vig_fin) and ({2}) and (substr(cc.cuenta_contable,{3},{4})='{5}' or substr(cc.cuenta_contable,{3},{4})='{6}' or substr(cc.cuenta_contable,{3},{4})='{7}') and id_catalogo_cuenta = {8} order by cuenta_contable
registroContable.query.cuentasContablesExcel= select siafm_conta.EXPORTARCLAVE(cc.cuenta_mayor_id, cuenta_contable) cuenta, upper(cc.descripcion) descripcion, {0}_cargo cargos_per, {0}_abono abonos_per, {0}_cargo_acum cargos_acum, {0}_abono_acum abonos_acum, case cla.naturaleza when 'D' then ({0}_cargo_acum - {0}_abono_acum)-({0}_cargo - {0}_abono) else ({0}_abono_acum - {0}_cargo_acum)-({0}_abono - {0}_cargo) end saldo_anterior, case cla.naturaleza when 'D' then ({0}_cargo_acum - {0}_abono_acum) else ({0}_abono_acum - {0}_cargo_acum) end saldo_actual from rf_tr_cuentas_contables cc inner join rf_tc_clasificador_cuentas cla on cc.cuenta_mayor_id = cla.cuenta_mayor_id where {1} between extract(year from cc.fecha_vig_ini) and extract(year from cc.fecha_vig_fin) and ({2}) and (substr(cc.cuenta_contable,{3},{4})='{5}' or substr(cc.cuenta_contable,{3},{4})='{6}' or substr(cc.cuenta_contable,{3},{4})='{7}') and id_catalogo_cuenta = {8} order by cuenta_contable
registroContable.query.borrar = select * from RF_TR_CUENTAS_CONTABLES where ={0}
registroContable.query.ConsultarCuentaContable = select cuenta_contable_id, cuenta_contable, descripcion from rf_tr_cuentas_contables where cuenta_contable like '{0}%' and {1} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and id_catalogo_cuenta = {2}
registroContable.query.consultarEstadoCuenta = select cuenta_contable_id, cuenta_contable, cla.naturaleza, {0}_cargo cargos_per, {0}_abono abonos_per, ({4} + {0}_cargo) cargos_acum, ({5} + {0}_abono) abonos_acum, case cla.naturaleza when 'D' then ({2} - {3} + {0}_cargo) else ({0}_cargo) end cargos_acumm, case cla.naturaleza when 'A' then ({3} - {2} + {0}_abono) else ({0}_abono) end abonos_acumm, case cla.naturaleza when 'D' then ({2} - {3}) else ({3} - {2}) end saldo_anterior, case cla.naturaleza when 'D' then (({2} + {0}_cargo) - ({3} + {0}_abono)) else (({3} + {0}_abono) - ({2} + {0}_cargo)) end saldo_actual from rf_tr_cuentas_contables cc inner join rf_tc_clasificador_cuentas cla on cc.cuenta_mayor_id = cla.cuenta_mayor_id where cuenta_contable_id = {1}
registroContable.query.estadoCuenta = select cuenta_contable_id,cuenta_contable,cla.naturaleza,{0} cargos_per,{1} abonos_per,({3} + {0}) cargos_acum,({4} + {1}) abonos_acum,case cla.naturaleza when 'D' then ({5} - {6} + {0}) else ({0}) end cargos_acumm,case cla.naturaleza when 'A' then ({6} - {5} + {1}) else ({1}) end abonos_acumm,case cla.naturaleza when 'D' then ({3} - {4}) else ({4} - {3}) end saldo_anterior,case cla.naturaleza when 'D' then (({3} + {0}) - ({4} + {1})) else (({4} + {1}) - ({3} + {0})) end saldo_actual from rf_tr_cuentas_contables cc inner join rf_tc_clasificador_cuentas cla on cc.cuenta_mayor_id = cla.cuenta_mayor_id where cuenta_contable_id = {2}
registroContable.query.consultarEstadoCuentaDiferencias =  select pl.cuenta_contable_id, pl.abreviatura, pl.unientamb||' '||pl.consecutivo consecutivo, pl.referencia_general,pl.fecha_afectacion, pl.concepto, pl.referencia, pl.importe, pl.operacion_contable_id,pl.descripcion,pl.poliza_referencia, pl.clasificacion_poliza_id from (select cc.cuenta_contable_id, cc.cuenta_contable from rf_tr_cuentas_contables cc where cc.cuenta_contable like '{4}' and (extract(year from fecha_vig_ini)={5}) and cc.id_catalogo_cuenta = {3}) ctas right join (select cc.cuenta_contable_id, tpl.abreviatura, tpl.abreviatura||to_char(pl.consecutivo,'00000') consecutivo, pl.unidad_ejecutora || ' ' || lpad(pl.entidad||pl.ambito,3,0) unientamb, pl.referencia referencia_general, to_char(pl.fecha,'dd/MM/yyyy') fecha_afectacion, pl.concepto, dpl.referencia ||' '|| ch.beneficiario referencia, dpl.importe, opc.operacion_contable_id, opc.descripcion,pl.poliza_referencia, pl.clasificacion_poliza_id from rf_tr_polizas pl left join rf_tr_cheques ch on pl.poliza_id=ch.poliza_id inner join rf_tc_tipos_polizas tpl on pl.tipo_poliza_id = tpl.tipo_poliza_id inner join rf_tr_detalle_poliza dpl on dpl.poliza_id = pl.poliza_id inner join rf_tr_cuentas_contables cc on cc.cuenta_contable_id = dpl.cuenta_contable_id inner join rf_tc_operaciones_contables opc on opc.operacion_contable_id = dpl.operacion_contable_id and to_date(to_char(pl.fecha, 'yyyyMMdd'), 'yyyyMMdd') between to_date('{0}','yyyyMMdd') and to_date('{1}','yyyyMMdd') {6} and dpl.cuenta_contable_id in (select ic.cuenta_contable_id from rf_tr_cuentas_contables ic where ic.cuenta_contable like '{4}' and (extract(year from ic.fecha_vig_ini) = {5}) and ic.id_catalogo_cuenta = {3}) and cc.id_catalogo_cuenta = {3} order by fecha_afectacion,(tpl.abreviatura || to_char(pl.consecutivo, '00000'))) pl on ctas.cuenta_contable_id = pl.cuenta_contable_id
###registroContable.query.obtenerCuentasModificarAcumulados = select cuenta_contable_id, cuenta_contable, {0} from rf_tr_cuentas_contables where substr(cuenta_contable,{1},{2})='{3}' and {4} between to_char(fecha_vig_ini,'yyyyMMdd') and to_char(fecha_vig_fin,'yyyyMMdd')
###registroContable.query.modificarAcumulados = update rf_tr_cuentas_contables set {0} = {0} + {1} where substr(cuenta_contable,{2},{3})='{4}' and '{5}' between to_char(fecha_vig_ini,'yyyyMMdd') and to_char(fecha_vig_fin,'yyyyMMdd')
###registroContable.query.modificarAcumuladosMesSiguiente = update rf_tr_cuentas_contables set {0} = {1}+{2} where cuenta_contable_id={3}
registroContable.query.modificarAcumuladosMesCierre = update rf_tr_cuentas_contables set {0} = {1}+{2} where cuenta_contable_id={3}
registroContable.query.obtenerCuentasModificarAcumulados = select cuenta_contable_id, cuenta_contable from rf_tr_cuentas_contables where {0} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and (cuenta_contable like '_________{1}{2}%' or cuenta_contable like '_________{1}0000%') and id_catalogo_cuenta = {3} union select cuenta_contable_id, cuenta_contable from rf_tr_cuentas_contables where {0} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and cuenta_contable like '_________0000%' and id_catalogo_cuenta = {3} order by cuenta_contable
registroContable.query.isSheet = select * from rf_tr_cuentas_contables where cuenta_contable like '{0}' and {1} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and id_catalogo_cuenta = {2}
##Query para las clase CuentaPadre
cuentaPadre.query.procesoCuentaPadre= select cuenta_contable_id,descripcion from RF_TR_CUENTAS_CONTABLES where cuenta_contable = '{0}' and {1} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and id_catalogo_cuenta = {2}
cuenta.query.registroContable = select descripcion, cuenta_contable, nivel, cuenta_mayor_id, id_catalogo_cuenta from RF_TR_CUENTAS_CONTABLES where cuenta_contable_id= {0} 
cuenta.query.configuracion = select conf_cve_cta_cont_id,cuenta_mayor_id from RF_TC_CLASIFICADOR_CUENTAS where cuenta_mayor_id = {0}
cuenta.query.detalleConfiguracion = select tamanio,agrupar,'0' caracter,descripcion,campo_compara from RF_TR_DETALLE_CONF_CVE  dcc inner join RF_TC_NIVELES_CUENTAS nc on nc.nivel_cuenta_id  = dcc.nivel_cuenta_id where id_conf_cve = {0}  order by orden
cuenta.query.consultaValida = select * from {0} where {1}
cuenta.query.nivelMaximo = select  max(nivel) nivel from RF_CONTABILIDAD.RF_TR_CUENTAS_CONTABLES where id_catalogo_cuenta = {0}
cuenta.query.borrar = delete from RF_TR_CUENTAS_CONTABLES where  cuenta_contable_id = {0}
cuenta.query.obtenerCuentaContable= select CUENTA_CONTABLE_ID,CUENTA_MAYOR_ID,CUENTA_CONTABLE,NIVEL,DESCRIPCION,to_char(FECHA_VIG_INI,'dd/mm/yyyy') FECHA_VIG_INI, to_char(FECHA_VIG_FIN,'dd/mm/yyyy')FECHA_VIG_FIN, CODIGO_REGISTRO,REGISTRO from RF_TR_CUENTAS_CONTABLES where cuenta_contable_id={0}


####Clasificador de cuentas
clasificadorCuenta.query.datos=select CUENTA_MAYOR,primeraMay(DESCRIPCION) DESCRIPCION,decode(NATURALEZA,'D','Deudora','Acreedora') NATURALEZA,to_char(FECHA_VIG_INI,'dd/mm/yyyy') FECHA_VIG_INI,to_char(FECHA_VIG_FIN,'dd/mm/yyyy') FECHA_VIG_FIN,ID_GENERO,ID_GRUPO,ID_CLASE from RF_CONTABILIDAD.RF_TC_CLASIFICADOR_CUENTAS where cuenta_mayor_id = {0}
clasificadorCuenta.query.genero=select primeraMay(DESCRIPCION) DESCRIPCION  from RF_CONTABILIDAD.RF_TC_GENERO_CLASF_CTA where id_genero = {0}
clasificadorCuenta.query.grupo=select primeraMay(DESCRIPCION) DESCRIPCION  from RF_CONTABILIDAD.RF_TC_GRUPO_CLASF_CTA where id_genero = {0} and id_grupo = {1}
clasificadorCuenta.query.clase=select primeraMay(DESCRIPCION) DESCRIPCION  from RF_CONTABILIDAD.RF_TC_CLASE_CLASIF_CTA where id_genero = {0} and id_grupo = {1} and id_clase = {2}
clasificadorCuenta.query.actualiza= update RF_TC_CLASIFICADOR_CUENTAS set DESCRIPCION='{0}',NATURALEZA='{1}',FECHA_VIG_INI=to_date('{2}','dd/MM/yyyy') where CUENTA_MAYOR_ID = {3}
clasificadorCuenta.query.borra = delete from  RF_TC_CLASIFICADOR_CUENTAS  where CUENTA_MAYOR_ID = {0}
clasificadorCuenta.query.imprimirReporte = select CUENTA_MAYOR,ID_GENERO,ID_GRUPO,ID_CLASE,DESCRIPCION,NATURALEZA,to_char(FECHA_VIG_INI,'dd') diaini,to_char(FECHA_VIG_INI,'mm') mesini,to_char(FECHA_VIG_INI,'yyyy') anioini,to_char(FECHA_VIG_FIN,'dd') diafin,to_char(FECHA_VIG_FIN,'mm') mesfin,to_char(FECHA_VIG_FIN,'yyyy') aniofin from RF_CONTABILIDAD.RF_TC_CLASIFICADOR_CUENTAS order by CUENTA_MAYOR,ID_GENERO,ID_GRUPO,ID_CLASE
clasificadorCuenta.query.buscaCuenta = select * from RF_CONTABILIDAD.RF_TR_CUENTAS_CONTABLES where CUENTA_MAYOR_ID = {0}
clasificadorCuenta.query.insertar = insert into RF_TC_CLASIFICADOR_CUENTAS (cuenta_mayor, conf_cve_mayor_id, conf_cve_cta_cont_id,descripcion, naturaleza, fecha_vig_ini, fecha_vig_fin, id_clase, id_grupo, id_genero) values('{0}', {1}, {2}, '{3}', '{4}', to_date('{5}', 'dd/MM/yyyy'), to_date('{6}', 'dd/MM/yyyy'), {7}, {8}, {9})
clasificadorCuenta.query.configuracionMaestro= select DESCRIPCION,FECHA_VIG_INI,FECHA_VIG_FIN,LONGITUD,AJUSTE,CARACTER,NIVEL_OPERACION from RF_CONTABILIDAD.RF_TR_CONFIGURA_CLAVES where id_conf_cve = {0}
clasificadorCuenta.query.configuracionDetalle= select ORDEN,TAMANIO,POSICION,AGRUPAR,NIVEL_CUENTA_ID,codigo from RF_CONTABILIDAD.RF_TR_DETALLE_CONF_CVE where ID_CONF_CVE = {0} order by ORDEN
clasificadorCuenta.query.longitudCaracter = select cuenta_contable_id from rf_tr_cuentas_contables where cuenta_contable like '{0}%' and nivel = 1 and {1} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and id_catalogo_cuenta = {2}

clasificadorCuenta.query.agregarEncabezado = insert into RF_TR_CONFIGURA_CLAVES (id_conf_cve,descripcion,fecha_vig_ini,fecha_vig_fin,longitud,ajuste,caracter,nivel_operacion) values ({0},'{1}',to_date('{2}','dd/MM/yyyy'),to_date('{3}', 'dd/MM/yyyy'),{4},{5},{6},{7})
clasificadorCuenta.query.actualizarEncabezado = update RF_TR_CONFIGURA_CLAVES set descripcion='{0}',longitud={1},ajuste={2},caracter={3},nivel_operacion={4} where id_conf_cve = {5}
clasificadorCuenta.query.actualizarClasificadorCuentas = update RF_TC_CLASIFICADOR_CUENTAS set conf_cve_cta_cont_id={0} where cuenta_mayor={1}
clasificadorCuenta.query.obtenMaximoNivel= select nvl(max(orden),0) from RF_TR_DETALLE_CONF_CVE where ID_CONF_CVE = {0}
clasificadorCuenta.query.obtenPosicion= select nvl(posicion,0),nvl(tamanio,0) from RF_TR_DETALLE_CONF_CVE where ID_CONF_CVE = {0} order by orden
clasificadorCuenta.query.borrarNivel = delete from RF_TR_DETALLE_CONF_CVE where ORDEN = {0} and ID_CONF_CVE ={1}
clasificadorCuenta.query.borrarEncabezado = delete from RF_TR_CONFIGURA_CLAVES where id_conf_cve= {0}
clasificadorCuenta.query.buscaClave= select conf_cve_cta_cont_id from rf_tc_clasificador_cuentas where cuenta_mayor_id ={0}
clasificadorCuenta.query.borraDetalleConf = delete from rf_tr_detalle_conf_cve where id_conf_cve ={0}
clasificadorCuenta.query.borraEncabezadoConf = delete from rf_tr_configura_claves where  id_conf_cve ={0}

clasificadorCuenta.query.actualizarNivel = update RF_TR_DETALLE_CONF_CVE set tamanio={0},agrupar={1},nivel_cuenta_id={2},codigo={5} where id_conf_cve={3} and orden={4}

clasificadorCuenta.query.agregarNivel = insert into RF_TR_DETALLE_CONF_CVE (orden,id_conf_cve,tamanio,posicion,agrupar,nivel_cuenta_id,codigo) values ({0},{1},{2},{3},{4},{5},'{6}')
clasificadorCuenta.query.obtenerMaxCuentaFechaAct=select max(cuenta_contable_id) cuentacontable_id from RF_TR_CUENTAS_CONTABLES where nivel=(select max(orden) from RF_TR_DETALLE_CONF_CVE dc inner join RF_TR_CONFIGURA_CLAVES cc on dc.id_conf_cve=cc.id_conf_cve where {0} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin))
clasificadorCuenta.query.crearVistaObtenerCodigo = select c.cuenta_contable_id, c.cuenta_contable, c.nivel, c.cuenta_mayor_id, cl.cuenta_mayor, d.orden, d.codigo from rf_tr_cuentas_contables c inner join rf_tc_clasificador_cuentas cl on c.cuenta_mayor_id=cl.cuenta_mayor_id inner join rf_tr_configura_claves co on cl.conf_cve_cta_cont_id=co.id_conf_cve inner join rf_tr_detalle_conf_cve d on co.id_conf_cve=d.id_conf_cve where c.cuenta_contable_id={0} and d.orden = {1}

#Polizas
procesos.polizas.obtenerFechaAfectacion=select to_char(sysdate,'yyyyMMddhh24miss') as fechaAfectacion from dual
procesos.polizas.obtenerConsecutivo=select nvl(max(consecutivo),0)+1 as CONSECUTIVO from rf_tr_polizas where unidad_ejecutora='{0}' and ambito={1} and entidad={2} and tipo_poliza_id={3} and mes={4}  and pais=147 and ejercicio={5} and id_catalogo_cuenta={6}
#procesos.polizas.obtenerCuentaContable=select cuenta_contable_id,cuenta_contable from rf_tr_cuentas_contables where {0} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and cuenta_contable like '{1}%'
procesos.polizas.obtenerMaestroOperacion=select maestro_operacion_id from  rf_tc_maestro_operaciones where unidad_ejecutora='{0}' and ambito={1} and entidad={2} and pais=147 and consecutivo={3} and id_catalogo_cuenta={4} and {5} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin)
procesos.polizas.obtenerConsecutivoGlobal=select nvl(max(global),0)+1 as consGlobal from rf_tr_polizas  pol where ejercicio={0}
procesos.polizas.eliminarDetallePoliza = delete from rf_tr_detalle_poliza where poliza_id = {0}
procesos.polizas.modificarImporteCuentaContable = update rf_tr_cuentas_contables set {0} = {0} {1} {2} where cuenta_contable_id = {3}
procesos.polizas.obtenerFechaCierreMensual=select to_char(registro,'yyyyMMdd') fecha, mes from rf_tr_cierres_mensuales where estatus_cierre_id=1  and unidad_ejecutora='{0}' and ambito={1} and entidad={2} and ejercicio={3} and mes={4} and id_catalogo_cuenta={5} and pais=147 order by  registro desc 
procesos.polizas.obtenerEstatusCierreMes=select estatus_cierre_id, c.mes from (   select max(cierre_mensual_id) cierre_mensual_id,unidad_ejecutora,entidad,ambito,ejercicio,mes from rf_tr_cierres_mensuales where  unidad_ejecutora='{0}' and entidad={1} and ambito={2} and pais=147 and ejercicio={3} and mes={4} and id_catalogo_cuenta={5} group by unidad_ejecutora,entidad,ambito,ejercicio,mes, id_catalogo_cuenta) c inner join RF_TR_CIERRES_MENSUALES cm on cm.cierre_mensual_id=c.cierre_mensual_id 
procesos.polizas.actualizarEstatus=update rf_tr_polizas set clasificacion_poliza_id={0} where poliza_id={1}
procesos.polizas.obtenerImporteCheque=select  to_char(importe,'999999999999999999.00') importe from rf_tr_cheques where poliza_id={0}
procesos.polizas.registrarCheque=insert into RF_TR_CHEQUES (CUENTA_CHEQUES_ID,CONSECUTIVO,ABREVIATURA,FECHA,IMPORTE,POLIZA_ID) values ( {0},{1}, '{2}', to_date('{3}','dd/MM/yyyy'), {4}, {5} )    
procesos.polizas.consultarPolizaDetalle=select tp.abreviatura || lpad(pl.consecutivo, 5, '0') campo1, lpad(mo.consecutivo, 2, '0') maestro_operacion, pl.fecha, pl.fecha_afectacion, pl.poliza_id poliza_id, dp.cuenta_contable_id cuenta_contable_id, cc.descripcion descripcion, dp.referencia referencia, dp.importe, oc.operacion_contable_id debe_haber, pl.concepto, pl.referencia ref_gral, he.apellido_pat || ' ' || he.apellido_mat || ' ' || he.nombres nombre, pl.num_empleado from rf_tr_detalle_poliza dp inner join rf_tr_polizas pl on pl.poliza_id = dp.poliza_id inner join rf_tr_cuentas_contables cc on dp.cuenta_contable_id = cc.cuenta_contable_id  inner join rf_tc_operaciones_contables oc on oc.operacion_contable_id = dp.operacion_contable_id inner join rf_tc_tipos_polizas tp on pl.tipo_poliza_id = tp.tipo_poliza_id inner join rf_tc_maestro_operaciones mo on pl.maestro_operacion_id = mo.maestro_operacion_id inner join sia_admin.rh_tr_empleados he on pl.num_empleado = he.num_empleado where pl.poliza_id={0}
procesos.polizas.generaDBF=SELECT che.CHEQUE_ID,che.CUENTA_CHEQUES_ID, che.CONSECUTIVO, che.ABREVIATURA, che.FECHA, che.POLIZA_ID, che.IMPORTE,p.referencia FROM RF_TR_CHEQUES che inner join RF_TR_POLIZAS p on p.poliza_id=che.poliza_id and p.unidad_ejecutora='{0}' and p.ambito={1} and p.entidad={2}
procesos.polizas.obtenerCuentaContable=select cuenta_contable_id,cuenta_contable from rf_tr_cuentas_contables where cuenta_contable='{0}' and {1} between extract(year from fecha_vig_ini) and extract(year from fecha_vig_fin) and id_catalogo_cuenta {2}

#Operaciones contables
operacionesContables.query.agregarMaestro = INSERT INTO RF_TC_MAESTRO_OPERACIONES (MAESTRO_OPERACION_ID, UNIDAD_EJECUTORA, AMBITO, PAIS, ENTIDAD, CONSECUTIVO, DESCRIPCION, FECHA_VIG_INI, FECHA_VIG_FIN, ID_CATALOGO_CUENTA) VALUES ('{0}', '{1}', '{2}', '{3}', '{4}', '{5}', '{6}', to_date('{7}','dd/MM/yyyy'), to_date('{8}','dd/MM/yyyy') ,{9})
operacionesContables.query.agregarDetalle = INSERT INTO RF_TC_DETALLE_OPERACIONES (MAESTRO_OPERACION_ID, CUENTA_CONTABLE_ID, OPERACION_CONTABLE_ID) VALUES ('{0}', '{1}', '{2}')
operacionesContables.query.imprimirOperacionContable = select maestro.maestro_operacion_id maestro_operacion, consecutivo, detalle.cuenta_contable_id, detalle.operacion_contable_id debe_haber, cta.cuenta_contable, cta.descripcion from RF_TC_MAESTRO_OPERACIONES maestro inner join RF_TC_DETALLE_OPERACIONES detalle on maestro.maestro_operacion_id = detalle.maestro_operacion_id inner join RF_TR_CUENTAS_CONTABLES cta on detalle.cuenta_contable_id = cta.cuenta_contable_id where maestro.maestro_operacion_id = '{0}'
operacionesContables.query.imprimirCuentasCheques = select lpad(ctaCheques.consecutivo,8,'0') consecutivo, upper(ctaCheques.abreviatura) abreviatura, ctaCheques.fecha_vig_ini, ctaCheques.fecha_vig_fin, estatus.descripcion,ctaBancaria.num_cuenta from RF_TC_CUENTAS_CHEQUES ctaCheques inner join RF_TC_ESTATUS_CHEQUERAS estatus on ctaCheques.estatus_cheque_id = estatus.estatus_cheque_id inner join rf_tesoreria.rf_tr_cuentas_bancarias ctaBancaria on ctaCheques.id_cuenta = ctaBancaria.id_cuenta and cuenta_cheques_id={0}
operacionesContables.query.modificarOperacion = update rf_tc_maestro_operaciones set descripcion='{0}', fecha_vig_ini=to_date('{1}','dd/MM/yy'), fecha_vig_fin=to_date('{2}','dd/MM/yyyy') where maestro_operacion_id='{3}'
operacionesContables.query.eliminarMaestro = delete from rf_tc_maestro_operaciones where maestro_operacion_id={0}
operacionesContables.query.eliminarDetalleUno = delete from rf_tc_detalle_operaciones where detalle_operacion_id = {0}
operacionesContables.query.eliminarDetalle = delete from rf_tc_detalle_operaciones where maestro_operacion_id = {0}

#Cuentas de cheques
ctasCheques.query.agregar=insert into RF_TC_CUENTAS_CHEQUES (id_cuenta,consecutivo,abreviatura,maestro_operacion_id,fecha_vig_ini,fecha_vig_fin,estatus_cheque_id,unidad_ejecutora,ambito,pais,entidad) values ({0},{1},'{2}',{3},to_date('{4}','dd/MM/yyyy'),to_date('{5}','dd/MM/yyyy'),{6},'{7}','{8}','{9}',{10})
ctasCheques.query.obtenerUltimoConsecutivo=select max(consecutivo) consecutivo from RF_TC_CUENTAS_CHEQUES
ctasCheques.query.actualizarCtasCheques=update RF_TC_CUENTAS_CHEQUES set maestro_operacion_id={1}, id_cuenta={0}, abreviatura='{2}', consecutivo={3}, fecha_vig_ini=to_date('{4}','dd/MM/yyyy'), fecha_vig_fin=to_date('{5}','dd/MM/yyyy') where cuenta_cheques_id={6}
ctasCheques.query.actualizarEstatus=update RF_TC_CUENTAS_CHEQUES set estatus_cheque_id={0} where id_cuenta={1}

procesoCierre.query.consultarCierre = select unidad_ejecutora, ambito, mes, entidad, estatus_cierre_id from RF_TR_CIERRES_MENSUALES where mes = {0} and id_catalogo_cuenta={1} order by estatus_cierre_id desc
procesocierre.query.maximoEstatusCierre = select max(registro), estatus_cierre_id from RF_TR_CIERRES_MENSUALES  where mes={0} and entidad={1} and unidad_ejecutora='{2}' and ambito={3} and id_catalogo_cuenta={4} group by estatus_cierre_id order by  estatus_cierre_id desc
procesoCierre.query.agregarCierre = insert into RF_TR_CIERRES_MENSUALES (unidad_ejecutora, ambito, pais, entidad, mes, registro, estatus_cierre_id, ejercicio, id_catalogo_cuenta) values ({0},'{1}','{2}','{3}',{4},'{5}',{6},{7}, {8})
procesoCierre.query.estatusMesAnterior = select estatus_cierre_id from RF_TR_CIERRES_MENSUALES  where mes={0} and entidad={1} and unidad_ejecutora='{2}' and ambito={3} and id_catalogo_cuenta={4} group by registro, estatus_cierre_id
procesoCierre.query.insertarCierre = INSERT INTO RF_TR_CIERRES_MENSUALES (UNIDAD_EJECUTORA, AMBITO, PAIS, ENTIDAD, MES, ESTATUS_CIERRE_ID, EJERCICIO, ID_CATALOGO_CUENTA) VALUES ('{0}', '{1}', '{2}', {3}, {4}, {5}, {6}, {7})
procesoCierre.query.getEstatusMesAnterior = select * from RF_TR_CIERRES_MENSUALES where unidad_ejecutora = '{0}' and ambito = '{1}' and pais = '{2}' and entidad = {3} and mes = {4} and estatus_cierre_id = {5} and ejercicio = {6} and id_catalogo_cuenta = {7}

cuentaMayor.query.cuentaMayorId=select cuenta_mayor_id from RF_TC_CLASIFICADOR_CUENTAS where cuenta_mayor='{0}' and fecha_vig_fin=to_date('01/01/9999', 'dd/MM/yyyy')
cuentaMayor.query.longitudClave=select conf_cve_cta_cont_id from rf_tc_clasificador_cuentas where cuenta_mayor ={0}
cuentaMayor.query.obtenerSaldosDelMes=select siafm_conta.FORMATEARCLAVE(tcc.cuenta_mayor_id,cuenta_contable), (case when tcc.naturaleza ='D' then ({0}_cargo_acum - {0}_abono_acum) else ({0}_abono_acum - {0}_cargo_acum) end) saldo_actual from rf_tr_cuentas_contables tco inner join rf_tc_clasificador_cuentas tcc on tco.cuenta_mayor_id = tcc.cuenta_mayor_id and to_char(tco.fecha_vig_ini,'yyyymmdd')<={1} and to_char(tco.fecha_vig_fin,'yyyymmdd')>={1} and nivel=1 and id_catalogo_cuenta = {2}
cuentaMayor.query.obtenerCuentaMayorId = select cl.cuenta_mayor, cl.cuenta_mayor_id, cl.conf_cve_cta_cont_id, co.longitud, co.nivel_operacion from rf_tc_clasificador_cuentas cl inner join rf_tr_configura_claves co on co.id_conf_cve=cl.conf_cve_cta_cont_id where cl.cuenta_mayor='{0}' and to_date('{1}','dd/MM/yyyy') between cl.fecha_vig_ini and cl.fecha_vig_fin
cuantaMayor.query.getCuentaMayorId= select cuenta_mayor_id from RF_TC_CLASIFICADOR_CUENTAS where cuenta_mayor='{0}' and fecha_vig_fin=to_date('01/01/9999', 'dd/MM/yyyy')

#Estados financieros
estadosFinancieros.query.ImprimirCheques=select ch.cheque_id, ch.fecha, p.referencia, ch.importe importeCheque, p.concepto, tp.abreviatura, p.consecutivo, dp.cuenta_contable_id, dp.importe, dp.operacion_contable_id from rf_tr_cheques ch inner join rf_tr_polizas p on ch.poliza_id = p.poliza_id inner join rf_tc_tipos_polizas tp on tp.tipo_poliza_id = p.tipo_poliza_id inner join rf_tr_detalle_poliza dp on dp.poliza_id = ch.poliza_id where ch.cheque_id = {0}

#Formas contables
formasContables.query.obtenerDetalleConfiguraFormas=select cf.codigo,cf.nivel,cf.esvariable,cf.signo,cf.secuencia_forma_id, sf.operacion_contable_id, sf.crear_cuenta_contable, sf.movible  from rf_tc_formas_contables fc inner join rf_tc_secuencia_forma sf on fc.forma_contable_id= sf.forma_contable_id inner join rf_tc_configura_forma cf on sf.secuencia_forma_id=cf.secuencia_forma_id where fc.forma_contable_id={0} order by cf.secuencia_forma_id,cf.nivel
formasContables.query.obtenerCuentaContableId=select cuenta_contable_id from rf_tr_cuentas_contables where cuenta_contable='{0}' and EXTRACT(YEAR FROM fecha_vig_ini) = {1} and id_catalogo_cuenta = {2}
formasContables.query.obtenerFormaContableId=select forma_contable_id from RF_TC_FORMAS_CONTABLES where forma='{0}' and unidad_ejecutora='{1}' and entidad='{2}' and ambito='{3}' and id_catalogo_cuenta={4}
formasContables.query.obtenerObtenerCaracterDeRellenoYLong=select caracter,tamanio,codigo from RF_TC_CLASIFICADOR_CUENTAS cc inner join RF_TR_CONFIGURA_CLAVES ccve on cc.conf_cve_cta_cont_id = ccve.id_conf_cve inner join RF_TR_DETALLE_CONF_CVE dcc on dcc.id_conf_cve = ccve.id_conf_cve and orden = {0} where cuenta_mayor = {1}
formasContables.query.insertarMaestroForma = INSERT INTO RF_TC_FORMAS_CONTABLES (FORMA_CONTABLE_ID, FORMA, UNIDAD_EJECUTORA, ENTIDAD, AMBITO, CONCEPTO, DOCUMENTO_FUENTE, TIPO_POLIZA_ID, ESMANUAL,ID_CATALOGO_CUENTA) VALUES {0} 
formasContables.query.insertarEnlaceForma = INSERT INTO RF_TC_SECUENCIA_FORMA (SECUENCIA_FORMA_ID, OPERACION_CONTABLE_ID, CREAR_CUENTA_CONTABLE, ACUMULAR_IMPORTE, MOVIBLE, FORMA_CONTABLE_ID) VALUES {0}
formasContables.query.insertarDetalleForma = INSERT INTO RF_TC_CONFIGURA_FORMA (CODIGO, NIVEL, SECUENCIA_FORMA_ID, ESVARIABLE, SIGNO) VALUES {0}
formasContables.query.eliminarMaestroForma = delete from rf_tc_formas_contables where forma_contable_id = {0}
formasContables.query.eliminarEnlaceForma = delete from rf_tc_secuencia_forma where forma_contable_id = {0}
formasContables.query.eliminarDetalleForma = delete from rf_tc_configura_forma where secuencia_forma_id = {0}
formasContables.query.obtenerRegistrosEnlace = select secuencia_forma_id, forma_contable_id from rf_tc_secuencia_forma where forma_contable_id = {0}
formasContables.query.obtenerRegistrosDetalle = select secuencia_forma_id, configura_forma_id from rf_tc_configura_forma where secuencia_forma_id = {0}
formasContables.query.modificarForma = update rf_tc_formas_contables set forma='{0}', concepto='{1}', documento_fuente='{2}', tipo_poliza_id='{3}', esmanual='{4}' where forma_contable_id='{5}'
formasContables.query.obtenerCuentaMayorId = select cuenta_mayor_id from RF_TC_CLASIFICADOR_CUENTAS where cuenta_mayor='{0}' and to_char(fecha_vig_ini,'yyyymmdd')<='{1}' and (to_char(fecha_vig_fin,'yyyymmdd')>='{1}' )

#Configuracion de claves
configuracionClaves.query.obtenerDetalleConfiguracionCuentaMayor=select det_conf_cve.orden, det_conf_cve.tamanio, conf_cve.CARACTER from RF_TC_CLASIFICADOR_CUENTAS cuentas inner join RF_TR_CONFIGURA_CLAVES conf_cve on cuentas.conf_cve_cta_cont_id=conf_cve.id_conf_cve inner join RF_TR_DETALLE_CONF_CVE det_conf_cve on conf_cve.id_conf_cve=det_conf_cve.id_conf_cve where cuentas.CUENTA_MAYOR='{0}' order by det_conf_cve.orden

#Banca electronica
cuenta.electronica.buscar=select a.unidad_ejecutora, (to_char(a.entidad,'00')||a.ambito) ambito, decode(id_tipo_gasto,null,2,id_tipo_gasto) tiga, a.id_tipo_cta, a.id_tipo_programa, a.procesar from rf_tr_cuentas_bancarias a, rf_tc_tipo_cuenta b where num_cuenta= '{num_cuenta}' and a.id_tipo_cta= b.id_tipo_cta
cuenta.bancos.buscar.criterio=select tipo_movimiento, criterio, forma from rf_tc_formas_automaticas a, rf_tc_formas_contables b where a.forma_contable_id= b.forma_contable_id and areas_formas_id= '{areas_formas_id}'  order by a.prioridad
cuenta.variables.forma.proceso=select tipo, sentencia, nombre from rf_tc_variables_forma a, rf_tc_detalle_variables b where a.variable_forma_id= b.variable_forma_id and a.areas_formas_id= '{areas_formas_id}' and a.nombre= '{nombre}' order by nombre, prioridad
costos.nomina.buscar=select clave_programatica, unidad_ejecutora, entidad, ambito, fch_vig_ini, fch_vig_fin, (tipo_conc||concepto) concepto, decode(tipo_conc, 'D', decode(codigo_contable, null, '99-99', codigo_contable), codigo_contable) codigo_contable, sum(valor) importe, count(*) from rf_tv_cxln_conta where consecutivo_cl= {consecutivo_cl} group by clave_programatica, unidad_ejecutora, entidad, ambito, fch_vig_ini, fch_vig_fin, tipo_conc||concepto, decode(tipo_conc, 'D', decode(codigo_contable, null, '99-99', codigo_contable), codigo_contable) order by clave_programatica, unidad_ejecutora, entidad, ambito, concepto
costos.enteros.buscar = select    cp.clave_programatica,    datos_cle.unidad_ejecutora,    datos_cle.entidad,    datos_cle.ambito,    to_char(cp.fecha_vig_ini, 'dd/MM/yyyy') as fch_vig_ini,    to_char(cp.fecha_vig_fin, 'dd/MM/yyyy') as fch_vig_fin,        (datos_cle.tipo_conc||datos_cle.concepto) concepto,    conc.codigo_contable,    sum( total ) importe,     count(*)   from    ( select        info.consecutivo_cle,        info.cons_cveprog,        info.unidad_ejecutora,        info.tipo_conc,        info.concepto,        info.consecutivo,        info.entidad,        info.ambito,        info.tipo_contrata,        info.nomina,        info.total      from        ( select            p.cons_cveprog,            cves.consecutivo_cle,            p.tipo_contrata,            ce.tipo_conc,            ce.concepto,            p.unidad_ejecutora,            p.entidad,            p.ambito,            ce.consecutivo,            cl.nomina,            ce.valor total          from            ( select                cle.consecutivo_cle,                detalle_ctas.cons_cveprog,                detalle_ctas.unidad_ejecutora,                detalle_ctas.entidad,                detalle_ctas.ambito,                doctos_cle.id_docto              from                sia_admin.rh_tr_cle                   cle,                sia_admin.rh_tr_doctos_cle            doctos_cle,                sia_admin.rh_tr_detalle_ctas_liquidar detalle_ctas              where                    cle.consecutivo_cle          = {consecutivo_cl}                and doctos_cle.consecutivo_cle   = cle.consecutivo_cle                and doctos_cle.tipo_docto        = 1                and detalle_ctas.consecutivo_cl  = doctos_cle.id_docto                and not doctos_cle.id_docto in (                    select                        ctas_r.consecutivo_cl                    from                        sia_admin.rh_tr_cle                      cle,                        sia_admin.rh_tr_doctos_cle               doctos_cle,                        sia_admin.rh_tr_ctas_liquidar_reintegros ctas_r                    where                            cle.consecutivo_cle        = {consecutivo_cl}                        and doctos_cle.consecutivo_cle = cle.consecutivo_cle                        and doctos_cle.tipo_docto      = 2                        and doctos_cle.id_docto        = ctas_r.consecutivo_ar                )              union                select                    cle.consecutivo_cle,                    cves_cle.cons_cveprog,                    cves_cle.unidad_ejecutora,                    cves_cle.entidad,                    cves_cle.ambito,                    cves_cle.id_docto                from                    sia_admin.rh_tr_cle                   cle,                    sia_admin.rh_tr_cves_prog_cle         cves_cle                where                        cle.consecutivo_cle          = {consecutivo_cl}                    and cves_cle.consecutivo_cle     = cle.consecutivo_cle                    and cves_cle.tipo_docto          = 1            )cves,            sia_admin.rh_tr_plazas               p,            sia_admin.rh_tr_cuentas_por_liquidar cl,            sia_admin.rh_tr_cabezapie_talon      t,            sia_admin.rh_tr_conc_empl            ce         where                p.cons_cveprog     = cves.cons_cveprog            and p.entidad          = cves.entidad            and p.ambito           = cves.ambito            and p.unidad_ejecutora = cves.unidad_ejecutora            and cl.consecutivo_cl  = cves.id_docto            and t.plaza            = p.plaza            and t.ejercicio        = p.ejercicio            and t.periodo          = p.periodo            and t.nomina           = cl.nomina            and ce.num_empleado    = t.num_empleado            and ce.nomina          = t.nomina            and (                      ce.tipo_conc = 'D'                  or ( ce.tipo_conc = 'A' and ce.concepto not in ('A87', 'A86', 'A83') )                 or ( ce.tipo_conc = 'P' and ce.concepto = '076' )            )                and ( ce.ajustes = 'P' or ce.ajustes = '0')            and ce.valor != 0             and cves.cons_cveprog||'-'||cves.entidad||'-'||cves.ambito not in                (  select                        cons_cveprog||'-'||entidad||'-'||ambito                   from                    sia_admin.rh_tr_cves_prog_cle                   where                         tipo_docto      = 2                    and  consecutivo_cle = {consecutivo_cl}                )     union all        select            p.cons_cveprog,            cle.consecutivo_cle,            p.tipo_contrata,            ce.tipo_conc,            ce.concepto,            p.unidad_ejecutora,            p.entidad,            p.ambito,            ce.consecutivo,            cl.nomina,            ce.valor total        from            sia_admin.rh_tr_cle                   cle,            sia_admin.rh_tr_curps_cle             curps_cle,            sia_admin.rh_tr_cuentas_por_liquidar  cl,            sia_admin.rh_tr_cabezapie_talon       t,            sia_admin.rh_tr_plazas                p,            sia_admin.rh_tr_conc_empl             ce        where                cle.consecutivo_cle          = {consecutivo_cl}            and curps_cle.consecutivo_cle    = cle.consecutivo_cle            and curps_cle.tipo_docto         = 1            and cl.consecutivo_cl            = curps_cle.id_docto            and t.num_empleado               = curps_cle.num_empleado            and t.nomina                     = cl.nomina            and p.plaza                      = t.plaza            and p.ejercicio                  = t.ejercicio            and p.periodo                    = t.periodo            and ce.num_empleado              = t.num_empleado            and ce.nomina                    = t.nomina            and (                      ce.tipo_conc = 'D'                  or ( ce.tipo_conc = 'A' and ce.concepto not in ('A87', 'A86', 'A83') )                 or ( ce.tipo_conc = 'P' and ce.concepto = '076' )            )                and ( ce.ajustes = 'P' or ce.ajustes = '0')            and ce.valor != 0      union all        select            p.cons_cveprog,            cle.consecutivo_cle,            p.tipo_contrata,            ce.tipo_conc,            ce.concepto,            p.unidad_ejecutora,            p.entidad,            p.ambito,            ce.consecutivo,            cl.nomina,            ce.valor total        from            sia_admin.rh_tr_cle                   cle,            sia_admin.rh_tr_curps_cle             curps_cle,            sia_admin.rh_tr_cuentas_por_liquidar  cl,            sia_admin.rh_tr_cabezapie_talon       t,            sia_admin.rh_tr_plazas                p,            sia_admin.rh_tr_conc_empl             ce        where                cle.consecutivo_cle          = {consecutivo_cl}            and curps_cle.consecutivo_cle    = cle.consecutivo_cle            and curps_cle.tipo_docto         = 2            and cl.consecutivo_cl            = curps_cle.id_docto            and t.num_empleado               = curps_cle.num_empleado            and t.nomina                     = cl.nomina            and p.plaza                      = t.plaza            and p.ejercicio                  = t.ejercicio            and p.periodo                    = t.periodo            and ce.num_empleado              = t.num_empleado            and ce.nomina                    = t.nomina            and (                      ce.tipo_conc = 'D'                  or ( ce.tipo_conc = 'A' and ce.concepto not in ('A87', 'A86', 'A83') )                 or ( ce.tipo_conc = 'P' and ce.concepto = '076' )            )                and ( ce.ajustes = 'P' or ce.ajustes = '0')       	    and ce.valor != 0         )info    union all        select            info.consecutivo_cle,            info.cons_cveprog,            info.unidad_ejecutora,            info.tipo_conc,            info.concepto,            info.consecutivo,            info.entidad,            info.ambito,            info.tipo_contrata,            info.nomina,            info.total        from            ( select                  cle.consecutivo_cle,                 cves_r.cons_cveprog,                 ce.tipo_conc,                 ce.concepto,                 ce.consecutivo,                 cl.unidad_ejecutora,                 cves_r.entidad,                 cves_r.ambito,                 p.tipo_contrata,                 cl.nomina,                 ce.valor *(-1) total              from                sia_admin.rh_tr_cle                  cle,                sia_admin.rh_tr_doctos_cle           doctos_cle,                sia_admin.rh_tr_cves_prog_reintegros cves_r,                sia_admin.rh_tr_aviso_reintegro      ar,                sia_admin.rh_tr_cuentas_por_liquidar cl,                sia_admin.rh_tr_plazas               p,                sia_admin.rh_tr_cabezapie_talon      t,                sia_admin.rh_tr_conc_empl            ce              where                    cle.consecutivo_cle        = {consecutivo_cl}                and doctos_cle.consecutivo_cle = cle.consecutivo_cle                and doctos_cle.tipo_docto      = 2                and ar.consecutivo_ar          = doctos_cle.id_docto                and cves_r.consecutivo_ar      = doctos_cle.id_docto                and cl.consecutivo_cl          = ar.consecutivo_cl                and p.cons_cveprog             = cves_r.cons_cveprog                and p.entidad                  = cves_r.entidad                and p.ambito                   = cves_r.ambito                and p.unidad_ejecutora         = cves_r.unidad_ejecutora                and t.plaza                    = p.plaza                and t.ejercicio                = p.ejercicio                and t.periodo                  = p.periodo                and t.nomina                   = cl.nomina                and ce.num_empleado            = t.num_empleado                and ce.nomina                  = t.nomina                and (                          ce.tipo_conc = 'D'                      or ( ce.tipo_conc = 'A' and ce.concepto not in ('A87', 'A86', 'A83') )                     or ( ce.tipo_conc = 'P' and ce.concepto = '076' )                )                    and ( ce.ajustes = 'P' or ce.ajustes = '0')        	and ce.valor != 0              union all                select                    cle.consecutivo_cle,                    p.cons_cveprog,                    ce.tipo_conc,                    ce.concepto,                    ce.consecutivo,                    cl.unidad_ejecutora,                    p.entidad,                    p.ambito,                    p.tipo_contrata,                    cl.nomina,                    ce.valor *(-1) total                from                    sia_admin.rh_tr_cle                  cle,                    sia_admin.rh_tr_doctos_cle           doctos_cle,                    sia_admin.rh_tr_curps_reintegros     curps_r,                    sia_admin.rh_tr_aviso_reintegro      ar,                    sia_admin.rh_tr_cuentas_por_liquidar cl,                    sia_admin.rh_tr_plazas               p,                    sia_admin.rh_tr_cabezapie_talon      t,                    sia_admin.rh_tr_conc_empl            ce                 where                        cle.consecutivo_cle        = {consecutivo_cl}                    and doctos_cle.consecutivo_cle = cle.consecutivo_cle                    and doctos_cle.tipo_docto      = 2                    and ar.consecutivo_ar          = doctos_cle.id_docto                    and curps_r.consecutivo_ar     = ar.consecutivo_ar                    and cl.consecutivo_cl          = ar.consecutivo_cl                    and t.num_empleado             = curps_r.num_empleado                    and t.nomina                   = cl.nomina                    and t.plaza                    = p.plaza                    and t.ejercicio                = p.ejercicio                    and t.periodo                  = p.periodo                    and ce.num_empleado            = t.num_empleado                    and ce.nomina                  = t.nomina                    and (                            ce.tipo_conc = 'D'                        or ( ce.tipo_conc = 'A' and ce.concepto not in ('A87', 'A86', 'A83') )                       or ( ce.tipo_conc = 'P' and ce.concepto = '076' )                    )                       and ( ce.ajustes = 'P' or ce.ajustes = '0')        	   and ce.valor != 0        )info    )datos_cle,      sia_admin.rh_tc_claves_programaticas cp,     sia_admin.rh_tc_conceptos conc,     sia_admin.rh_tr_nominas n,     sia_admin.rh_tc_calendario_pago cale  where      datos_cle.cons_cveprog    = cp.cons_cveprog  and conc.tipo_conc            = datos_cle.tipo_conc  and conc.concepto             = datos_cle.concepto  and conc.consecutivo          = datos_cle.consecutivo  and n.nomina                  = datos_cle.nomina  and cale.anio                 = n.anio  and cale.quincena             = n.qna_pago  and cale.fecha_ini           >= conc.vigencia_desde  and cale.fecha_fin           <= conc.vigencia_hasta  group by    datos_cle.unidad_ejecutora,    cp.clave_programatica,    datos_cle.entidad,    datos_cle.ambito,    (datos_cle.tipo_conc||datos_cle.concepto),    conc.codigo_contable,    cp.fecha_vig_ini,    cp.fecha_vig_fin having sum(total)!= 0
presupuesto.ocmv.buscar=select c.clave_presupuestaria_id, d.partida, e.unidad_ejecutora, e.entidad, e.ambito, '0_0' codigo_contable, b.monto importe, '0' iva from rf_presupuesto.rf_tr_cxl_det a, rf_presupuesto.rf_tr_cxl_det_me b, rf_presupuesto.rf_tc_claves_presupuestarias c, rf_presupuesto.rf_tc_partidas_presupuestales d, rf_presupuesto.rf_tr_rel_uea_cveprog e where a.id_cxl= {id_cxl} and a.id_cxl_det= b.id_cxl_det and b.clave_presupuestaria_id= c.clave_presupuestaria_id and c.id_partida= d.id_partida and c.id_rel_uea_cve_prog= e.id_rel_uea_cve_prog order by e.unidad_ejecutora, e.entidad, e.ambito
presupuesto.cxl.buscar=select a.clave_presupuestaria_id, d.partida, b.unidad_ejecutora, b.entidad, b.ambito, (a.importe+ a.otros+ a.importe_tasa0+ a.importe_exento) importe, a.iva, a.id_doc_comp, a.id_tipo_docto, a.monto, (e.tipo_conc||e.concepto) concepto, decode(e.codigo_contable, null, '0-0', e.codigo_contable) codigo_contable from rf_tv_cxl_conta a, rf_presupuesto.rf_tc_unidades_entidades b, rf_presupuesto.rf_tc_claves_presupuestarias c, rf_presupuesto.rf_tc_partidas_presupuestales d, sia_admin.rh_tc_conceptos e where a.id_cxl= {id_cxl} and a.id_unidad_estado= b.id_unidad_estado and a.clave_presupuestaria_id= c.clave_presupuestaria_id and c.id_partida= d.id_partida and a.id_concepto= e.id_concepto(+) order by b.unidad_ejecutora, b.entidad, b.ambito, a.id_doc_comp, a.id_tipo_docto
presupuesto.ar.buscar=select a.clave_presupuestaria_id, d.partida, b.unidad_ejecutora, b.entidad, b.ambito, a.importe, a.iva, null id_doc_comp, '0' id_tipo_docto, a.monto, (e.tipo_conc||e.concepto) concepto, decode(e.codigo_contable, null, '0-0', e.codigo_contable) codigo_contable from rf_tv_ar_conta a, rf_presupuesto.rf_tc_unidades_entidades b, rf_presupuesto.rf_tc_claves_presupuestarias c, rf_presupuesto.rf_tc_partidas_presupuestales d, sia_admin.rh_tc_conceptos e where a.id_ar={id_ar} and a.id_unidad_estado= b.id_unidad_estado and a.clave_presupuestaria_id= c.clave_presupuestaria_id and c.id_partida= d.id_partida and a.id_concepto= e.id_concepto(+) order by b.unidad_ejecutora, b.entidad, b.ambito
presupuesto.ocg.buscar=select a.clave_presupuestaria_id, d.partida, b.unidad_ejecutora, b.entidad, b.ambito, (a.importe+ a.otros+ a.importe_tasa0+ a.importe_exento) importe, a.iva, a.id_doc_comp, a.id_tipo_docto, a.monto, (e.tipo_conc||e.concepto) concepto, decode(e.codigo_contable, null, '0-0', e.codigo_contable) codigo_contable from rf_tv_ocg_conta a, rf_presupuesto.rf_tc_unidades_entidades b, rf_presupuesto.rf_tc_claves_presupuestarias c, rf_presupuesto.rf_tc_partidas_presupuestales d, sia_admin.rh_tc_conceptos e where a.id_ocg= {id_ocg} and a.id_unidad_estado= b.id_unidad_estado and a.clave_presupuestaria_id= c.clave_presupuestaria_id and c.id_partida= d.id_partida and a.id_concepto= e.id_concepto(+) order by b.unidad_ejecutora, b.entidad, b.ambito, a.id_doc_comp, a.id_tipo_docto
presupuesto.adp.buscar=select a.clave_presupuestaria_id, d.partida, b.unidad_ejecutora, b.entidad, b.ambito, (mes1+ mes2+ mes3+ mes4+ mes5+ mes6+ mes7+ mes8+ mes9+ mes10+ mes11+ mes12) importe, 0 iva, '0-0' codigo_contable from rf_tv_adp_conta a, rf_presupuesto.rf_tc_unidades_entidades b, rf_presupuesto.rf_tc_claves_presupuestarias c, rf_presupuesto.rf_tc_partidas_presupuestales d where a.id_adecuacion= {id_adecuacion} and a.id_unidad_estado= b.id_unidad_estado and a.clave_presupuestaria_id= c.clave_presupuestaria_id and c.id_partida= d.id_partida order by b.unidad_ejecutora, b.entidad, b.ambito
presupuesto.polizaAutomatica.actualizarEstatus=update rf_tr_polizas_automaticas set estatus=2 where poliza_automatica_id={poliza_automatica_id}
presupuesto.polizaAutomatica.actualizarDatosProcesada=update rf_tr_polizas_automaticas set estatus=3, atendido=to_date('{atendido}','yyyymmddhh24miss'), emp_atendio={emp_atendio},poliza_id={poliza_id} where poliza_automatica_id={poliza_automatica_id}
presupuesto.polizaAutomatica.getPolizaId=select pol.poliza_id, to_char(fecha_afectacion,'dd/mm/yyyy') as fecha_Afectacion,  pol.consecutivo, decode(pol.tipo_poliza_id,1,'D',2,'C',3,'E',4,'I') as tipo_Poliza from rf_tr_polizas_automaticas  polAut inner join rf_tr_polizas pol on pol.poliza_id=polAut.poliza_id and polAut.poliza_automatica_id={poliza_automatica_id} 
presupuesto.polizaAutomatica.getPolizaAutomatica=select id_documento,tipo_documento,tramite from rf_tr_polizas_automaticas where poliza_automatica_id = {poliza_automatica_id} 
documento.cxl.buscar = select id_cxl_det, id_cxl, id_documento, tipo_docto from rf_presupuesto.RF_TV_CXL_CONTA where id_cxl={consecutivo_cl}
documento.ar.buscar = select id_ar, id_documento, tipo_docto from rf_presupuesto.RF_TV_AR_CONTA where id_ar={consecutivo_ar}

#Proceso por lotes
procesoPorLotes.query.getDetalleForma=select aut.tipo_movimiento, forma.forma, forma.forma_contable_id ,forma.tipo_poliza_id,forma.unidad_ejecutora,forma.entidad,forma.ambito,forma.concepto from rf_tc_formas_automaticas aut inner join rf_tc_formas_contables forma on forma.forma_contable_id=aut.forma_contable_id and areas_formas_id={1} and aut.tipo_movimiento='{0}'
procesoPorLotes.query.existePoliza=select poliza_id from rf_tr_polizas where referencia='{0}' and ejercicio='{1}' and id_catalogo_cuenta={2}

#Movimientos no identificados
movimientos.query.insertarMovimientoNoIdentificado=insert into RF_TR_mov_no_identificados (num_cuenta,fecha,fecha_rep,movimiento,referencia,importe, transaccion) values('{num_cuenta}',to_date('{fecha}','yyyymmdd'),to_date('{fecha_rep}','yyyymmddhh24miss'),'{movimiento}', '{referencia}',{importe},'{transaccion}')
movimientos.query.cuentaMovimientosNoIdentificados=select count(mov_no_identificado_id) no_registros from rf_tr_mov_no_identificados WHERE fecha_rep = to_date({fecha_rep},'yyyymmddhh24miss')
movimientos.query.eliminarMovimientosoIdentificados=delete from RF_TR_MOV_NO_IDENTIFICADOS where fecha_rep=to_date('{fecha_rep}','yyyymmddhh24miss')
movimientos.query.reporteMovimientosNoIdentificados=select num_cuenta, to_char(fecha,'ddMMyyyy') as fecha, importe, decode(movimiento,'CR','CARGO','ABONO') movimiento, transaccion, referencia  from RF_TR_MOV_NO_IDENTIFICADOS where fecha_rep=to_date('{fecha_rep}','yyyymmddhh24miss')
movimientos.query.reporteMovimientosNoIdentificadosYaGenerados = select num_cuenta, to_char(fecha,'ddMMyyyy') as fecha, importe, decode(movimiento,'CR','CARGO','ABONO') movimiento, transaccion, referencia  from RF_TR_MOV_NO_IDENTIFICADOS where fecha = to_date('{fecha_rep}', 'dd/MM/yyyy')

#Funciones
funciones.query.obtenerCapitulo=select p.partida,c.partida capitulo from rf_presupuesto.rf_tc_partidas_presupuestales p inner join rf_presupuesto.rf_tc_partidas_presupuestales c on p.id_capitulo=c.id_partida where p.partida={partida} and to_char(p.vigencia_ini,'yyyymmdd')<=to_char(sysdate,'yyyymmdd') and (to_char(p.vigencia_fin,'yyyymmdd')>=to_char(sysdate,'yyyymmdd') or p.vigencia_fin is null)
funciones.query.obtenerRubro=select p.partida,p.rubro_id from rf_presupuesto.rf_tc_partidas_presupuestales p  where p.partida={partida} and to_char(p.vigencia_ini,'yyyymmdd')<=to_char(sysdate,'yyyymmdd') and (to_char(p.vigencia_fin,'yyyymmdd')>=to_char(sysdate,'yyyymmdd') or p.vigencia_fin is null)

#Usuarios WebService
ws.usuarios.consumir=conprove|presupuesto|inventarios|costos

#Notificacion correo webService
notificacion.webService.emisor=siacontabilidad@senado.gob.mx
notificacion.webService.destinatarios=luz.lopez@senado.gob.mx,jorgeluis.perez@senado.gob.mx
notificacion.webService.destinatarios.aviso=minerva.vidales@senado.gob.mx,salvador.reyes@senado.gob.mx,claudia.macariot@senado.gob.mx,luz.lopez@senado.gob.mx,jorgeluis.perez@senado.gob.mx, susana.medina@senado.gob.mx
#notificacion.webService.destinatarios=claudia.macariot@senado.gob.mx,luz.lopez@senado.gob.mx,jorgeluis.perez@senado.gob.mx, susana.medina@senado.gob.mx,bertha.uribe@senado.gob.mx
#notificacion.webService.destinatarios=claudia.macariot@senado.gob.mx, susana.medina@senado.gob.mx



banquito.query.getRegistroRAP = select * from rf_tc_cuentas_rap where id_cuenta_rap = {id_cuenta_rap}
banquito.query.getRegistroTPV = select * from rf_tc_cuentas_cv where cuenta_tpv = {cuenta_tpv}


banquito.movimiento.cuenta5489=4024114548
banquito.movimiento.traspasoRendimiento=4039477682

