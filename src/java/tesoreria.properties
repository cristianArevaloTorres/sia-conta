#querys
movimientos.query.cuentasprog1=SELECT monto FROM RF_TR_MOVIMIENTOS_CUENTA_TMP movs INNER JOIN RF_TR_CUENTAS_BANCARIAS ctas ON movs.num_cuenta = ctas.num_cuenta WHERE ctas.id_tipo_programa <> :prog:
movimientos.query.cuentasprog2=SELECT monto FROM RF_TR_MOVIMIENTOS_CUENTA_TMP movs INNER JOIN RF_TR_CUENTAS_BANCARIAS ctas ON movs.num_cuenta = ctas.num_cuenta WHERE ctas.id_tipo_programa = 1
movimientos.query.solounafecha=select distinct(to_char(fecha_hora,'dd/MM/yyyy')) fecha FROM RF_TR_MOVIMIENTOS_CUENTA_TMP
movimientos.query.registrosduplicados=select d.clave_trans,d.num_cuenta,d.fecha_hora,d.id_tipo_trans, d.sucursal,d.monto, d.numero_cheque, d.numero_folio, d.operador,d.descripcion, d.saldo, d.tipo_saldo, d.referencia,d.TOTAL,cb.nombre_cta as unidad_ejecutora from (SELECT clave_trans,num_cuenta,fecha_hora, id_tipo_trans, sucursal,monto, numero_cheque, numero_folio, operador,descripcion, saldo, tipo_saldo, referencia, COUNT(*) AS TOTAL FROM RF_TR_MOVIMIENTOS_CUENTA_TMP GROUP BY clave_trans,num_cuenta,fecha_hora, id_tipo_trans, sucursal, monto, numero_cheque, numero_folio, operador, descripcion, saldo, tipo_saldo, referencia HAVING COUNT(*)> 1) d inner join RF_TR_CUENTAS_BANCARIAS cb on d.num_cuenta = cb.num_cuenta
movimientos.query.borraduplicadostmp=delete RF_TR_MOVIMIENTOS_CUENTA_TMP where id_movimiento in (select max( a.id_movimiento ) id_movimiento from  RF_TR_MOVIMIENTOS_CUENTA_TMP a, ( SELECT clave_trans,num_cuenta, fecha_hora, id_tipo_trans, sucursal,monto, numero_cheque, numero_folio, operador, descripcion, saldo, tipo_saldo, referencia, COUNT(*) AS TOTAL FROM RF_TR_MOVIMIENTOS_CUENTA_TMP GROUP BY clave_trans,num_cuenta,fecha_hora, id_tipo_trans, sucursal, monto, numero_cheque, numero_folio, operador, descripcion, saldo, tipo_saldo, referencia HAVING COUNT(*)> 1) b where a.clave_trans = b.clave_trans and a.num_cuenta = b.num_cuenta and a.fecha_hora = b.fecha_hora and a.id_tipo_trans = b.id_tipo_trans and  a.sucursal = b.sucursal and a.monto = b.monto and a.numero_cheque = b.numero_cheque and a.numero_folio = b.numero_folio and ( a.operador = b.operador or  ( a.operador is null and b.operador is null )) and a.descripcion = b.descripcion and a.saldo = b.saldo and a.tipo_saldo = b.tipo_saldo and ( a.referencia = b.referencia or a.referencia is null ) group by a.clave_trans,a.num_cuenta,a.fecha_hora, a.id_tipo_trans, a.sucursal, a.monto, a.numero_cheque, a.numero_folio, a.operador, a.descripcion, a.saldo, a.tipo_saldo, a.referencia)
movimientos.query.ultimafechaBitacora=select max(fecha_movimientos) from RF_TR_BITACORA_ACTUALIZACION where id_tipo_programa =
movimientos.query.borratmp=DELETE RF_TR_MOVIMIENTOS_CUENTA_TMP
#movimientos.query.insertatablamovimientos=INSERT INTO RF_TR_MOVIMIENTOS_CUENTA SELECT cb.id_cuenta, movs.id_movimiento, movs.fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, tipo_saldo, referencia, id_tipo_trans, clave_trans, null, null FROM RF_TR_MOVIMIENTOS_CUENTA_TMP MOVS INNER JOIN RF_TR_CUENTAS_BANCARIAS CB on MOVS.NUM_CUENTA = CB.NUM_CUENTA order by movs.id_movimiento
movimientos.query.insertatablamovimientos=INSERT INTO RF_TR_MOVIMIENTOS_CUENTA (id_cuenta, id_movimiento, fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, tipo_saldo, referencia, id_tipo_trans, clave_trans_recla, id_clave_trans, id_clave_trans_recla) SELECT cb.id_cuenta, movs.id_movimiento, movs.fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, tipo_saldo, referencia, id_tipo_trans, clave_trans, null, null FROM RF_TR_MOVIMIENTOS_CUENTA_TMP MOVS INNER JOIN RF_TR_CUENTAS_BANCARIAS CB on MOVS.NUM_CUENTA = CB.NUM_CUENTA order by movs.id_movimiento 
movimientos.query.selectcalcularsaldo=select cb.id_cuenta, sa.fecha, MC.TOTMOV, CASE WHEN mc.total IS NULL THEN 0 ELSE mc.total END TOTAL, sa.saldo_calculado,sa.saldo_banco from RF_TR_CUENTAS_BANCARIAS cb , RF_TR_SALDOS_DIARIOS sa, (select mc2.id_cuenta, trunc( mc2.FECHA_HORA ) fecha, COUNT(*) TOTMOV, SUM(mc2.MONTO * tt.aplicacion) total from RF_TR_MOVIMIENTOS_CUENTA mc2 , RF_TC_TIPO_TRANSACCION tt where mc2.id_tipo_trans = tt.id_tipo_trans(+)  and mc2.FECHA_hora >= to_date(' 
movimientos.query.fromcalcularsaldo1=','dd/mm/yy') and mc2.FECHA_hora < to_date('
movimientos.query.fromcalcularsaldo2=','dd/mm/yy')+1 and borrar = 0 GROUP BY mc2.id_cuenta, trunc( mc2.fecha_HORA)) mc where cb.id_cuenta = mc.id_cuenta(+) and cb.id_cuenta = sa.id_cuenta(+) and to_date('
movimientos.query.fromcalcularsaldo3=','dd/mm/yy') = sa.fecha(+) and cb.id_tipo_programa = 
#movimientos.query.joincalcularsaldo1=left join RF_TR_SALDOS_DIARIOS sa on cb.id_cuenta = sa.id_cuenta and to_date('
#movimientos.query.joincalcularsaldo2=','dd/mm/yy') = to_date(sa.fecha,'dd/mm/yy') where cb.id_tipo_programa =
movimientos.query.reportesaldos1=select sd.saldo_banco, sd.saldo_calculado, cb.num_cuenta, cb.nombre_cta from RF_TR_SALDOS_DIARIOS sd inner join RF_TR_CUENTAS_BANCARIAS cb on sd.id_cuenta = cb.id_cuenta where to_date(fecha,'dd/mm/yy') = to_date('
movimientos.query.reportesaldos2=','dd/mm/yy') and cb.id_tipo_programa =
movimientos.query.reportesaldos3=order by cb.num_cuenta
movimientos.query.actualizabitacora=insert into RF_TR_BITACORA_ACTUALIZACION (id_reg_bitacora,fecha_movimientos,num_empleado,id_tipo_programa,fecha_carga,observaciones) values ({0},{1},{2},{3},{4},'{5}') 
movimientos.query.bitacora=select to_char(SD.FECHA,'DD/MM/YYYY') as SDFecha, upper(substr(SD.OBSERVACIONES,0,1)) || lower(substr(SD.OBSERVACIONES,2,length(SD.OBSERVACIONES))) as SDObservaciones from RF_TR_SEGUIMIENTO_DIFERENCIAS SD,RF_TR_CUENTAS_BANCARIAS CB where SD.ID_CUENTA = CB.ID_CUENTA and CB.NUM_CUENTA = :pNumCuenta and CB.ID_TIPO_PROGRAMA = :pTipoPrograma and SD.ID_SALDO_DIARIO = :pIdSaldoDiario order by SD.FECHA, SD.ID_SEGUIMIENTO
movimientos.query.repDiferencias=SELECT ctas.num_cuenta, ue.descripcion, dif.operaciones_calculado, dif.operaciones_banco, dif.fecha_inicio, diferencia_real FROM RF_TR_DIFERENCIAS_CUENTAS dif INNER JOIN RF_TR_CUENTAS_BANCARIAS ctas ON dif.id_cuenta = ctas.id_cuenta INNER JOIN SIA_CATALOGOS.TC_UNI_EJECUTORAS ue ON ctas.unidad_ejecutora = ue.unidad_ejecutora WHERE to_date(dif.fecha_inicio,'dd/MM/yy') = to_date(':pFecha', 'dd/MM/yy') and ctas.ID_TIPO_PROGRAMA = :prog
movimientos.query.repSaldos=SELECT ctas.num_cuenta, ctas.nombre_cta descripcion, sd.saldo_calculado, sd.saldo_banco, sd.fecha, (sd.saldo_calculado - sd.saldo_banco) diferencia, ctas.Id_Tipo_Programa FROM RF_TR_SALDOS_DIARIOS sd INNER JOIN RF_TR_CUENTAS_BANCARIAS ctas ON sd.id_cuenta = ctas.id_cuenta where to_date(sd.fecha,'dd/MM/yy') = to_date(':pFecha','dd/mm/yy') and ctas.ID_TIPO_PROGRAMA = :prog and ctas.ID_ESTATUS_CTA_PROG = 1
movimientos.query.faltaCatTransaccion=select clave_trans clave, descripcion from RF_TR_MOVIMIENTOS_CUENTA_TMP where clave_trans not in (select clave_trans from RF_TC_CLAVES_TRANSACCION)
movimientos.query.recarga=select fecha_movimientos from RF_TR_BITACORA_ACTUALIZACION where fecha_movimientos = to_date({0},'dd/MM/yyyy') and id_tipo_programa = {1}
#movimientos.query.actualizasaldos = MERGE INTO RF_TR_SALDOS_DIARIOS sda USING (SELECT cb.id_cuenta id_cuenta, to_date({0},'yyyy/MM/dd') fecha, nvl(sd.total,0) total, sda.saldo_calculado saldo_calculado_ant, sda.saldo_banco saldo_banco_ant, nvl(sda.saldo_calculado,0) + nvl(sd.total,0) saldo_calculado, nvl(case when mc.tipo_saldo = 'CR' then mc.saldo else (mc.saldo * -1) end, sda.saldo_banco) saldo_banco from RF_TR_CUENTAS_BANCARIAS cb LEFT JOIN ( SELECT mc2.id_cuenta, TRUNC(mc2.fecha_hora) fecha, COUNT(*) totmov, SUM(mc2.monto * tt.aplicacion) total, MAX(mc2.id_movimiento) id_movimiento FROM RF_TR_MOVIMIENTOS_CUENTA mc2 LEFT JOIN RF_TC_TIPO_TRANSACCION tt ON mc2.id_tipo_trans = tt.id_tipo_trans WHERE mc2.fecha_hora >= to_date({0} ||'00:00:00',   'yyyy/MM/dd hh24:mi:ss') AND mc2.fecha_hora <= to_date({0} ||'23:59:59',   'yyyy/MM/dd hh24:mi:ss') GROUP BY mc2.id_cuenta, TRUNC(mc2.fecha_hora) ) sd on cb.id_cuenta = sd.id_cuenta left join (select id_cuenta, max( fecha ) fecha from RF_TR_SALDOS_DIARIOS where fecha < to_date({0}, 'yyyy/MM/dd') group by id_cuenta ) fa on cb.id_cuenta = fa.id_cuenta left join RF_TR_SALDOS_DIARIOS sda on fa.id_cuenta = sda.id_cuenta and fa.fecha = sda.fecha left join RF_TR_MOVIMIENTOS_CUENTA mc ON sd.id_movimiento = mc.id_movimiento and sd.id_cuenta = mc.id_cuenta where cb.id_tipo_programa = {1} ) sdn ON (sda.id_cuenta =  sdn.id_cuenta and sda.fecha = sdn.fecha) WHEN MATCHED THEN UPDATE SET sda.saldo_banco = sdn.saldo_banco, sda.saldo_calculado = sdn.saldo_calculado WHEN NOT MATCHED THEN INSERT ( sda.id_saldo_diario,   sda.id_cuenta,   sda.fecha,   sda.saldo_banco,   sda.saldo_calculado) VALUES ( seq_tr_saldos_diarios.nextval,sdn.id_cuenta,sdn.fecha,sdn.saldo_banco,sdn.saldo_calculado)
movimientos.query.actualizasaldos=MERGE INTO RF_TR_SALDOS_DIARIOS sda USING (SELECT cb.id_cuenta id_cuenta, to_date({0},'yyyy/MM/dd') fecha, nvl(sd.total,0) total, sda.saldo_calculado saldo_calculado_ant, sda.saldo_banco saldo_banco_ant, nvl(sda.saldo_calculado,0) + nvl(sd.total,0) saldo_calculado, nvl(case when mc.tipo_saldo = 'CR' then mc.saldo else (mc.saldo * -1) end, sda.saldo_banco) saldo_banco from RF_TR_CUENTAS_BANCARIAS cb LEFT JOIN (SELECT mc2.id_cuenta, TRUNC(mc2.fecha_hora) fecha, COUNT(*) totmov, SUM(mc2.monto * tt.aplicacion) total, MAX(mc2.id_movimiento) id_movimiento FROM RF_TR_MOVIMIENTOS_CUENTA mc2 LEFT JOIN RF_TC_TIPO_TRANSACCION tt ON mc2.id_tipo_trans = tt.id_tipo_trans WHERE trunc(mc2.fecha_hora) = trunc(to_date({0},'yyyy/MM/dd')) and mc2.borrar = 0 GROUP BY mc2.id_cuenta, TRUNC(mc2.fecha_hora) ) sd on cb.id_cuenta = sd.id_cuenta left join (select id_cuenta, max( fecha ) fecha from RF_TR_SALDOS_DIARIOS where fecha < to_date({0}, 'yyyy/MM/dd') group by id_cuenta ) fa on cb.id_cuenta = fa.id_cuenta left join RF_TR_SALDOS_DIARIOS sda on fa.id_cuenta = sda.id_cuenta and fa.fecha = sda.fecha left join RF_TR_MOVIMIENTOS_CUENTA mc ON sd.id_movimiento = mc.id_movimiento and sd.id_cuenta = mc.id_cuenta where cb.id_tipo_programa = {1} ) sdn ON (sda.id_cuenta =  sdn.id_cuenta and sda.fecha = sdn.fecha) WHEN MATCHED THEN UPDATE SET sda.saldo_banco = sdn.saldo_banco, sda.saldo_calculado = sdn.saldo_calculado WHEN NOT MATCHED THEN INSERT ( sda.id_saldo_diario,   sda.id_cuenta,   sda.fecha,   sda.saldo_banco,   sda.saldo_calculado) VALUES ( seq_tr_saldos_diarios.nextval,sdn.id_cuenta,sdn.fecha,sdn.saldo_banco,sdn.saldo_calculado)
movimientos.query.borraseguimientodiferencias=DELETE FROM RF_TR_SEGUIMIENTO_DIFERENCIAS c WHERE EXISTS (SELECT a.id_saldo_diario,a.id_cuenta,a.fecha FROM RF_TR_SALDOS_DIARIOS a INNER JOIN RF_TR_CUENTAS_BANCARIAS B ON A.ID_CUENTA = B.ID_CUENTA WHERE fecha >= to_date({0} ||'00:00:00',   'dd/mm/yyyy hh24:mi:ss') AND fecha <= to_date({0} ||'23:59:59',   'dd/mm/yyyy hh24:mi:ss') AND B.id_tipo_programa = {1} AND c.id_cuenta = a.id_cuenta AND c.id_saldo_diario = a.id_saldo_diario)
movimientos.query.borradiferencias=delete FROM RF_TR_DIFERENCIAS_CUENTAS c WHERE EXISTS (SELECT a.id_saldo_diario,a.id_cuenta,a.fecha FROM RF_TR_SALDOS_DIARIOS a INNER JOIN RF_TR_CUENTAS_BANCARIAS B ON A.ID_CUENTA = B.ID_CUENTA WHERE fecha >= to_date({0} ||'00:00:00',   'dd/mm/yyyy hh24:mi:ss') AND fecha <= to_date({0} ||'23:59:59',   'dd/mm/yyyy hh24:mi:ss') AND B.id_tipo_programa = {1} AND c.id_cuenta = a.id_cuenta AND c.id_saldo_diario = a.id_saldo_diario)
movimientos.query.borrasaldos=DELETE FROM RF_TR_SALDOS_DIARIOS a WHERE fecha >= to_date({0}, 'dd/mm/yyyy') AND fecha <= to_date({0}, 'dd/mm/yyyy') AND EXISTS ( SELECT ID_CUENTA FROM RF_TR_CUENTAS_BANCARIAS  B WHERE B.ID_CUENTA = A.ID_CUENTA AND B.id_tipo_programa = {1} )
movimientos.query.fechasrecarga=SELECT DISTINCT FECHA FROM RF_TR_SALDOS_DIARIOS a WHERE fecha > to_date({0},   'dd/mm/yyyy') AND EXISTS ( SELECT ID_CUENTA FROM RF_TR_CUENTAS_BANCARIAS  B WHERE B.ID_CUENTA = A.ID_CUENTA AND B.id_tipo_programa = {1} ) ORDER BY FECHA
#movimientos.query.movimientos = DELETE FROM RF_TR_MOVIMIENTOS_CUENTA a WHERE fecha_hora >= to_date({0} ||'00:00:00',   'dd/mm/yyyy hh24:mi:ss') AND fecha_hora <= to_date({0} ||'23:59:59',   'dd/mm/yyyy hh24:mi:ss') AND EXISTS ( SELECT ID_CUENTA FROM RF_TR_CUENTAS_BANCARIAS  B WHERE B.ID_CUENTA = A.ID_CUENTA AND B.id_tipo_programa = {1} )
movimientos.query.movimientos=DELETE FROM RF_TR_MOVIMIENTOS_CUENTA where borrar = 1 
movimientos.query.fechaanteriorregistrada = select max( b.fecha) fecha from RF_TR_CUENTAS_BANCARIAS a inner join RF_TR_SALDOS_DIARIOS b on a.id_cuenta = b.id_cuenta where a.id_tipo_programa = {1} and b.fecha < to_date({0},'dd/MM/yyyy')
movimientos.query.diferencias=select fecha_inicio from RF_TR_DIFERENCIAS_CUENTAS where id_cuenta = {1} and fecha_inicio = to_date({0},'yyyy-MM-dd')
movimientos.query.existeSobregiro=select s.saldo_calculado, s.FECHA, cb.id_tipo_programa from ( select sd.saldo_calculado, sd.FECHA, sd.id_cuenta from RF_TR_SALDOS_DIARIOS sd where sd.saldo_calculado < 0 and sd.fecha = to_date({0},'dd/mm/yyyy')) s inner join RF_TR_CUENTAS_BANCARIAS cb on s.ID_CUENTA = cb.id_cuenta and cb.id_tipo_programa = {1}
movimientos.query.existeDiferencia=select d.fecha_inicio, d.id_cuenta, cb.id_tipo_programa, d.diferencia_real from ( select fecha_inicio, id_cuenta, diferencia_real, id_estatus_dif from RF_TR_DIFERENCIAS_CUENTAS where id_estatus_dif = 2 and fecha_inicio = to_date({0},'dd/mm/yyyy')) d inner join RF_TR_CUENTAS_BANCARIAS cb on d.ID_CUENTA = cb.id_cuenta and cb.id_tipo_programa = {1}
movimientos.query.updateMovimientos=UPDATE RF_TR_MOVIMIENTOS_CUENTA a SET borrar = 1 where fecha_hora >= to_date({0} ||'00:00:00',   'dd/mm/yyyy hh24:mi:ss') AND fecha_hora <= to_date({0} ||'23:59:59',   'dd/mm/yyyy hh24:mi:ss') AND EXISTS (SELECT ID_CUENTA FROM RF_TR_CUENTAS_BANCARIAS  B WHERE B.ID_CUENTA = A.ID_CUENTA AND B.id_tipo_programa = {1} ) 
# comisiones indebidas
movimientos.query.siguiente_dia_habil=select to_char(fecha,'dd/mm/yyyy') SIG_FECHA_HABIL from(select tsr.obten_siguiente_dia_habil(to_date({0},'dd/mm/yyyy')) fecha from dual) 
movimientos.query.programas_activos=select ID_TIPO_PROGRAMA from rf_tc_tipo_programa where id_estatus_cta_prog = 1 
movimientos.query.existenciaMovimientos=select distinct fecha_movimientos, id_tipo_programa from rf_tr_bitacora_actualizacion where ({0}) and fecha_movimientos = to_date({1},'dd/mm/yyyy') 
movimientos.query.tablaTMPComisiones=delete RF_TT_COMISIONES_MOV 
#movimientos.query.saldosInexistentes=select id_cuenta, num_cuenta from (select distinct trunc(mt.fecha_hora)  fecha, id_cuenta, cb.num_cuenta from RF_TR_MOVIMIENTOS_CUENTA_TMP mt inner join RF_TR_CUENTAS_BANCARIAS cb on mt.num_cuenta = cb.num_cuenta) res where id_cuenta not in (select id_cuenta from RF_TR_SALDOS_DIARIOS where fecha = tsr.OBTEN_ANTERIOR_DIA_HABIL(to_date(res.fecha, 'DD/MM/YY'))) 
movimientos.query.saldosInexistentes=select id_cuenta, num_cuenta from (select distinct trunc(mt.fecha_hora)  fecha, id_cuenta, cb.num_cuenta from RF_TR_MOVIMIENTOS_CUENTA_TMP mt inner join RF_TR_CUENTAS_BANCARIAS cb on mt.num_cuenta = cb.num_cuenta) res where id_cuenta not in (select id_cuenta from RF_TR_SALDOS_DIARIOS where fecha = to_date(res.fecha, 'DD/MM/YY')) 

#pdf
reportes.query.ChqsSalvoBuenCobro = select tsr.obten_siguiente_dia_habil(tm.descripcion, trunc(tm.fecha_hora))as dias, cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta, tm.descripcion, to_char(tm.fecha_hora,'dd/MM/yyyy') fecha_hora, tm.monto from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from rf_tr_movimientos_cuenta where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and id_clave_trans_recla  = 2 order by id_cuenta, fecha_hora) tm inner join rf_tr_cuentas_bancarias cb on tm.id_cuenta = cb.id_cuenta and (cb.num_cuenta not in ('4042547869','4039477682')) inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by tm.fecha_hora 
#reportes.query.RendimientosGlobal = select ren.totalRendimientos, ren.totalCuentas, descripcion from (select nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora from (select ambito, entidad, id_cuenta, decode(num_cuenta,'4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018', '114',unidad_ejecutora) unidad_ejecutora from rf_tr_cuentas_bancarias where (id_cuenta in ({0}))) cb left join (select mvc.id_cuenta, sum (mvc.monto) as Rendimientos FROM rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb where mvc.id_cuenta = ctb.id_cuenta and ((mvc.id_cuenta in ({0}))) and trunc(mvc.fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' group by mvc.id_cuenta) mc on cb.id_cuenta = mc.id_cuenta inner join rf_tc_unidades_ejecutoras_tece ue on cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito group by cb.unidad_ejecutora) ren inner  join sia_admin.rh_tc_uni_ejecutoras ue_rh on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
#reportes.query.RendimientosGlobal = select ren.totalRendimientos, ren.totalCuentas, descripcion from (select nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora from (select ambito, entidad, id_cuenta, id_tipo_programa, decode(num_cuenta,'4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018', '114','4024426090','114','4040444184','114','4039477765','114','4024114555','114',unidad_ejecutora) unidad_ejecutora from rf_tr_cuentas_bancarias where  id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) )) cb left join (select mvc.id_cuenta, ctb.fecha_operacion, ctb.fecha_fin_operacion, mvc.fecha_hora, sum (mvc.monto) as Rendimientos FROM rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb where mvc.id_cuenta = ctb.id_cuenta and trunc(mvc.fecha_hora) BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' group by mvc.id_cuenta, ctb. fecha_operacion, ctb.fecha_fin_operacion, mvc.fecha_hora) mc on cb.id_cuenta = mc.id_cuenta inner join rf_tc_unidades_ejecutoras_tece ue on cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito group by cb.unidad_ejecutora) ren inner  join sia_admin.rh_tc_uni_ejecutoras ue_rh on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
reportes.query.RendimientosGlobal = select ren.totalRendimientos, ren.totalCuentas, descripcion from (select nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora from (select ambito, entidad, id_cuenta, id_tipo_programa, decode(num_cuenta,'4042105379','116','4042105361','113','4042105353','112','4025861329','101','4042105346','111','4040418089','101','4042105338','110','4042105312','101','4042105304','101','4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018', '114','4024426090','114','4040444184','114','4039477765','114','4024114555','114',unidad_ejecutora) unidad_ejecutora from rf_tr_cuentas_bancarias where  id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) )) cb left join (select mvc.id_cuenta, sum (mvc.monto) as Rendimientos FROM rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb where mvc.id_cuenta = ctb.id_cuenta and trunc(mvc.fecha_hora) BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' group by mvc.id_cuenta) mc on cb.id_cuenta = mc.id_cuenta inner join rf_tc_unidades_ejecutoras_tece ue on cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito group by cb.unidad_ejecutora) ren inner  join sia_admin.rh_tc_uni_ejecutoras ue_rh on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
#reportes.query.RendimientosTodosProgramas = SELECT cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, ue.descripcion, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' when cb.num_cuenta = '4024114555' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo , CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114'  when cb.num_cuenta = '4024114555' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora < '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal FROM (SELECT nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '114' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa FROM rf_tr_cuentas_bancarias WHERE id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or fecha_fin_operacion is null ) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)))) cb LEFT JOIN (SELECT id_cuenta,  SUM(monto) AS rendimientos FROM rf_tr_movimientos_cuenta WHERE TRUNC(fecha_hora) BETWEEN to_date({1}, 'yyyy-mm-dd') AND to_date({2}, 'yyyy-mm-dd') AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' GROUP BY id_cuenta) mc ON cb.id_cuenta = mc.id_cuenta INNER JOIN rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora AND (cb.entidad = ue.entidad) AND cb.ambito = ue.ambito ORDER BY grupo, num_cuenta 
#reportes.query.RendimientosTodosProgramas = SELECT cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, ue.descripcion, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo , CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora < '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal FROM (SELECT nombre_cta, num_cuenta, id_cuenta, unidad_ejecutora, entidad, ambito FROM rf_tr_cuentas_bancarias WHERE((id_cuenta IN ({0})))) cb LEFT JOIN (SELECT id_cuenta, SUM(monto) AS rendimientos FROM rf_tr_movimientos_cuenta WHERE ((id_cuenta IN ({0}))) AND TRUNC(fecha_hora) BETWEEN to_date({1}, 'yyyy-mm-dd') AND to_date({2}, 'yyyy-mm-dd') AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' GROUP BY id_cuenta) mc ON cb.id_cuenta = mc.id_cuenta INNER JOIN rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora AND (cb.entidad = ue.entidad) AND cb.ambito = ue.ambito ORDER BY grupo, num_cuenta 
reportes.query.RendimientosTodosProgramas = select nombre_cta, num_cuenta, rendimientos, ue.descripcion, r.unidad_ejecutora, r.entidad, r.ambito, grupo , unidad, subtotal from (select cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '110' when cb.num_cuenta = '4042105346' then '111' when cb.num_cuenta = '4042105353' then '112' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '116'  else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' when cb.num_cuenta = '4024114555' then '114' else cb.unidad_ejecutora end  ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo , CASE cb.unidad_ejecutora  WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '110' when cb.num_cuenta = '4042105346' then '111' when cb.num_cuenta = '4042105353' then '112' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '116' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' when cb.num_cuenta = '4024114555' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora < '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal FROM (SELECT nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '114' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa FROM rf_tr_cuentas_bancarias WHERE id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or fecha_fin_operacion is null ) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)))) cb LEFT JOIN (SELECT id_cuenta,  SUM(monto) AS rendimientos FROM rf_tr_movimientos_cuenta WHERE TRUNC(fecha_hora) BETWEEN to_date({1}, 'yyyy-mm-dd') AND to_date({2}, 'yyyy-mm-dd') AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' GROUP BY id_cuenta) mc ON cb.id_cuenta = mc.id_cuenta ) r INNER JOIN rf_tc_unidades_ejecutoras_tece ue ON r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad) AND r.ambito = ue.ambito ORDER BY grupo, num_cuenta 
reportes.query.ComIndebidasChq = select  cb.num_cuenta, cb.nombre_cta, to_char(mc.fecha_hora,'dd/mm/yyyy') fecha_hora, mc.clave_trans_recla, mc.descripcion, mc.monto from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and ((id_clave_trans_recla = 37 or id_clave_trans_recla = 31) and (descripcion LIKE '%CAJA%' ))) mc inner join RF_TR_CUENTAS_BANCARIAS cb on cb.id_cuenta = mc.id_cuenta inner join RF_TC_COSTOS_TRANSACCION ct on mc.id_clave_trans_recla = ct.id_clave_trans and ct.costo < mc.monto order by num_cuenta, fecha_hora 
reportes.query.TerminalPuntoVta = select  tm.descripcion, to_char(tm.fecha_hora,'dd/MM/yyyy') fecha_hora, tm.monto, ue.descripcion || '  ' || tpv.descripcion unidad, ue.unidad_ejecutora from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento, substr(trim(descripcion),-7,7) referencia from rf_tr_movimientos_cuenta where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and id_clave_trans_recla  = 49 order by id_cuenta, fecha_hora) tm inner join rf_tc_cuentas_tpv tpv on tpv.referencia_tpv = tm.referencia inner join rf_tc_unidades_ejecutoras_tece ue on tpv.unidad_ejecutora = ue.unidad_ejecutora and tpv.entidad = ue.entidad and tpv.ambito = ue.ambito order by ue.unidad_ejecutora, unidad  
#reportes.query.MovimientosCtasDetalle = select num_cuenta, nombre_cta, to_date(fecha_hora, 'yyyy-mm-dd') fecha_hora, numero_cheque, clave_trans_recla, saldo, monto, descripcion, numero_folio, referencia, id_tipo_trans, saldo_calculado from (select  cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta, decode(mc.fecha_hora, null, {2}, fecha_hora) fecha_hora, nvl(mc.numero_cheque,0) numero_cheque, nvl(mc.clave_trans_recla,0) clave_trans_recla, nvl(mc.saldo,0) saldo , nvl(mc.monto,0) monto, decode(mc.descripcion,null,' ',mc.descripcion) descripcion, nvl(mc.numero_folio,0) numero_folio, decode(mc.referencia, null, '',rtrim(mc.referencia)) referencia, nvl(mc.id_tipo_trans,0) id_tipo_trans, nvl(sd.saldo_calculado,0) saldo_calculado from (select id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora, numero_cheque,  monto, descripcion,  numero_folio,  referencia, id_tipo_trans, clave_trans_recla, saldo from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) mc RIGHT JOIN (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION from RF_TR_CUENTAS_BANCARIAS cb where (cb.id_cuenta in ({0})) ) cb on cb.id_cuenta = mc.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta inner join RF_TR_SALDOS_DIARIOS sd on cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = (select tsr.obten_anterior_dia_habil(to_date ({1},'yyyy-mm-dd')) from dual) order by cb.num_cuenta, mc.fecha_hora)  
reportes.query.MovimientosCtasDetalle = select mov.id_cuenta, mov.num_cuenta, mov.nombre_cta, fecha_hora, nvl(numero_cheque,0) numero_cheque, decode(clave_trans_recla,null,' ',clave_trans_recla) clave_trans_recla, nvl(monto,0) monto, decode(descripcion,null,' ',descripcion) descripcion, nvl(numero_folio,0) numero_folio, decode(referencia,null,' ',referencia) referencia, decode(id_tipo_trans,null,' ',id_tipo_trans) id_tipo_trans, nvl(saldo,0) saldo, nvl(sal.saldo_inicial,0) saldo_inicial, nvl(sal.saldo_final,0) saldo_final from ( select cb.id_cuenta, cb.num_cuenta, cb.nombre_cta, to_date(fecha_hora, 'yyyy-mm-dd') fecha_hora, numero_cheque, clave_trans_recla,  monto, mc.descripcion, numero_folio, referencia, id_tipo_trans, saldo from (select id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora, numero_cheque,  saldo, monto, descripcion,  numero_folio,  referencia, id_tipo_trans, clave_trans_recla, saldo_banco from RF_TR_MOVIMIENTOS_CUENTA m inner join RF_TR_CUENTAS_BANCARIAS cb on cb.id_cuenta = m.id_cuenta inner join RF_TR_SALDOS_DIARIOS sd on cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = trunc(m.fecha_hora) where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) mc RIGHT JOIN (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION from RF_TR_CUENTAS_BANCARIAS cb where (cb.id_cuenta in ({0})) ) cb on cb.id_cuenta = mc.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by cb.num_cuenta, mc.fecha_hora) mov inner join (select num_cuenta, saldo_calculado saldo_inicial, saldo_calculado+abono-cargo saldo_final from (select cb.num_cuenta,  sum(decode(mc.id_tipo_trans,'DR',monto,0)) cargo, sum(decode(mc.id_tipo_trans,'CR',monto,0)) abono, sd. saldo_calculado from (select id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora, numero_cheque,  monto, descripcion,  numero_folio,  referencia, id_tipo_trans, clave_trans_recla, saldo from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) mc RIGHT JOIN (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION from RF_TR_CUENTAS_BANCARIAS cb where (cb.id_cuenta in ({0})) ) cb on cb.id_cuenta = mc.id_cuenta inner join RF_TR_SALDOS_DIARIOS sd on cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = (select tsr.obten_anterior_dia_habil(to_date ({1},'yyyy-mm-dd')) from dual) group by cb.num_cuenta, saldo_calculado) order by num_cuenta) sal on mov.num_cuenta = sal.num_cuenta 
reportes.query.SaldosDiarios = select descripcion, fecha, saldo_calculado from (select cb.num_cuenta||' '|| decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) descripcion, sd.fecha, sd.saldo_calculado from (select fecha, saldo_calculado, id_cuenta from rf_tr_saldos_diarios where (id_cuenta in ({0})) and trunc(fecha) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha) sd inner join rf_tr_cuentas_bancarias cb on sd.id_cuenta = cb.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by cb.unidad_ejecutora,  cb.num_cuenta, cb.nombre_cta, fecha) 
reportes.query.MovimientosCtasTotalDia = select todasCtas.id_cuenta, todasCtas.num_cuenta, todasCtas.nombre_cta, nvl(totCargo,0) totCargo, nvl(totAbono,0) totAbono , todasCtas.SALDO_CALCULADO, todasCtas.FECHA, todasCtas.UNIDAD_EJECUTORA, todasCtas.SALDO_CALCULADO+nvl(totCargo,0)-nvl(totAbono,0) saldo_inicial from (select id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora, sum(cargo) totCargo, sum(abono) totAbono from (select m.id_cuenta,m.num_cuenta, m.nombre_cta,m.id_tipo_trans, m.saldo_calculado saldo_final, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as abono, trunc(fecha) fecha, m.unidad_ejecutora from (select mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.id_tipo_trans, sd.saldo_calculado, mc.monto, mc.fecha_hora fecha, cb.unidad_ejecutora from RF_TR_MOVIMIENTOS_CUENTA  mc inner join RF_TR_CUENTAS_BANCARIAS cb on cb.id_cuenta = mc.id_cuenta inner join RF_TR_SALDOS_DIARIOS sd on cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = trunc(mc.fecha_hora) where (id_cuenta in ({0})) and trunc(mc.fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) m group by m.id_cuenta, m.num_cuenta, m.nombre_cta, m.id_tipo_trans, m.saldo_calculado,m.fecha, m.unidad_ejecutora) group by id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora) movexistentes right join (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION, ID_SALDO_DIARIO,FECHA,SALDO_CALCULADO from RF_TR_CUENTAS_BANCARIAS cb inner join RF_TR_SALDOS_DIARIOS sd  on cb.id_cuenta = sd.id_cuenta and sd.fecha  BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') where (cb.id_cuenta in ({0}))) todasCtas on movexistentes.id_cuenta = todasCtas.id_cuenta and  movexistentes.fecha = todasCtas.fecha order by todasCtas.UNIDAD_EJECUTORA, todasCtas.num_cuenta, todasCtas.nombre_cta, todasCtas.FECHA 
reportes.query.ChqsPagados = select cb.num_cuenta, cb.nombre_cta, tm.descripcion, tm.fecha_hora, tm.monto, tm.numero_cheque from (select id_cuenta, fecha_hora, monto,descripcion, clave_trans_recla,id_clave_trans_recla, id_movimiento, numero_cheque from  RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and id_clave_trans_recla  = 22 and monto > 5000.00 order by id_cuenta, fecha_hora) tm inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta and cb.id_tipo_cta = 1 and cb.id_estatus_cta_prog = 1 
reportes.query.ReversoComisiones = select cb.num_cuenta, cb.nombre_cta, tm.descripcion, to_char(tm.fecha_hora,'dd/mm/yyyy') fecha_hora, tm.clave_trans_recla, tm.monto from (select  id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta  order by num_cuenta, fecha_hora 
reportes.query.TotalReversoCom = select cb.num_cuenta, cb.nombre_cta, sum(tm.monto) as TotalComisiones from (select  id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta group by cb.num_cuenta, cb.nombre_cta  
reportes.query.TotalComisionesCobradas = select cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta , sum(tm.monto) total from (select  id_cuenta, fecha_hora, monto,descripcion, clave_trans_recla,id_clave_trans_recla, id_movimiento from    RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TC_COSTOS_TRANSACCION tc on    tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto <= tc.limite_superior) or (tc.limite_inferior is null and tc.limite_superior is null)) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta group by   cb.num_cuenta, cb.nombre_cta,cb.id_tipo_cta,tc.nombre_corto order by num_cuenta 
reportes.query.TransaccionalidadCuentas = select transacciones, descripcion, substr(fecha,9,2)||'/'|| substr(fecha,6,2)||'/'|| substr(fecha,1,4) fecha from (select count(mc.id_cuenta) as transacciones, cb.num_cuenta ||' ' || (decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta)) descripcion, decode(mc.fecha_hora,null,{1},mc.fecha_hora) as fecha from (select id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora from rf_tr_movimientos_cuenta where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta ) mc RIGHT JOIN (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION from RF_TR_CUENTAS_BANCARIAS cb where (cb.id_cuenta in ({0})) ) cb on mc.id_cuenta = cb.id_cuenta  inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta  group by mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.fecha_hora,cb.id_tipo_cta, tc.nombre_corto order by  cb.num_cuenta, mc.fecha_hora)  
reportes.query.DetalleComisionesCobradas = select cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta,tm.descripcion, to_char(tm.fecha_hora,'dd/mm/yyyy') fecha_hora, tm.clave_trans_recla, tm.monto from (select  id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from    RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TC_COSTOS_TRANSACCION tc on    tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto <= tc.limite_superior) or (tc.limite_inferior is null and tc.limite_superior is null)) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by num_cuenta, fecha_hora 
reportes.query.MovimientosCuentasPropias = select num_cuenta, nombre_cta, to_date(fecha, 'yyyy-MM-dd') fecha, cargo, abono  from (select (case when t.fecha is null then f.num_cuenta else t.num_cuenta end) num_cuenta, (case when t.fecha is null then f.nombre_cta else t.nombre_cta end) nombre_cta, (case when t.fecha is null then f.fecha else t.fecha end) fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono from (select num_cuenta, nombre_cta, fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono, unidad_ejecutora from (select m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as abono , unidad_ejecutora from (select cb.num_cuenta, cb.nombre_cta, nvl(mc.monto,0) monto, nvl(mc.id_tipo_trans,0) id_tipo_trans, nvl(mc.descripcion,' ') descripcion, mc.fecha_hora fecha, unidad_ejecutora from (select id_cuenta, num_cuenta, nombre_cta, unidad_ejecutora from RF_TR_CUENTAS_BANCARIAS where id_cuenta in ({0})) cb left join (select mov.id_cuenta, monto, id_tipo_trans, descripcion, fecha_hora from (select id_cuenta, monto, id_tipo_trans, descripcion, to_char(trunc(fecha_hora),'yyyy-MM-dd') fecha_hora, substr(trim(descripcion),-10,10) cuenta from  RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date({2},'yyyy-mm-dd') and clave_trans in (5423, 5489)) mov inner join (select ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG, AMBITO,PROCESAR,FECHA_OPERACION,FECHA_FIN_OPERACION from RF_TESORERIA.RF_TR_CUENTAS_BANCARIAS where id_tipo_programa = (select distinct id_tipo_programa from RF_TR_CUENTAS_BANCARIAS where id_cuenta in ({0}))) ctas on ctas.num_cuenta = mov.cuenta ) mc on cb.id_cuenta = mc.id_cuenta ) m group by m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, m.unidad_ejecutora order by m.fecha, m.num_cuenta)) t, ( select * from (select rownum-1, to_char(to_date({1},'yyyy-mm-dd')+ rownum-1,'yyyy-mm-dd') fecha from rf_tr_saldos_diarios t where to_date({1},'yyyy-mm-dd')+ rownum-1 BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date({2},'yyyy-mm-dd')) tt, (select c.num_cuenta, c.nombre_cta, c.unidad_ejecutora from rf_tr_cuentas_bancarias c where c.id_cuenta in ({0})) cc ) f where t.num_cuenta(+) = f.num_cuenta and t.fecha(+) = f.fecha order by f.unidad_ejecutora,  num_cuenta, nombre_cta, fecha) 
reportes.query.ReferenciasIdentificadasReintegros = select res.fecha_hora, res.num_cuenta, res.nombre_cta, res.referencia, res.monto, res.descripcion, res.ctaAfecta, cb1.nombre_cta ctaAfectar  from (SELECT mc.fecha_hora, cb.num_cuenta, cb.nombre_cta, mc.referencia, mc.monto, mc.descripcion, substr(trim(mc.descripcion),-10,10) ctaAfecta FROM (SELECT id_cuenta, monto, referencia, fecha_hora, clave_trans_recla, descripcion, id_tipo_trans FROM rf_tr_movimientos_cuenta WHERE (id_cuenta in ({0})) AND TRUNC(fecha_hora) BETWEEN to_date({1},'yyyy-mm-dd') AND to_date({2},'yyyy-mm-dd') AND id_tipo_trans = 'CR' AND (id_clave_trans_recla = 5 OR id_clave_trans_recla = 27) AND (clave_trans_recla = 5423 OR clave_trans_recla = 5489) AND (referencia LIKE '%ARE%' OR (SUBSTR(referencia,    1,    2) = '03' OR SUBSTR(referencia,    1,    2) = '04' OR SUBSTR(referencia,    1,    2) = '23' OR SUBSTR(referencia,    1,    2) = '24')) ORDER BY id_cuenta) mc INNER JOIN rf_tr_cuentas_bancarias cb ON mc.id_cuenta = cb.id_cuenta and num_cuenta not in ('4042547851','4042547869') and cb.id_tipo_cta not in (5,1,2)) res inner join rf_tr_cuentas_bancarias cb1 on res.ctaAfecta = cb1.num_cuenta and cb1.id_tipo_cta !=3 order by res.num_cuenta,  fecha_hora, ctaafecta 
#reportes de solicitudes
reportes.query.SolicitudCargo = select  num_cuenta, nombre_cta, fecha, descripcion, clave_trans_recla, decode(monto_real,null,0,monto_real) monto_real from RF_TR_SOL_COM_INDEBIDAS rsc inner join (select com.id_comision_ind, cb.num_cuenta, cb.nombre_cta, trunc(mov.fecha_hora) fecha, mov.descripcion, mov.clave_trans_recla,  com.monto_real from RF_TR_COMISIONES_INDEBIDAS com inner join RF_TR_MOVIMIENTOS_CUENTA mov on com.mov_comision_ind = mov.id_movimiento and com.id_cuenta = mov.id_cuenta inner join RF_TR_CUENTAS_BANCARIAS cb on com.id_cuenta = cb.id_cuenta) res on rsc.id_com_ind = res.id_comision_ind where id_solicitud = {0} order by num_cuenta 
reportes.query.ReporteComisiones = select  num_cuenta, nombre_cta, fecha, descripcion, monto, clave_trans_recla, decode(monto_real,null,0,monto_real) monto_real from RF_TR_SOL_COM_INDEBIDAS rsc inner join (select com.id_comision_ind, cb.num_cuenta, cb.nombre_cta, trunc(mov.fecha_hora) fecha, mov.descripcion,  mov.monto, mov.clave_trans_recla, com.monto_real from RF_TR_COMISIONES_INDEBIDAS com inner join RF_TR_MOVIMIENTOS_CUENTA mov on com.mov_comision_ind = mov.id_movimiento and com.id_cuenta = mov.id_cuenta inner join RF_TR_CUENTAS_BANCARIAS cb on com.id_cuenta = cb.id_cuenta) res on rsc.id_com_ind = res.id_comision_ind where id_solicitud = {0} order by fecha, num_cuenta 
reportes.query.consolidacionSaldos = select unidad_ejecutora, nombre_corto, sum(decode(tipoCuenta||bandera,10,saldo,0)) dispAnt, sum(decode(tipoCuenta||bandera,11,saldo,0)) dispAct,       sum(decode(tipoCuenta||bandera,20,saldo,0)) ingAnt, sum(decode(tipoCuenta||bandera,21,saldo,0)) ingpAct,       sum(decode(tipoCuenta||bandera,30,saldo,0)) chqGCAnt, sum(decode(tipoCuenta||bandera,31,saldo,0)) chqGCAct,       sum(decode(tipoCuenta||bandera,40,saldo,0)) chqSPAnt, sum(decode(tipoCuenta||bandera,41,saldo,0)) chqSPAct from (select sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto,0 bandera  from (select saldo_calculado, unidad_ejecutora, nombre_corto,       decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta from     (    select saldo_calculado,fecha,            decode(num_cuenta,'4042547885',6,cb.id_tipo_cta ) tipo_cuenta ,            decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora ,           decode(num_cuenta,'4042547752','TESORERIA CENTRAL','4040444184','TESORERIA CENTRAL','4024426090','TESORERIA CENTRAL','4039477765','TESORERIA CENTRAL',ue.nombre_corto ) nombre_corto     from rf_tr_saldos_diarios sd    inner join rf_tr_cuentas_bancarias cb    on sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in ({0}))    inner join sia_admin.RH_TC_UNI_EJECUTORAS ue    on cb.unidad_ejecutora = ue.unidad_ejecutora     where trunc(fecha) =  to_date({1},'yyyy-mm-dd'))sub) res group by tipoCuenta, unidad_ejecutora, nombre_corto union all select sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto, 1 bandera from (select saldo_calculado, unidad_ejecutora, nombre_corto,        decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta from     (    select saldo_calculado,            decode(num_cuenta,'4042547885',6,cb.id_tipo_cta ) tipo_cuenta ,            decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora ,           decode(num_cuenta,'4042547752','TESORERIA CENTRAL','4040444184','TESORERIA CENTRAL','4024426090','TESORERIA CENTRAL','4039477765','TESORERIA CENTRAL',ue.nombre_corto ) nombre_corto     from rf_tr_saldos_diarios sd    inner join rf_tr_cuentas_bancarias cb    on sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in ({0}))    inner join sia_admin.RH_TC_UNI_EJECUTORAS ue    on cb.unidad_ejecutora = ue.unidad_ejecutora     where trunc(fecha) = to_date({2},'yyyy-mm-dd'))sub) res group by tipoCuenta, unidad_ejecutora, nombre_corto order by unidad_ejecutora, tipoCuenta) group by unidad_ejecutora, nombre_corto 

#excel
reportes.query.xls.ChqsSalvoBuenCobro = select cb.num_cuenta cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre, tm.descripcion descripcion, to_char(tm.fecha_hora,'dd/MM/yyyy') fecha, tm.monto monto, tsr.obten_siguiente_dia_habil(tm.descripcion, trunc(tm.fecha_hora))as DiasMenos from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from rf_tr_movimientos_cuenta where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and id_clave_trans_recla  = 2 order by id_cuenta, fecha_hora) tm inner join rf_tr_cuentas_bancarias cb on tm.id_cuenta = cb.id_cuenta and (cb.num_cuenta not in ('4042547869','4039477682')) inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by cb.num_cuenta, tm.fecha_hora
#reportes.query.xls.RendimientosGlobal = select descripcion UnidadAdministrativa, ren.totalCuentas  TotalCuentas, ren.totalRendimientos TotalRendimientos from (select nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora from (select ambito, entidad, id_cuenta, decode(num_cuenta,'4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018', '114',unidad_ejecutora) unidad_ejecutora from rf_tr_cuentas_bancarias where (id_cuenta in ({0}))) cb left join (select mvc.id_cuenta, sum (mvc.monto) as Rendimientos FROM rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb where mvc.id_cuenta = ctb.id_cuenta and ((mvc.id_cuenta in ({0}))) and trunc(mvc.fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' group by mvc.id_cuenta) mc on cb.id_cuenta = mc.id_cuenta inner join rf_tc_unidades_ejecutoras_tece ue on cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito group by cb.unidad_ejecutora) ren inner  join sia_admin.rh_tc_uni_ejecutoras ue_rh on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
#reportes.query.xls.RendimientosGlobal = select descripcion UnidadAdministrativa, ren.totalCuentas  TotalCuentas, ren.totalRendimientos TotalRendimientos from (select nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora from (select ambito, entidad, id_cuenta, decode(num_cuenta,'4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018', '114',unidad_ejecutora) unidad_ejecutora from rf_tr_cuentas_bancarias where id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')))) cb left join (select mvc.id_cuenta, sum (mvc.monto) as Rendimientos FROM rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb where mvc.id_cuenta = ctb.id_cuenta and trunc(mvc.fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' group by mvc.id_cuenta) mc on cb.id_cuenta = mc.id_cuenta inner join rf_tc_unidades_ejecutoras_tece ue on cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito group by cb.unidad_ejecutora) ren inner  join sia_admin.rh_tc_uni_ejecutoras ue_rh on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
reportes.query.xls.RendimientosGlobal = select descripcion UnidadAdministrativa, ren.totalCuentas  TotalCuentas, ren.totalRendimientos TotalRendimientos from (select nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora from (select ambito, entidad, nombre_cta, id_cuenta, num_cuenta, decode(num_cuenta,'4042105379','116','4042105361','113','4042105353','112','4025861329','101','4042105346','111','4040418089','101','4042105338','110','4042105312','101','4042105304','101','4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018', '114','4024426090','114','4040444184','114','4039477765','114','4024114555','114',unidad_ejecutora) unidad_ejecutora from rf_tr_cuentas_bancarias where id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd')) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')))) cb left join (select mvc.id_cuenta, sum (mvc.monto) as Rendimientos FROM rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb where mvc.id_cuenta = ctb.id_cuenta and trunc(mvc.fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' group by mvc.id_cuenta) mc on cb.id_cuenta = mc.id_cuenta inner join rf_tc_unidades_ejecutoras_tece ue on cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito group by cb.unidad_ejecutora) ren inner  join sia_admin.rh_tc_uni_ejecutoras ue_rh on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
#reportes.query.xls.RendimientosTodosProgramas = SELECT descripcion UnidadAdministrativa , nombre_cta NombreCuenta, num_cuenta  Numero, rendimientos Rendimientos from (select cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,   ue.descripcion, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo , CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora < '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal FROM (SELECT nombre_cta, num_cuenta, id_cuenta, unidad_ejecutora, entidad, ambito FROM rf_tr_cuentas_bancarias WHERE((id_cuenta IN ({0})))) cb LEFT JOIN (SELECT id_cuenta, SUM(monto) AS rendimientos FROM rf_tr_movimientos_cuenta WHERE ((id_cuenta IN ({0}))) AND TRUNC(fecha_hora) BETWEEN to_date({1}, 'yyyy-mm-dd') AND to_date({2}, 'yyyy-mm-dd') AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' GROUP BY id_cuenta) mc ON cb.id_cuenta = mc.id_cuenta INNER JOIN rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora AND (cb.entidad = ue.entidad) AND cb.ambito = ue.ambito ORDER BY grupo, num_cuenta ) 
#reportes.query.xls.RendimientosTodosProgramas = SELECT descripcion UnidadAdministrativa , nombre_cta NombreCuenta, num_cuenta  Numero, rendimientos Rendimientos from (select cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,   ue.descripcion, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo , CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora < '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal FROM (SELECT nombre_cta, num_cuenta, id_cuenta, unidad_ejecutora, entidad, ambito FROM rf_tr_cuentas_bancarias WHERE id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or fecha_fin_operacion is null ) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)))) cb LEFT JOIN (SELECT id_cuenta, SUM(monto) AS rendimientos FROM rf_tr_movimientos_cuenta WHERE TRUNC(fecha_hora) BETWEEN to_date({1}, 'yyyy-mm-dd') AND to_date({2}, 'yyyy-mm-dd') AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' GROUP BY id_cuenta) mc ON cb.id_cuenta = mc.id_cuenta INNER JOIN rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora AND (cb.entidad = ue.entidad) AND cb.ambito = ue.ambito ORDER BY grupo, num_cuenta )
reportes.query.xls.RendimientosTodosProgramas = SELECT ue.descripcion UnidadAdministrativa , nombre_cta NombreCuenta, num_cuenta  Numero, rendimientos Rendimientos from (select cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '110' when cb.num_cuenta = '4042105346' then '111' when cb.num_cuenta = '4042105353' then '112' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '116' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' when cb.num_cuenta = '4024114555' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo , CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '114' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '110' when cb.num_cuenta = '4042105346' then '111' when cb.num_cuenta = '4042105353' then '112' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '116' else cb.unidad_ejecutora end when '112' then case when cb.num_cuenta = '4042986018' then '114' when cb.num_cuenta = '4024114555' then '114' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora < '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal FROM (SELECT nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '114' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa FROM rf_tr_cuentas_bancarias WHERE id_tipo_programa != (select decode(programa,6,1,6) res from (select distinct(id_tipo_programa) programa from RF_TR_CUENTAS_BANCARIAS where (id_cuenta in ({0})))) and ((fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) or fecha_fin_operacion is null ) or (fecha_operacion <= to_date({1},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion >= to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date({2},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') or fecha_fin_operacion is null)))) cb LEFT JOIN (SELECT id_cuenta, SUM(monto) AS rendimientos FROM rf_tr_movimientos_cuenta WHERE TRUNC(fecha_hora) BETWEEN to_date({1}, 'yyyy-mm-dd') AND to_date({2}, 'yyyy-mm-dd') AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' GROUP BY id_cuenta) mc ON cb.id_cuenta = mc.id_cuenta) r INNER JOIN rf_tc_unidades_ejecutoras_tece ue ON r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad) AND r.ambito = ue.ambito ORDER BY grupo, num_cuenta 
reportes.query.xls.ComIndebidasChq = select  cb.num_cuenta NumeroCuenta, cb.nombre_cta Nombre, to_char(mc.fecha_hora,'dd/mm/yyyy') Fecha, mc.clave_trans_recla Clave, mc.descripcion Transaccion, mc.monto Monto from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN  to_date ({1},'yyyy-mm-dd') AND  to_date ({2},'yyyy-mm-dd') and ((id_clave_trans_recla = 37 or id_clave_trans_recla = 31) and (descripcion LIKE '%CAJA%' ))) mc inner join RF_TR_CUENTAS_BANCARIAS cb on cb.id_cuenta = mc.id_cuenta  inner join RF_TC_COSTOS_TRANSACCION ct on mc.id_clave_trans_recla = ct.id_clave_trans and ct.costo < mc.monto order by num_cuenta, fecha_hora 
reportes.query.xls.TerminalPuntoVta  = select unidad Nombre, fecha_hora Fecha, descripcion Concepto, monto Monto from (select  ue.descripcion || '  ' || tpv.descripcion unidad, to_char(tm.fecha_hora,'dd/MM/yyyy') fecha_hora, tm.descripcion,  tm.monto,  ue.unidad_ejecutora from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento, substr(trim(descripcion),-7,7) referencia from rf_tr_movimientos_cuenta where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and id_clave_trans_recla  = 49 order by id_cuenta, fecha_hora) tm inner join rf_tc_cuentas_tpv tpv on tpv.referencia_tpv = tm.referencia inner join rf_tc_unidades_ejecutoras_tece ue on tpv.unidad_ejecutora = ue.unidad_ejecutora and tpv.entidad = ue.entidad and tpv.ambito = ue.ambito order by ue.unidad_ejecutora, unidad) 
reportes.query.xls.MovimientosCtasDetalle = select num_cuenta Cuenta,  nombre_cta Nombre,substr(fecha_hora,9,2)||'/'|| substr(fecha_hora,6,2)||'/'|| substr(fecha_hora,1,4) fecha, numero_cheque Cheque, clave_trans_recla Clave, monto Monto, descripcion Descripcion, numero_folio Folio, referencia Referencia, id_tipo_trans Operacion from (select  cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta, decode(mc.fecha_hora, null, {2}, fecha_hora) fecha_hora, nvl(mc.numero_cheque,0) numero_cheque, nvl(mc.clave_trans_recla,0) clave_trans_recla, nvl(mc.saldo,0) saldo , nvl(mc.monto,0) monto, decode(mc.descripcion,null,' ',mc.descripcion) descripcion, nvl(mc.numero_folio,0) numero_folio, decode(mc.referencia, null, '',rtrim(mc.referencia)) referencia, nvl(mc.id_tipo_trans,0) id_tipo_trans, nvl(sd.saldo_calculado,0) saldo_calculado from (select id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora, numero_cheque,  monto, descripcion,  numero_folio,  referencia, id_tipo_trans, clave_trans_recla, saldo from RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) mc RIGHT JOIN (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR, FECHA_OPERACION from RF_TR_CUENTAS_BANCARIAS cb where (cb.id_cuenta in ({0})) ) cb on cb.id_cuenta = mc.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta inner join RF_TR_SALDOS_DIARIOS sd on cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = (select tsr.obten_anterior_dia_habil(to_date ({1},'yyyy-mm-dd')) from dual) order by cb.num_cuenta, mc.fecha_hora) 
reportes.query.xls.SaldosDiarios = select cuenta, to_char(fecha, 'dd/mm/yyyy') fecha, saldo from (select cb.num_cuenta||' '|| decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) Cuenta, fecha, sd.saldo_calculado saldo from (select  fecha, saldo_calculado, id_cuenta from   rf_tr_saldos_diarios where (id_cuenta in ({0}))   and  trunc(fecha) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha) sd inner join  rf_tr_cuentas_bancarias cb on sd.id_cuenta = cb.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by  cb.unidad_ejecutora,  cb.num_cuenta, cb.nombre_cta, fecha) 
reportes.query.xls.MovimientosCtasTotalDia = select to_char(todasCtas.FECHA,'dd/mm/yyyy') fecha,  todasCtas.num_cuenta, todasCtas.nombre_cta,todasCtas.SALDO_CALCULADO+nvl(totCargo,0)- nvl(totAbono,0) saldo_inicial, nvl(totCargo,0) totCargo, nvl(totAbono,0) totAbono , todasCtas.SALDO_CALCULADO saldo_final from (select id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora, sum(cargo) totCargo, sum(abono) totAbono from (select m.id_cuenta,m.num_cuenta, m.nombre_cta,m.id_tipo_trans, m.saldo_calculado saldo_final, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as abono, trunc(fecha) fecha, m.unidad_ejecutora from (select mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.id_tipo_trans, sd.saldo_calculado, mc.monto, mc.fecha_hora fecha, cb.unidad_ejecutora from RF_TR_MOVIMIENTOS_CUENTA  mc inner join RF_TR_CUENTAS_BANCARIAS cb on cb.id_cuenta = mc.id_cuenta inner join RF_TR_SALDOS_DIARIOS sd on cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = trunc(mc.fecha_hora) where (id_cuenta in ({0})) and trunc(mc.fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd')) m group by m.id_cuenta, m.num_cuenta, m.nombre_cta, m.id_tipo_trans, m.saldo_calculado,m.fecha, m.unidad_ejecutora) group by id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora) movexistentes right join (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION, ID_SALDO_DIARIO,FECHA,SALDO_CALCULADO from RF_TR_CUENTAS_BANCARIAS cb inner join RF_TR_SALDOS_DIARIOS sd  on cb.id_cuenta = sd.id_cuenta and sd.fecha  BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') where (cb.id_cuenta in ({0}))) todasCtas on movexistentes.id_cuenta = todasCtas.id_cuenta and  movexistentes.fecha = todasCtas.fecha order by todasCtas.UNIDAD_EJECUTORA, todasCtas.num_cuenta, todasCtas.nombre_cta, todasCtas.FECHA
reportes.query.xls.ChqsPagados = select cb.num_cuenta Numero_Cuenta, cb.nombre_cta Nombre_Cuenta, to_char(tm.fecha_hora,'dd/mm/yyyy') Fecha, tm.numero_cheque No_Cheque, tm.monto Importe from (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento, numero_cheque from  RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') and id_clave_trans_recla  = 22 and monto > 5000.00 order by id_cuenta, fecha_hora) tm inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta and cb.id_tipo_cta = 1 and cb.id_estatus_cta_prog = 1 
reportes.query.xls.ReversoComisiones = select cb.num_cuenta Numero_Cuenta, cb.nombre_cta Cuenta, to_char(tm.fecha_hora,'dd/mm/yyyy') Fecha, tm.clave_trans_recla Clave, tm.descripcion Transaccion, tm.monto Monto from (select  id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from    RF_TR_MOVIMIENTOS_CUENTA  where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta order by num_cuenta, fecha_hora 
reportes.query.xls.TotalReversoCom = select cb.num_cuenta Numero_Cuenta, cb.nombre_cta Cuenta, sum(tm.monto) as TotalReversoComisiones from (select  id_cuenta,      fecha_hora,        monto, descripcion,    clave_trans_recla, id_clave_trans_recla, id_movimiento from    RF_TR_MOVIMIENTOS_CUENTA  where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta group by cb.num_cuenta, cb.nombre_cta 
reportes.query.xls.TotalComisionesCobradas = select num_cuenta Cuenta, nombre_cta Nombre, total TotalComisiones from (select cb.num_cuenta , decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta , sum(tm.monto) total from (select  id_cuenta, fecha_hora, monto,descripcion, clave_trans_recla,id_clave_trans_recla, id_movimiento from    RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TC_COSTOS_TRANSACCION tc on    tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto <= tc.limite_superior) or (tc.limite_inferior is null and tc.limite_superior is null)) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta group by   cb.num_cuenta, cb.nombre_cta,cb.id_tipo_cta,tc.nombre_corto order by num_cuenta) 
reportes.query.xls.TransaccionalidadCuentas = select descripcion Cuenta, transacciones Transaccionalidad, substr(fecha,9,2)||'/'|| substr(fecha,6,2)||'/'|| substr(fecha,1,4) Fecha from (select count(mc.id_cuenta) as transacciones, cb.num_cuenta ||' ' || (decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta)) descripcion, decode(mc.fecha_hora,null,{1},mc.fecha_hora) as fecha from (select id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora from rf_tr_movimientos_cuenta where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta ) mc RIGHT JOIN (select cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION from RF_TR_CUENTAS_BANCARIAS cb where (cb.id_cuenta in ({0})) ) cb on mc.id_cuenta = cb.id_cuenta  inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta  group by mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.fecha_hora,cb.id_tipo_cta, tc.nombre_corto order by  cb.num_cuenta, mc.fecha_hora) 
reportes.query.xls.DetalleComisionesCobradas = select cb.num_cuenta Numero_Cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) Nombre_Cuenta, to_char(tm.fecha_hora,'dd/mm/yyyy') Fecha, tm.clave_trans_recla Clave, tm.descripcion Transaccion, tm.monto Monto from (select  id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento from    RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date ({2},'yyyy-mm-dd') order by id_cuenta, fecha_hora) tm inner join RF_TC_CLAVES_TRANSACCION tct on    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora <= tct.vigencia_fin or tct.vigencia_fin is null))) inner join RF_TC_COSTOS_TRANSACCION tc on    tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto <= tc.limite_superior) or (tc.limite_inferior is null and tc.limite_superior is null)) inner join RF_TR_CUENTAS_BANCARIAS cb on tm.id_cuenta = cb.id_cuenta inner join RF_TC_TIPO_CUENTA tc on cb.id_tipo_cta = tc.id_tipo_cta order by num_cuenta, Fecha 
reportes.query.xls.MovimientosCuentasPropias = select num_cuenta, nombre_cta, substr(fecha,9,2)||'/'|| substr(fecha,6,2)||'/'|| substr(fecha,1,4) fecha, cargo abono, abono cargo from (select (case when t.fecha is null then f.num_cuenta else t.num_cuenta end) num_cuenta, (case when t.fecha is null then f.nombre_cta else t.nombre_cta end) nombre_cta, (case when t.fecha is null then f.fecha else t.fecha end) fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono from (select num_cuenta, nombre_cta, fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono, unidad_ejecutora from (select m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as abono , unidad_ejecutora from (select cb.num_cuenta, cb.nombre_cta, nvl(mc.monto,0) monto, nvl(mc.id_tipo_trans,0) id_tipo_trans, nvl(mc.descripcion,' ') descripcion, mc.fecha_hora fecha, unidad_ejecutora from (select id_cuenta, num_cuenta, nombre_cta, unidad_ejecutora from RF_TR_CUENTAS_BANCARIAS where id_cuenta in ({0})) cb left join (select mov.id_cuenta, monto, id_tipo_trans, descripcion, fecha_hora from (select id_cuenta, monto, id_tipo_trans, descripcion, to_char(trunc(fecha_hora),'yyyy-MM-dd') fecha_hora, substr(trim(descripcion),-10,10) cuenta from  RF_TR_MOVIMIENTOS_CUENTA where (id_cuenta in ({0})) and trunc(fecha_hora) BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date({2},'yyyy-mm-dd') and clave_trans in (5423, 5489)) mov inner join (select ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG, AMBITO,PROCESAR,FECHA_OPERACION,FECHA_FIN_OPERACION from RF_TESORERIA.RF_TR_CUENTAS_BANCARIAS where id_tipo_programa = (select distinct id_tipo_programa from RF_TR_CUENTAS_BANCARIAS where id_cuenta in ({0}))) ctas on ctas.num_cuenta = mov.cuenta ) mc on cb.id_cuenta = mc.id_cuenta ) m group by m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, m.unidad_ejecutora order by m.fecha, m.num_cuenta)) t, ( select * from (select rownum-1, to_char(to_date({1},'yyyy-mm-dd')+ rownum-1,'yyyy-mm-dd') fecha from rf_tr_saldos_diarios t where to_date({1},'yyyy-mm-dd')+ rownum-1 BETWEEN to_date ({1},'yyyy-mm-dd') AND to_date({2},'yyyy-mm-dd')) tt, (select c.num_cuenta, c.nombre_cta, c.unidad_ejecutora from rf_tr_cuentas_bancarias c where c.id_cuenta in ({0})) cc ) f where t.num_cuenta(+) = f.num_cuenta and t.fecha(+) = f.fecha order by f.unidad_ejecutora,  num_cuenta, nombre_cta, fecha) 
reportes.query.xls.ReferenciasIdentificadasReintegros = select to_char(res.fecha_hora,'dd/mm/yyyy') fecha_hora, res.num_cuenta, res.nombre_cta,  res.monto, res.referencia, res.ctaAfecta, cb1.nombre_cta ctaAfectar  from (SELECT mc.fecha_hora, cb.num_cuenta, cb.nombre_cta, mc.referencia, mc.monto, mc.descripcion, substr(trim(mc.descripcion),-10,10) ctaAfecta FROM (SELECT id_cuenta, monto, referencia, fecha_hora, clave_trans_recla, descripcion, id_tipo_trans FROM rf_tr_movimientos_cuenta WHERE (id_cuenta in ({0})) AND TRUNC(fecha_hora) BETWEEN to_date({1},'yyyy-mm-dd') AND to_date({2},'yyyy-mm-dd') AND id_tipo_trans = 'CR' AND (id_clave_trans_recla = 5 OR id_clave_trans_recla = 27) AND (clave_trans_recla = 5423 OR clave_trans_recla = 5489) AND (referencia LIKE '%ARE%' OR (SUBSTR(referencia,    1,    2) = '03' OR SUBSTR(referencia,    1,    2) = '04' OR SUBSTR(referencia,    1,    2) = '23' OR SUBSTR(referencia,    1,    2) = '24')) ORDER BY id_cuenta) mc INNER JOIN rf_tr_cuentas_bancarias cb ON mc.id_cuenta = cb.id_cuenta and num_cuenta not in ('4042547851','4042547869') and cb.id_tipo_cta not in (5,1,2)) res inner join rf_tr_cuentas_bancarias cb1 on res.ctaAfecta = cb1.num_cuenta and cb1.id_tipo_cta !=3 order by res.num_cuenta,  fecha_hora, ctaafecta 
reportes.query.xls.consolidacionSaldos = select unidad_ejecutora, nombre_corto, sum(decode(tipoCuenta||bandera,10,saldo,0)) dispAnt, sum(decode(tipoCuenta||bandera,11,saldo,0)) dispAct, sum(decode(tipoCuenta||bandera,20,saldo,0)) ingAnt, sum(decode(tipoCuenta||bandera,21,saldo,0)) ingpAct, sum(decode(tipoCuenta||bandera,30,saldo,0)) chqGCAnt, sum(decode(tipoCuenta||bandera,31,saldo,0)) chqGCAct,sum(decode(tipoCuenta||bandera,40,saldo,0)) chqSPAnt, sum(decode(tipoCuenta||bandera,41,saldo,0)) chqSPAct from (select sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto,0 bandera  from (select saldo_calculado, unidad_ejecutora, nombre_corto, decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta from  (select saldo_calculado,fecha,decode(num_cuenta,'4042547885',6,cb.id_tipo_cta ) tipo_cuenta, decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora, decode(num_cuenta,'4042547752','TESORERIA CENTRAL','4040444184','TESORERIA CENTRAL','4024426090','TESORERIA CENTRAL','4039477765','TESORERIA CENTRAL',ue.nombre_corto ) nombre_corto from rf_tr_saldos_diarios sd inner join rf_tr_cuentas_bancarias cb on sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in ({0})) inner join sia_admin.RH_TC_UNI_EJECUTORAS ue on cb.unidad_ejecutora = ue.unidad_ejecutora where trunc(fecha) =  to_date({1},'yyyy-mm-dd'))sub) res group by tipoCuenta, unidad_ejecutora, nombre_corto union all select sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto, 1 bandera from (select saldo_calculado, unidad_ejecutora, nombre_corto,decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta from (select saldo_calculado, decode(num_cuenta,'4042547885',6,cb.id_tipo_cta ) tipo_cuenta , decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora , decode(num_cuenta,'4042547752','TESORERIA CENTRAL','4040444184','TESORERIA CENTRAL','4024426090','TESORERIA CENTRAL','4039477765','TESORERIA CENTRAL',ue.nombre_corto ) nombre_corto     from rf_tr_saldos_diarios sd    inner join rf_tr_cuentas_bancarias cb    on sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in ({0}))    inner join sia_admin.RH_TC_UNI_EJECUTORAS ue    on cb.unidad_ejecutora = ue.unidad_ejecutora     where trunc(fecha) = to_date({2},'yyyy-mm-dd'))sub) res group by tipoCuenta, unidad_ejecutora, nombre_corto order by unidad_ejecutora, tipoCuenta) group by unidad_ejecutora, nombre_corto 

comisiones.inserta = insert into rf_tr_solicitud_comisiones_ind (id_solicitud, descripcion, fecha, id_estatus) values ({0},'{1}',to_date('{2}','dd/MM/yyyy'),{3}) 
comisiones.insertaRelacion= insert into rf_tr_sol_com_indebidas (id_solicitud, id_com_ind) values ({0}, {1})  
comisiones.eliminaRelSolCom = delete RF_TR_SOL_COM_INDEBIDAS where id_solicitud = {0}
comisiones.eliminaSolicitud = delete RF_TR_SOLICITUD_COMISIONES_IND where id_solicitud = {0}  
comisiones.fechaCarga = UPDATE RF_TR_COMISIONES_INDEBIDAS a SET fecha_cargo = {0} where id_comision_ind = {1}  
comisiones.estatus = update RF_TR_SOLICITUD_COMISIONES_IND a set id_estatus = {0} where id_solicitud = {1} 
