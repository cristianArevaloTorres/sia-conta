<dml>
<submodulo id="inversiones">
  <select id="bancoCaptador">
select 
 nombre_corto 
from 
 RF_TC_BANCOS 
where 
 id_banco = :idBanco
  </select>
  <select id="existeSaldoReservaBBVA">
select 
 NOMBRE_CTA 
from 
 RF_TR_SALDOS_RESERVA sr, RF_TR_CUENTAS_BANCARIAS cb 
where 
 trunc(fecha) = to_date(':fechaCarga','dd/mm/yyyy') and 
 sr.id_cuenta = 1051 and sr.id_cuenta = cb.id_cuenta 
  </select>
   <select id="existeSaldoReservaHSBC">
select 
 distinct(sr.id_cuenta) id_cuenta 
from 
 RF_TR_SALDOS_RESERVA sr, RF_TR_CUENTAS_BANCARIAS cb 
where 
 trunc(fecha) = to_date(':fechaCarga','dd/mm/yyyy') and 
 banco = 'HBMX' and sr.id_cuenta = cb.id_cuenta 
  </select>
  <select id="existeSaldoReservaBMX">
select 
 distinct(sr.id_cuenta) id_cuenta 
from 
 RF_TR_SALDOS_RESERVA sr, RF_TR_CUENTAS_BANCARIAS cb 
where 
 trunc(fecha) = to_date(':fechaCarga','dd/mm/yyyy') and 
 banco is null and sr.id_cuenta = :idCuenta and sr.id_cuenta = cb.id_cuenta
  </select>
  <select id="existeRepHistorico">
select 
  REPORTE,FECHA,CONSECUTIVO,INFORMACION 
from 
  RF_TR_HISTORICO_REPORTES 
where 
  reporte = :idReporte and trunc(fecha) = to_date(':fechaActual','dd/mm/yyyy') 
  </select>
  <select id="obtenConsecutivo">
select nvl(LPAD(max(sigFolio+1),3,'0'),'001') conSig from ( 
select fecha, consecutivo, reporte, 
    CASE WHEN length(consecutivo)&lt;=7 THEN substr(consecutivo,5,3) 
                                     ELSE substr(consecutivo,8,3) END sigFolio 
from  
  RF_TR_HISTORICO_REPORTES ) 
where  
  reporte = :idReporte and substr(consecutivo,1,4) >= ':anio' 
  </select> 

</submodulo>

<submodulo id="transaccionalidadBBVA">
 <delete id="borrarTemporal">
    delete RF_TR_MOVIMIENTOS_CUENTA_TMP 
 </delete>
  <select id="validaCuentas">
  SELECT monto 
FROM RF_TR_MOVIMIENTOS_CUENTA_TMP movs 
inner JOIN RF_TR_CUENTAS_BANCARIAS ctas 
ON movs.num_cuenta = ctas.num_cuenta 
WHERE ctas.id_tipo_programa != :prog
  </select>
   <select id="validaUnicaFecha">
select 
  distinct(to_char(fecha_hora,'dd/MM/yyyy')) fecha 
FROM 
  RF_TR_MOVIMIENTOS_CUENTA_TMP
  </select>
  <select id="ultimaFechaBitacoraBBVA">
select 
   to_char(max(fecha_movimientos),'dd/mm/yyyy') fecha 
from 
  RF_TR_BITACORA_ACTUALIZACION 
where id_tipo_programa = :prog 
  </select>
   <select id="arrastraSaldosBBVA"> 
select id_cuenta, num_cuenta 
from (select distinct trunc(mt.fecha_hora)  fecha, id_cuenta, cb.num_cuenta 
      from RF_TR_MOVIMIENTOS_CUENTA_TMP mt 
      inner join RF_TR_CUENTAS_BANCARIAS cb on mt.num_cuenta = cb.num_cuenta) res 
where id_cuenta not in 
  (select id_cuenta
   from RF_TR_SALDOS_DIARIOS 
   where fecha = to_date(res.fecha, 'DD/MM/YY')) 
  </select>
   <insert id="insertaMovimientosBancariosBBVA">
insert into  RF_TR_MOVIMIENTOS_CUENTA 
(id_cuenta, id_movimiento, fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, 
tipo_saldo, referencia, id_tipo_trans, clave_trans_recla, id_clave_trans, id_clave_trans_recla) 
SELECT cb.id_cuenta,  id_movimiento, fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, 
tipo_saldo, referencia, id_tipo_trans, clave_trans_recla, id_clave_trans, id_clave_trans_recla 
FRom ( 
SELECT movs.num_cuenta,  
  movs.id_movimiento, movs.fecha_hora, movs.sucursal, movs.clave_trans, movs.monto, movs.numero_cheque, 
  movs.numero_folio, movs.operador, movs.descripcion, 
  movs.saldo, movs.tipo_saldo, 
  movs.referencia, 
  movs.id_tipo_trans, movs.clave_trans clave_trans_recla, null id_clave_trans, null id_clave_trans_recla 
FROM (select * from rf_tr_movimientos_cuenta_tmp order by id_movimiento) MOVS ) x, 
RF_TR_CUENTAS_BANCARIAS CB  
where x.NUM_CUENTA = CB.NUM_CUENTA  
order by x.id_movimiento 
  </insert>  
</submodulo>

<submodulo id="transaccionalidadBMX">
   <select id="repSaldoDiario">
select 
  sd.saldo_banco, sd.saldo_calculado, cb.num_cuenta, cb.nombre_cta 
from RF_TR_SALDOS_DIARIOS sd, RF_TR_CUENTAS_BANCARIAS cb 
where fecha = to_date(':fecha','dd/mm/yyyy') and cb.id_tipo_programa = :idPrograma and  sd.id_cuenta = cb.id_cuenta 
order by cb.num_cuenta 
   </select>
  <delete id="borrarTemporal">
    delete RF_TR_MOVIMIENTOS_CUENTA_TMP 
  </delete>
  <select id="validaCuentas">
  SELECT monto 
FROM RF_TR_MOVIMIENTOS_CUENTA_TMP movs 
inner JOIN RF_TR_CUENTAS_BANCARIAS ctas 
ON movs.num_cuenta = ctas.num_cuenta 
WHERE (ctas.id_tipo_programa != :prog and ctas.id_tipo_programa != 9)
  </select>
  <select id="validaUnicaFecha">
select 
  distinct(to_char(fecha_hora,'dd/MM/yyyy')) fecha 
FROM 
  RF_TR_MOVIMIENTOS_CUENTA_TMP
  </select>
  <select id="ultimaFechaBitacora">
select 
   to_char(max(fecha_movimientos),'dd/mm/yyyy') fecha 
from 
  RF_TR_BITACORA_ACTUALIZACION 
where id_tipo_programa = :prog 
  </select>
  <select id="existenDuplicados">
select 
    d.clave_trans,d.num_cuenta,d.fecha_hora,d.id_tipo_trans, d.sucursal,d.monto, d.numero_cheque, d.numero_folio, d.operador, 
    d.descripcion, d.saldo, d.tipo_saldo, d.referencia,
    referencia2, referencia3, referencia4, referencia5, saldoinicial,
    d.TOTAL,cb.nombre_cta as unidad_ejecutora 
from 
    (SELECT clave_trans,num_cuenta,fecha_hora, id_tipo_trans, sucursal,monto, numero_cheque, numero_folio, operador,descripcion, 
            saldo, tipo_saldo, referencia, 
            referencia2, referencia3, referencia4, referencia5, saldoinicial,
            COUNT(*) AS TOTAL 
     FROM RF_TR_MOVIMIENTOS_CUENTA_TMP 
     GROUP BY clave_trans,num_cuenta,fecha_hora, id_tipo_trans, sucursal, monto, numero_cheque, numero_folio, operador, 
              descripcion, saldo, tipo_saldo, referencia HAVING COUNT(*)> 1) d 
inner join RF_TR_CUENTAS_BANCARIAS cb 
on d.num_cuenta = cb.num_cuenta  
  </select>
   <delete id="borraDuplicados">
delete RF_TR_MOVIMIENTOS_CUENTA_TMP 
where id_movimiento in 
(select  a.id_movimiento  id_movimiento 
from  RF_TR_MOVIMIENTOS_CUENTA_TMP a, 
    ( SELECT min(id_movimiento) id_mov, clave_trans,num_cuenta, fecha_hora, id_tipo_trans, sucursal,monto, numero_cheque, numero_folio, operador, descripcion, 
             saldo, tipo_saldo, referencia, COUNT(*) AS TOTAL 
      FROM RF_TR_MOVIMIENTOS_CUENTA_TMP 
      GROUP BY clave_trans,num_cuenta,fecha_hora, id_tipo_trans, sucursal, monto, numero_cheque, numero_folio, operador, descripcion, 
               saldo, tipo_saldo, referencia HAVING COUNT(*)> 1) b 
where a.clave_trans = b.clave_trans and 
      a.num_cuenta = b.num_cuenta and 
      a.fecha_hora = b.fecha_hora and 
      a.id_tipo_trans = b.id_tipo_trans and  
      (a.sucursal = b.sucursal or (a.sucursal is null and b.sucursal is null)) and 
      a.monto = b.monto and 
      (a.numero_cheque = b.numero_cheque or (a.numero_cheque is null and b.numero_cheque is null)) and 
      (a.numero_folio = b.numero_folio or (a.numero_folio is null and b.numero_folio is null)) and 
      (a.operador = b.operador or  ( a.operador is null and b.operador is null )) and 
      a.descripcion = b.descripcion and 
      a.saldo = b.saldo and 
      (a.tipo_saldo = b.tipo_saldo or (a.tipo_saldo is null and b.tipo_saldo is null)) and 
      ( a.referencia = b.referencia or (a.referencia is null and b.referencia is null) ) 
      and b.id_mov != a.id_movimiento) 
  </delete>
  <insert id="insertaMovimientosBancarios">
insert into  RF_TR_MOVIMIENTOS_CUENTA 
(id_cuenta, id_movimiento, fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, 
tipo_saldo, referencia, id_tipo_trans, clave_trans_recla, id_clave_trans, id_clave_trans_recla, SALDOCALCULADO) 
SELECT cb.id_cuenta,  id_movimiento, fecha_hora, sucursal, clave_trans, monto, numero_cheque, numero_folio, operador, descripcion, saldo, 
tipo_saldo, referencia, id_tipo_trans, clave_trans_recla, id_clave_trans, id_clave_trans_recla, SALDOCALCULADO 
FRom ( 
SELECT movs.num_cuenta,  
  movs.id_movimiento, movs.fecha_hora, movs.sucursal, movs.clave_trans, movs.monto, movs.numero_cheque, 
  movs.numero_folio, movs.operador, 
  (select ct.descripcion from RF_TC_CLAVES_TRANSACCION ct
   where movs.clave_trans = ct.clave_trans) || decode(movs.descripcion,'NONREF','',' '||movs.descripcion) descripcion, 
  movs.saldo, movs.tipo_saldo, 
  decode(movs.referencia,'NONREF','',movs.referencia)||
  decode(instr('/'||movs.referencia||'/','/'||movs.referencia2||'/'),0,decode(nvl(movs.referencia2,'NONREF'),'NONREF','','/'||movs.referencia2),'')||
  decode(instr('/'||movs.referencia||'/'||movs.referencia2||'/','/'||movs.referencia3||'/'),0,decode(nvl(movs.referencia3,'NONREF'),'NONREF','','/'||movs.referencia3),'')||
  decode(instr('/'||movs.referencia||'/'||movs.referencia2||'/'||movs.referencia3||'/','/'||movs.referencia4||'/'),0,decode(nvl(movs.referencia4,'NONREF'),'NONREF','','/'||movs.referencia4),'')||
  decode(instr('/'||movs.referencia||'/'||movs.referencia2||'/'||movs.referencia3||'/'||movs.referencia5||'/','/'||movs.referencia5||'/'),0,decode(nvl(movs.referencia5,'NONREF'),'NONREF','','/'||movs.referencia5),'') referencia, 
  movs.id_tipo_trans, movs.clave_trans clave_trans_recla, null id_clave_trans, null id_clave_trans_recla,
  pvaraux.obten_saldocal(movs.num_cuenta, movs.monto, movs.saldoinicial,movs.id_movimiento,rownum-1) saldoCalculado 
FROM (select * from rf_tr_movimientos_cuenta_tmp order by id_movimiento) MOVS ) x, 
RF_TR_CUENTAS_BANCARIAS CB  
where x.NUM_CUENTA = CB.NUM_CUENTA  
order by x.id_movimiento 
  </insert>  
  <select id="calculoSaldos">
select cb.id_cuenta, sa.fecha, MC.TOTMOV, 
     CASE WHEN mc.total IS NULL THEN 0 ELSE mc.total END TOTAL, 
     sa.saldo_calculado, sa.saldo_banco 
from RF_TR_CUENTAS_BANCARIAS cb , RF_TR_SALDOS_DIARIOS sa, 
   (select mc2.id_cuenta, trunc( mc2.FECHA_HORA ) fecha, COUNT(*) TOTMOV, SUM(mc2.MONTO) total 
    from RF_TR_MOVIMIENTOS_CUENTA mc2 
    where  mc2.FECHA_hora >= to_date(':fechaCarga','dd/mm/yyyy') and 
          mc2.FECHA_hora &lt;= to_date(':fechaCarga','dd/mm/yyyy')+1 and borrar = 0 
    GROUP BY mc2.id_cuenta, trunc( mc2.fecha_HORA)) mc 
where cb.id_cuenta = mc.id_cuenta(+) and cb.id_cuenta = sa.id_cuenta(+) and to_date(':fechaAntHabil','dd/mm/yyyy') = sa.fecha(+) and 
      <!--cb.id_tipo_programa = :prog-->
      cb.id_tipo_programa in (:prog)
  </select>
  <select id="cuentasSobregiradas">
select s.saldo_calculado, s.FECHA, cb.id_tipo_programa 
from ( select sd.saldo_calculado, sd.FECHA, sd.id_cuenta 
       from RF_TR_SALDOS_DIARIOS sd  
       where sd.saldo_calculado &lt; 0 and sd.fecha = to_date(':fechaCarga','dd/mm/yyyy')) s 
inner join RF_TR_CUENTAS_BANCARIAS cb 
<!--on s.ID_CUENTA = cb.id_cuenta and cb.id_tipo_programa = :prog -->
on s.ID_CUENTA = cb.id_cuenta and cb.id_tipo_programa in (:prog)
  </select>
  <select id="registraronDiferencias">
select d.fecha_inicio, d.id_cuenta, cb.id_tipo_programa, d.diferencia_real 
from ( select fecha_inicio, id_cuenta, diferencia_real, id_estatus_dif 
       from RF_TR_DIFERENCIAS_CUENTAS 
       where id_estatus_dif = 2 and fecha_inicio = to_date(':fechaCarga','dd/mm/yyyy')) d 
<!--inner join RF_TR_CUENTAS_BANCARIAS cb on d.ID_CUENTA = cb.id_cuenta and cb.id_tipo_programa = :prog-->
inner join RF_TR_CUENTAS_BANCARIAS cb on d.ID_CUENTA = cb.id_cuenta and cb.id_tipo_programa in (:prog)
 </select>
  <select id="cuentasSinSaldo">
  select id_cuenta
from (select id_cuenta
      from RF_TR_SALDOS_DIARIOS 
      where fecha = tsr.OBTEN_ANTERIOR_DIA_HABIL(to_date(':fechaCarga', 'DD/MM/YY'))) 
where id_cuenta not in 
      (select  id_cuenta 
      from RF_TR_MOVIMIENTOS_CUENTA_TMP mt 
      inner join RF_TR_CUENTAS_BANCARIAS cb on mt.num_cuenta = cb.num_cuenta) 
<!-- 
select id_cuenta, num_cuenta 
from (select distinct trunc(mt.fecha_hora)  fecha, id_cuenta, cb.num_cuenta 
      from RF_TR_MOVIMIENTOS_CUENTA_TMP mt 
      inner join RF_TR_CUENTAS_BANCARIAS cb on mt.num_cuenta = cb.num_cuenta) res 
where id_cuenta not in 
  (select id_cuenta
   from RF_TR_SALDOS_DIARIOS 
   where fecha = tsr.OBTEN_ANTERIOR_DIA_HABIL(to_date(res.fecha, 'DD/MM/YY')))  -->   
  </select>
  <select id="arrastraSaldos"> 
select id_cuenta, num_cuenta 
from (select distinct trunc(mt.fecha_hora)  fecha, id_cuenta, cb.num_cuenta 
      from RF_TR_MOVIMIENTOS_CUENTA_TMP mt 
      inner join RF_TR_CUENTAS_BANCARIAS cb on mt.num_cuenta = cb.num_cuenta) res 
where id_cuenta not in 
  (select id_cuenta
   from RF_TR_SALDOS_DIARIOS 
<!--    where fecha = tsr.OBTEN_ANTERIOR_DIA_HABIL(to_date(res.fecha, 'DD/MM/YY')))  --> 
   where fecha = to_date(res.fecha, 'DD/MM/YY')) 
  </select>
  <select id="saldoInicialFinal"> 
select 
  cb.id_cuenta, tmp.monto, tmp.saldo, tmp.SALDOINICIAL 
from 
  RF_TR_MOVIMIENTOS_CUENTA_tmp tmp, RF_TR_CUENTAS_BANCARIAS cb 
where 
  to_char(tmp.fecha_hora,'dd/mm/yyyy') =':fecha' and 
  cb.num_cuenta = tmp.num_cuenta and (:idCuenta IS NULL OR cb.id_cuenta = :idCuenta) 
order by tmp.id_movimiento
  </select>
  <select id="diferenciaSaldo"> 
select fecha_inicio 
from RF_TR_DIFERENCIAS_CUENTAS 
where id_cuenta = :idCuenta and to_date(to_char(fecha_inicio,'dd/mm/yyyy'),'dd/mm/yyyy') = to_date(':fecha','dd/mm/yyyy')
  </select>
  <select id="seqSaldoDiario"> 
select 
  SEQ_TR_SALDOS_DIARIOS.nextval seq
from 
  dual
  </select>
  <update id="actualizaSaldos"> 
update 
 RF_TR_MOVIMIENTOS_CUENTA 
set 
 saldo = saldocalculado 
where 
 id_movimiento in (select id_movimiento from RF_TR_MOVIMIENTOS_CUENTA m, RF_TR_CUENTAS_BANCARIAS cb 
                   where fecha_hora = to_date(':fecha','dd/mm/yyyy') and m.id_cuenta = cb.id_cuenta and cb.id_tipo_programa in (:idPrograma)) 
                <!--   where fecha_hora = to_date(':fecha','dd/mm/yyyy') and m.id_cuenta = cb.id_cuenta and cb.id_tipo_programa = :idPrograma) -->
  </update>
</submodulo>

<submodulo id="GeneracionArchivos">
    <select id="tablas">
      select table_name from tabs ORDER BY table_name
    </select>
</submodulo>

<submodulo id="claveRastreo">
    <select id="obtieneIdCuenta">
select 
  id_cuenta 
from 
  RF_TR_CUENTAS_BANCARIAS 
where 
  num_cuenta = :numCuenta and id_tipo_programa = :idPrograma
   </select>
   <select id="obtieneSecuencia">
select 
  SEQ_TR_CLAVES_RASTREO.nextval 
from 
  dual
   </select>
   <select id="existeClave">
select 
  ID_CLAVE_RASTREO,ESTATUS,ID_CUENTA,FECHA,CLAVE_BANCO,TIPO_CUENTA,
  CUENTA_BENEFI,BENEFICIARIO,MONTO,LEYENDA,REFERENCIA_NUM,CLAVE_RASTREO,FOLIO_BANCO 
from 
  RF_TR_CLAVES_RASTREO 
where 
  to_char(fecha,'dd/mm/yyyy') = ':fecha' and clave_rastreo = ':claveRastreo' and referencia_num = :referencia
   </select>

</submodulo>

<submodulo id="arrastreSaldosDiarios">
  <select id="ultimaFechaSaldosBD">
select 
 to_char(max(FECHA),'dd/mm/yyyy') fecha 
from 
 RF_TR_SALDOS_DIARIOS sd, RF_TR_CUENTAS_BANCARIAS cb 
where 
      sd.id_cuenta = cb.id_cuenta  and 
      cb.id_tipo_programa = :idProg
  </select>
    <select id="ultimaFechaSaldosReservaBD">
select 
 to_char(max(FECHA),'dd/mm/yyyy') fecha 
from 
 RF_TR_SALDOS_RESERVA sd, RF_TR_CUENTAS_BANCARIAS cb 
where 
      sd.id_cuenta = cb.id_cuenta  and 
      cb.id_tipo_programa = :idProg
  </select>
</submodulo>

<submodulo id="actualizaSaldosReserva">
    <select id="obtieneIdCuenta">
select 
  id_cuenta 
from 
  RF_TR_CUENTAS_BANCARIAS 
where 
  num_cuenta = :numCuenta 
</select> 
<select id="ultimaFechaCargadaSR"> 
select 
 to_char(max(FECHA),'dd/mm/yyyy') fecha 
from 
 RF_TR_SALDOS_RESERVA 
where 
 banco = 'HBMX'
</select>
</submodulo>


  <submodulo id="movimientos">
    <select id="existenciaMovimientos">
select distinct fecha_movimientos, id_tipo_programa 
from rf_tr_bitacora_actualizacion 
where (:0) and fecha_movimientos = to_date(:1,'dd/mm/yyyy') 
    </select>
    <select id="diaAnteriorHabilR">
select to_char(tsr.obten_anterior_dia_habil(to_date(:0,'dd/mm/yyyy')),'dd/mm/yyyy') fecha_inicial 
from dual 
    </select>
    <select id="diaAnteriorHabilP">
select to_char(tsr.obten_anterior_dia_habil(to_date(:0,'dd/mm/yyyy')),'yyyy-mm-dd') fecha_inicial 
from dual 
    </select>
    <select id="ultimaFechaCargada">
select 
  max(trunc(fecha_movimientos)) fecha 
from 
  RF_TR_BITACORA_ACTUALIZACION 
where 
  id_tipo_programa = :idPrograma or id_tipo_programa = decode(:idPrograma,9,7,:idPrograma)
    </select>
    <select id="cuentasAdicionales">
select 
  id_cuenta 
from 
  RF_TR_USUARIOS_CUENTAS 
where 
  login = ':login'
    </select>
  </submodulo>
  <submodulo id="adminProgramas">
    <delete id="evaluacionEliminaCuenta">
delete 
RF_TR_ALTAS_CUENTAS 
where id_alta_cta = :idAltaCta 
    </delete>
    <select id="existePersonalSolicitud">
select num_empleado 
from RF_TR_ALTAS_PERSONAL_AUT 
where id_solicitud = :idSolicitud and num_empleado = :numEmpleado 
    </select>
  </submodulo>
   
<!-- en el select poner el nombre del pojo q va a ser visualizado -->   
  
  <submodulo id="catalogos">
   <select id="RfTcTipoPrograma">
select 
  ID_TIPO_PROGRAMA,DESCRIPCION,ID_ESTATUS_CTA_PROG,DESC_CORTA 
from 
 RF_TC_TIPO_PROGRAMA 
   </select>
   <select id="RfTcOpcionesInversion">
select 
  ID_INVERSION,ID_TIPO_INSTR,NOMBRE,ID_BANCO,NUMERO_CONTRATO,NUMERO_CUENTA,VIGENCIA_DESDE,VIGENCIA_HASTA,OBSERVACIONES 
from 
  RF_TC_OPCIONES_INVERSION 
   </select>
   <select id="RfTcTipoInstrumento">
select 
  ID_TIPO_INSTR,DESCRIPCION,TIPO_INSTRUMENTO 
from 
  RF_TC_TIPO_INSTRUMENTO 
   </select>
   <select id="RfTcBancosInversion">
select 
  ID_BANCO,CLAVE_BANCO,NOMBRE,NACIONAL,NOMBRE_CORTO,MOSTRAR 
from 
  RF_TC_BANCOS_INVERSION 
   </select>
   <select id="RfTcDiasFestivos">
select 
  ID_FECHA,FECHA 
from 
  RF_TC_DIAS_FESTIVOS 
   </select>   
   <select id="RfTcTiposInversion">
select 
 ID_TIPO_INVERSION,DESCRIPCION,TIPO_INVERSION 
from 
RF_TC_TIPOS_INVERSION 
   </select>   
   <select id="RfTcTipoValores">
select 
ID_TIPO_VALORES,DESCRIPCION,ESTATUS 
from 
RF_TC_TIPO_VALORES
   </select>      
   <select id="RfTcTipoOperacion">
select 
ID_TIPO_OPERACION,DESCRIPCION,AFECTACION, AFECTA_SALDO_REAL 
from 
RF_TC_TIPO_OPERACION
   </select>      
   <select id="RfTcTipoMovInversion">
select 
ID_TIPO_MOVIMIENTO,DESCRIPCION,TABLA 
from 
RF_TC_TIPO_MOV_INVERSION
   </select>   
   <select id="RfTcCuentasSpei">
select 
 ID_CUENTA_SPEI,NUM_CUENTA,ID_BANCO 
from 
 RF_TC_CUENTAS_SPEI
  </select>
  <select id="RfTcCuentasTransferencia">
select 
  ID_CUENTA_TRANS,NUM_CUENTA,ID_BANCO 
from 
  RF_TC_CUENTAS_TRANSFERENCIA
  </select>
  <select id="RfTcClaveReportes">
select 
 REPORTE,DESCRIPCION 
from 
 RF_TC_CLAVE_REPORTES
</select>
  </submodulo>
  
  <submodulo id="inversionesTes"> 
  <select id="RfTrCuentasInversion">
select 
  ID_CUENTA_INVERSION,bi.ID_BANCO,ESTATUS,CONTRATO_CUENTA,to_char(FECHA_APERTURA,'dd/mm/yyyy') FECHA_APERTURA, bi.nombre_corto 
from 
  RF_TR_CUENTAS_INVERSION cb, RF_TC_BANCOS_INVERSION bi
where 
  cb.id_banco = bi.id_banco :idBanco 
   </select> 
  </submodulo>

  <submodulo id="registros">
    <select id="RfTrCuentasBancarias">
select 
  ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION,FECHA_FIN_OPERACION 
from 
  RF_TR_CUENTAS_BANCARIAS
    </select>
    <select id="RfTrVentaAcciones">
select 
  ID_VENTA_ACCION,ID_COMPRA,VALOR_ACCION,FECHA_VENTA,SALDO_ANTERIOR,SALDO_FINAL 
from 
  RF_TR_VENTA_ACCIONES
    </select>
    <select id="RfTrComprasReinversiones">
select 
  ID_COMPRA,ID_INVERSION,VALOR_INICIAL_ACCION,NUMERO_ACCIONES,INVERSION,PLAZO,FECHA_COMPRA,FECHA_VENCE,TASA,RENDIMIENTO,VALOR_FINAL_ACCION,TIPO_OPERACION,ESTATUS_BAJA,USER_BAJA 
from 
  RF_TR_COMPRAS_REINVERSIONES
    </select>
    <select id="RfTrTasasRendimiento">
select 
  FECHA,ID_BANCO,ID_RENDIMIENTO 
from 
  RF_TR_TASAS_RENDIMIENTO 
    </select>
    <select id="RfTrTasasRendimientoBancosCotizacion">
select x.id_banco, b.nombre_corto institucion_financiera, max(x.dia_1) dia_1, max(x.dias_7) dias_7, max(x.dias_14) dias_14,
max(x.dias_21) dias_21, max(x.dias_28) dias_28 
from (select r.id_banco, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),1,rd.tasa,0) dia_1,
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),7,rd.tasa,0) dias_7,
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),14,rd.tasa,0) dias_14,
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),21,rd.tasa,0) dias_21,
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),28,rd.tasa,0) dias_28
      from rf_tr_tasas_rend_detalle rd, rf_tr_tasas_rendimiento r
      where r.id_rendimiento = rd.id_rendimiento 
      and to_char(r.fecha,'yyyy-mm-dd') between ':dia' and ':dia'
     ) x, rf_tc_bancos_inversion b
where b.id_banco = x.id_banco and b.id_banco != 498  ----in (6,7,35)
group by x.id_banco, b.nombre_corto
order by x.id_banco
    </select>
    <select id="RfTrCotizacionInvTmp">
select 
  ID_BANCO,FONDOINV1,FONDOINV3,FONDOINV2 
from 
  RF_TR_COTIZACION_INV_TMP
    </select>
    <select id="RfTrTasasRendDetalle">
select 
  PLAZO,TASA,ID_RENDIMIENTO 
from 
  RF_TR_TASAS_REND_DETALLE
   </select>
   <select id="RfTrRendimientosInversion">
select 
  ID_COMPRA_INVERSION,VALOR_ACCION_VENTA,FECHA,IMPORTE 
from 
  RF_TR_RENDIMIENTOS_INVERSION 
   </select>
   <select id="RfTrOperacionesInversion">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL
from 
  RF_TR_OPERACIONES_INVERSION 
   </select> 
   <select id="RfTrHistoricoInversiones">
select 
  ID_HISTORICO,ID_CUENTA_INVERSION,ID_TIPO_MOVIMIENTO,FECHA_MOVIMIENTO,FECHA_REGISTRO,ID_MOVIMIENTO,SALDO 
from 
  RF_TR_HISTORICO_INVERSIONES 
   </select> 
   <select id="RfTrCuentasInversion">
select 
  ID_CUENTA_INVERSION,ID_BANCO,ESTATUS,CONTRATO_CUENTA,FECHA_APERTURA 
from 
  RF_TR_CUENTAS_INVERSION 
   </select> 
   <select id="RfTrComprasInversion">
select 
  ID_COMPRA_INVERSION,ID_CUENTA_INVERSION,ID_TIPO_INVERSION,FECHA,PLAZO,TASA,VENCIMIENTO,NUM_OPERACION,ESTATUS 
from 
  RF_TR_COMPRAS_INVERSION 
   </select>
   <select id="RfTrDetalleCompra">
select 
  ID_COMPRA_INVERSION,ID_DETALLE_COMPRA,ID_OPERACION,ID_TIPO_VALORES,TITULOS_ACCIONES,VALOR,IMPORTE,VALOR_ACCION_VENTA,RENDIMIENTO,ID_OPERACION_REND,ID_OPERACION_RECUPERA  
from 
  RF_TR_DETALLE_COMPRA
    
   </select>
   <select id="RfTrEfectivoInversion">
select 
  ID_EFECTIVO_INVERSION,ID_OPERACION,ID_CUENTA_INVERSION,IMPORTE,FECHA,VINCIMIENTO,RENDIMIENTO,ID_OPERACION_RECUPERA,ID_OPERACION_DEPOSITO 
from 
  RF_TR_EFECTIVO_INVERSION
   </select>
   
   <select id="RfTrCierresInversion">
select 
  ANIO_MES,FECHA_CIERRE 
from 
  RF_TR_CIERRES_INVERSION
   </select>
   <select id="RfTrTasasRendExisten">
select 
 rownum id, plazo 
from (
   select 
    distinct PLAZO 
   from 
    RF_TR_TASAS_REND_DETALLE)
</select>
   <select id="RfTrHistoricoReportes">
select 
 cr.DESCRIPCION, hr.FECHA, informacion, consecutivo, hr.reporte 
from 
 RF_TC_CLAVE_REPORTES cr, RF_TR_HISTORICO_REPORTES hr 
where 
 cr.REPORTE = hr.REPORTE 
order by fecha desc, consecutivo desc
</select>
  </submodulo>
  
  
  
 
<submodulo id="vistas">
<select id="RfTrMovimientosTmpCvsTran">
select clave, descripcion , rownum llave from ( 
select  distinct clave_trans clave, descripcion from RF_TR_MOVIMIENTOS_CUENTA_TMP  
where clave_trans not in (select distinct clave_trans from RF_TC_CLAVES_TRANSACCION)) 
</select>
<select id="RfTrMovimientosTmpCuentas">
select distinct num_cuenta
from RF_TR_MOVIMIENTOS_CUENTA_TMP 
where num_cuenta
not in (
select num_cuenta from RF_TR_CUENTAS_BANCARIAS
where id_estatus_cta_prog = 1)
</select>



  <select id="RfTrOperacionesInversion-OrdenadoPrimerMovimiento">
select 
  o.id_operacion, o.id_cuenta_inversion, o.id_tipo_operacion, o.fecha, o.importe, o.estatus, o.saldo_anterior, 
  o.saldo_actual, o.fecha_registro, o.saldo_real
from  
  rf_tr_operaciones_inversion o, rf_tc_tipo_operacion t
where 
  t.id_tipo_operacion = o.id_tipo_operacion and id_cuenta_inversion = :idCuenta
order by 
  o.fecha,decode(t.AFECTACION,'C',1,-1) desc,decode(t.id_tipo_operacion,7,4,8,6,t.id_tipo_operacion), o.id_operacion
  </select>
  <select id="RfTrOperacionesInversion-SaldoAnteriorMismaFechaOAnterior">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,o.ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion o, rf_tc_tipo_operacion t 
where 
  o.ID_TIPO_OPERACION = t.ID_TIPO_OPERACION and
  o.fecha = (
     select max(o.fecha) 
     from rf_tr_operaciones_inversion o
     where o.id_cuenta_inversion = :idCuentaInversion and trunc(o.fecha) &lt;= to_date(':fecha','dd/mm/yyyy')
  ) and o.id_cuenta_inversion = :idCuentaInversion
order by 
  o.fecha desc,decode(t.AFECTACION,'C',1,-1),decode(t.id_tipo_operacion,7,4,8,6,t.id_tipo_operacion)  desc, o.id_operacion  desc
	</select>
  <select id="RfTrOperacionesInversion-SaldoDeFechaAnterior">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,o.ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion o, rf_tc_tipo_operacion t 
where 
  o.ID_TIPO_OPERACION = t.ID_TIPO_OPERACION and
  o.fecha = (
     select max(o.fecha) 
     from rf_tr_operaciones_inversion o
     where o.id_cuenta_inversion = :idCuentaInversion and trunc(o.fecha) &lt; to_date(':fecha','dd/mm/yyyy')
  ) and o.id_cuenta_inversion = :idCuentaInversion
order by 
  o.fecha desc,decode(t.AFECTACION,'C',1,-1),decode(t.id_tipo_operacion,7,4,8,6,t.id_tipo_operacion)  desc, o.id_operacion  desc
	</select>

  <select id="RfTrOperacionesInversion-OrdenadoMovimientosSiguientes">
select 
  o.id_operacion, o.id_cuenta_inversion, o.id_tipo_operacion, o.fecha, o.importe, o.estatus, o.saldo_anterior, 
  o.saldo_actual, o.fecha_registro, o.saldo_real
from  
  rf_tr_operaciones_inversion o, rf_tc_tipo_operacion t
where 
  t.id_tipo_operacion = o.id_tipo_operacion and id_cuenta_inversion = :idCuenta and (to_char(fecha,'yyyymmdd') > :fecha)
order by 
  o.fecha,decode(t.AFECTACION,'C',1,-1) desc,decode(t.id_tipo_operacion,7,4,8,6,t.id_tipo_operacion), o.id_operacion
  </select>
<!--  <select id="RfTrOperacionesInversion-SaldoAnteriorMismaFechaOAnterior">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion ooo 
where 
  ooo.id_operacion = (
  select max(oo.id_operacion)  from rf_tr_operaciones_inversion oo 
  where oo.fecha = (
	   select max(o.fecha) 
	   from rf_tr_operaciones_inversion o
	   where o.id_cuenta_inversion = :idCuentaInversion and trunc(o.fecha) &lt;= to_date(':fecha','dd/mm/yyyy')
	   ) and oo.id_cuenta_inversion = :idCuentaInversion and trunc(oo.fecha) &lt;= to_date(':fecha','dd/mm/yyyy')
   )
	</select>
  <select id="RfTrOperacionesInversion-SaldoAnterior">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion ooo 
where 
  ooo.id_operacion = (
  select max(oo.id_operacion)  from rf_tr_operaciones_inversion oo 
  where oo.fecha = (
	   select max(o.fecha) 
	   from rf_tr_operaciones_inversion o
	   where o.id_cuenta_inversion = :idCuentaInversion and trunc(o.fecha) &lt;= to_date(':fecha','dd/mm/yyyy')
     and id_operacion &lt; :idOperacion
	   )  
   )
	</select>
  <select id="RfTrOperacionesInversion-SaldoDeFechaAnterior">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion ooo 
where 
  ooo.id_operacion = (
  select max(oo.id_operacion)  from rf_tr_operaciones_inversion oo 
  where oo.fecha = (
	   select max(o.fecha) 
	   from rf_tr_operaciones_inversion o
	   where o.id_cuenta_inversion = :idCuentaInversion and trunc(o.fecha) &lt; to_date(':fecha','dd/mm/yyyy') and saldo_actual is not null
	   )  
     and saldo_actual is not null and oo.id_cuenta_inversion = :idCuentaInversion
   )
	</select>
  <select id="RfTrOperacionesInversion-UltimoSaldo">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion ooo 
where 
  ooo.id_operacion = (
  select max(oo.id_operacion)  from rf_tr_operaciones_inversion oo 
  where oo.fecha = (
	   select max(o.fecha) 
	   from rf_tr_operaciones_inversion o
	   where o.id_cuenta_inversion = :idCuentaInversion
	   )  
     and oo.id_cuenta_inversion = :idCuentaInversion
   )
	</select>
  <select id="RfTrOperacionesInversion-SaldoAnteriorALaCompra">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
  rf_tr_operaciones_inversion ooo 
where 
  ooo.id_operacion = (
  select max(oo.id_operacion)  from rf_tr_operaciones_inversion oo 
  where oo.fecha = (
	   select max(o.fecha) 
	   from rf_tr_operaciones_inversion o
	   where o.id_cuenta_inversion = :idCuentaInversion
           and trunc(fecha) &lt;= to_date(':fecha','dd/mm/yyyy') and ((id_operacion &lt; :idOperacion) or (:idOperacion &lt; 0))
	   )  
     and oo.id_cuenta_inversion = :idCuentaInversion
     and trunc(fecha) &lt;= to_date(':fecha','dd/mm/yyyy') and ((id_operacion &lt; :idOperacion) or (:idOperacion &lt; 0))
   )
  </select>
-->
	<select id="RfTrComprasInversion-Vigentes">	
select 
  ID_COMPRA_INVERSION,ID_CUENTA_INVERSION,ID_TIPO_INVERSION,FECHA,PLAZO,TASA,VENCIMIENTO,NUM_OPERACION,ESTATUS, to_char(VENCIMIENTO,'yyyyMM')
from 
  RF_TR_COMPRAS_INVERSION 
where to_char(VENCIMIENTO,'yyyyMM') > (
  select max(ANIO_MES) from RF_TR_CIERRES_INVERSION
) or (
  select max(ANIO_MES) from RF_TR_CIERRES_INVERSION
) is null
	</select>
  <select id="RfTrComprasInversion-UltimasComprasDeUltimaFechaConMenorPlazo">
select 
  ID_COMPRA_INVERSION,ID_CUENTA_INVERSION,ID_TIPO_INVERSION,IMPORTE_GLOBAL,FECHA,PLAZO,TASA,VENCIMIENTO,NUM_OPERACION,ESTATUS 
from  
  RF_TR_COMPRAS_INVERSION
where
  PLAZO = ( select MIN(plazo)
    from RF_TR_COMPRAS_INVERSION
    where FECHA = (select max(fecha) 
      from RF_TR_COMPRAS_INVERSION 
      where ID_CUENTA_INVERSION = :idCuentaInversion
    ) AND ID_CUENTA_INVERSION = :idCuentaInversion
  AND FECHA = (select max(fecha) 
      from RF_TR_COMPRAS_INVERSION 
      where ID_CUENTA_INVERSION = :idCuentaInversion
    )
  )
  </select>
  <select id="RfTrComprasInversion-UltimasComprasConVencimientoMasCercanoAFechaActual">
select 
  ID_COMPRA_INVERSION,ID_CUENTA_INVERSION,ID_TIPO_INVERSION,IMPORTE_GLOBAL,FECHA,PLAZO,TASA,VENCIMIENTO,NUM_OPERACION,ESTATUS 
from 
  RF_TR_COMPRAS_INVERSION
where 
  VENCIMIENTO = (select max(VENCIMIENTO) from RF_TR_COMPRAS_INVERSION where trunc(VENCIMIENTO) &lt;= to_date(':fechaActual','dd/mm/yyyy') AND ID_CUENTA_INVERSION = :idCuentaInversion)
  AND ID_CUENTA_INVERSION = :idCuentaInversion
  </select>
	<select id="RfTrCierresInversion-Ultimo">
select 
  ANIO_MES,FECHA_CIERRE 
from 
  RF_TR_CIERRES_INVERSION
where 
  ANIO_MES = (SELECT MAX(ANIO_MES) FROM RF_TR_CIERRES_INVERSION)
   </select>
   <select id="RfTrOperacionesInversion-UltimosRendimientosEfectivo">
select 
  ID_OPERACION,ID_CUENTA_INVERSION,ID_TIPO_OPERACION,FECHA,IMPORTE,ESTATUS,SALDO_ANTERIOR,SALDO_ACTUAL,FECHA_REGISTRO,SALDO_REAL 
from 
 RF_TR_OPERACIONES_INVERSION
where 
  fecha = (select max(FECHA) FROM RF_TR_OPERACIONES_INVERSION WHERE ID_TIPO_OPERACION = 8 and ID_CUENTA_INVERSION = :idCuentaInversion)
  AND ID_TIPO_OPERACION = 8 and ID_CUENTA_INVERSION = :idCuentaInversion
  ORDER BY ID_OPERACION
   </select> 
   <select id="RfTrEfectivoInversion-RendimientosPosterioresAFechaVencimiento">
select 
  ID_EFECTIVO_INVERSION,ID_OPERACION,ID_CUENTA_INVERSION,IMPORTE,FECHA,VINCIMIENTO,RENDIMIENTO,ID_OPERACION_RECUPERA,ID_OPERACION_DEPOSITO,ID_OPERACION_RECUPERA,ID_OPERACION_DEPOSITO 
from 
  RF_TR_EFECTIVO_INVERSION
where 
  ID_CUENTA_INVERSION = :idCuentaInversion AND trunc(VINCIMIENTO) >= to_date(':fechaVencimiento','dd/mm/yyyy')
  AND (ID_EFECTIVO_INVERSION &lt;> :idEfectivoInversion  or :idEfectivoInversion &lt; 0)
   </select>
  <select id="UnCampo-ObtenDiaSiguienteHabil">
select 
  tsr.OBTEN_SIGUIENTE_DIA_HABIL(to_date(':fecha','dd/mm/yyyy')+:plazo-1) campo1
from 
  dual
   </select>
   <select id="RfTrOperacionesInversionDetallado">
--armando
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
      o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, null plazo, null orden, tio.descripcion, null tipoinv, null emision, 
      null titulos, e.rendimiento importe, null tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, rf_tr_efectivo_inversion e, rf_tc_tipo_operacion tio
where o.id_operacion = e.id_operacion and o.id_tipo_operacion = tio.id_tipo_operacion
union
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
      o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, null plazo, null orden, tio.descripcion, null tipoinv, null emision, 
      null titulos, o.importe, null tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, rf_tr_efectivo_inversion depo, rf_tc_tipo_operacion tio
where o.id_operacion = depo.id_operacion_deposito and o.id_tipo_operacion = tio.id_tipo_operacion
union
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
      o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, null plazo, null orden, tio.descripcion, null tipoinv, null emision, 
      null titulos, o.importe, null tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, rf_tr_efectivo_inversion depo, rf_tc_tipo_operacion tio
where o.id_operacion = depo.id_operacion_recupera and o.id_tipo_operacion = tio.id_tipo_operacion
union
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
       o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, c.plazo plazo, c.num_operacion orden, tio.descripcion, ti.descripcion tipoinv, v.descripcion emision, 
       d.titulos_acciones titulos, o.importe, c.tasa tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, rf_tr_detalle_compra d, rf_tr_compras_inversion c, 
     rf_tc_tipo_operacion tio, rf_tc_tipo_valores v, rf_tc_tipos_inversion ti
where o.id_operacion = d.id_operacion and o.id_tipo_operacion = tio.id_tipo_operacion and
      d.id_compra_inversion = c.id_compra_inversion and v.id_tipo_valores = d.id_tipo_valores
      and ti.id_tipo_inversion = c.id_tipo_inversion
union
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
       o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, c.plazo plazo, c.num_operacion orden, tio.descripcion, ti.descripcion tipoinv, v.descripcion emision, 
       d.titulos_acciones titulos, o.importe, c.tasa tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, rf_tr_detalle_compra d, rf_tr_compras_inversion c, 
     rf_tc_tipo_operacion tio, rf_tc_tipo_valores v, rf_tc_tipos_inversion ti
where o.id_operacion = d.id_operacion_recupera and o.id_tipo_operacion = tio.id_tipo_operacion and
      d.id_compra_inversion = c.id_compra_inversion and v.id_tipo_valores = d.id_tipo_valores
       and ti.id_tipo_inversion = c.id_tipo_inversion
union
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
       o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, c.plazo plazo, c.num_operacion orden, tio.descripcion, ti.descripcion tipoinv, v.descripcion emision, 
       d.titulos_acciones titulos, d.rendimiento, c.tasa tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, rf_tr_detalle_compra d, rf_tr_compras_inversion c, 
     rf_tc_tipo_operacion tio, rf_tc_tipo_valores v, rf_tc_tipos_inversion ti
where o.id_operacion = d.id_operacion_rend and o.id_tipo_operacion = tio.id_tipo_operacion and
      d.id_compra_inversion = c.id_compra_inversion and v.id_tipo_valores = d.id_tipo_valores 
       and ti.id_tipo_inversion = c.id_tipo_inversion
union
select decode(o.id_tipo_operacion,7,4,8,6,o.id_tipo_operacion) tioper,decode(TIO.AFECTACION,'C',1,-1) tiafec, TIO.AFECTA_SALDO_REAL asr,
       o.id_cuenta_inversion,o.id_tipo_operacion,o.id_operacion, o.fecha, null plazo, null orden, tio.descripcion, null tipoinv, null emision, 
       null titulos, o.importe, null tasa, o.saldo_anterior, o.saldo_actual, o.saldo_real
from rf_tr_operaciones_inversion o, 
     rf_tc_tipo_operacion tio
where o.id_tipo_operacion = tio.id_tipo_operacion  and o.id_tipo_operacion in (1,2)
-- order by fecha desc  , id_operacion desc
--fecha, tipoafecta,tipooper2,id_oper
order by 7,2 desc, 1,6
  </select>
  <select id="RfTrTasasRendimientoBancos">
select 
  distinct plazo, id_banco 
from 
  RF_TR_TASAS_REND_DETALLE trd
  inner join RF_TR_TASAS_RENDIMIENTO tr on trd.id_rendimiento = tr.id_rendimiento 
order by id_banco
</select>

 <select id="RfTcCuentasSpeiBancos">
select 
  ID_CUENTA_SPEI, num_cuenta, nombre_corto, beneficiario  
from 
  RF_TC_CUENTAS_SPEI ct, RF_TC_BANCOS_INVERSION b 
where 
  ct.id_banco = b.id_banco
</select>


<select id="RfTcCuentasTransferenciaBancos">
select 
  id_cuenta_trans, num_cuenta, nombre_corto, beneficiario 
from 
  RF_TC_CUENTAS_TRANSFERENCIA ct, RF_TC_BANCOS_INVERSION b 
where 
  ct.id_banco = b.id_banco
</select>

 <select id="RfTcCuentasRap">
select 
  cr.ID_CUENTA_RAP,NUM_CUENTA,bi.ID_BANCO,BENEFICIARIO, bi.NOMBRE_CORTO 
from 
  RF_TC_CUENTAS_RAP cr, RF_TC_BANCOS_INVERSION bi
where 
  cr.ID_BANCO = bi.ID_BANCO
</select>

  </submodulo>
  
<!-- transferencia de fondos -->  
<submodulo id="transferenciaFondos">
 <select id="cuentaTransferencia">
select
  id_cuenta , num_cuenta ,  b.nombre_corto , nombre_cta 
from 
  RF_TR_CUENTAS_BANCARIAS cb, rf_tc_bancos b
where 
  cb.id_banco = b.ID_BANCO and id_tipo_programa = 7
  :idCuenta
 </select>
<select id="afectacion"> 
select idCuenta, cuenta, banco, beneficiario, tipo from (  
select  idCuenta, cuenta, banco, beneficiario, tipo from ( 
select  id_cuenta idCuenta, cuenta_spei cuenta, b.nombre_corto banco, nombre_cta beneficiario, 2 tipo 
from   RF_TR_CUENTAS_BANCARIAS cb, rf_tc_bancos b 
where  cb.id_banco = b.ID_BANCO and id_tipo_programa = 7 
union 
select  id_cuenta idCuenta, cuenta_spei cuenta, b.nombre_corto banco, nombre_cta beneficiario, 2 tipo  
from   RF_TR_CUENTAS_BANCARIAS cb, rf_tc_bancos b 
where  cb.id_banco = b.ID_BANCO and id_cuenta in (select id_cuenta from rf_tr_cuentas_transferencia) 
union 
select ID_CUENTA_TRANS idCuenta, cuenta_spei cuenta,NOMBRE_CORTO banco,BENEFICIARIO, 2 tipo 
from RF_TC_CUENTAS_TRANSFERENCIA ct, RF_TC_BANCOS_INVERSION bi 
where ct.ID_BANCO = bi.ID_BANCO and num_cuenta not in (select num_cuenta from RF_TR_CUENTAS_BANCARIAS) 
) 
union  
select  idCuenta, cuenta, banco, beneficiario, tipo from ( 
select  id_cuenta idCuenta, num_cuenta cuenta, b.nombre_corto banco, nombre_cta beneficiario, 1 tipo 
from   RF_TR_CUENTAS_BANCARIAS cb, rf_tc_bancos b 
where  cb.id_banco = b.ID_BANCO and id_tipo_programa = 7 
union 
select ID_CUENTA_TRANS idCuenta, NUM_CUENTA cuenta,NOMBRE_CORTO banco,BENEFICIARIO, 1 tipo 
from RF_TC_CUENTAS_TRANSFERENCIA ct, RF_TC_BANCOS_INVERSION bi 
where ct.ID_BANCO = bi.ID_BANCO and num_cuenta not in (select num_cuenta from RF_TR_CUENTAS_BANCARIAS) 
union 
select  id_cuenta idCuenta, num_cuenta cuenta, b.nombre_corto banco, nombre_cta beneficiario, 1 tipo  
from   RF_TR_CUENTAS_BANCARIAS cb, rf_tc_bancos b 
where  cb.id_banco = b.ID_BANCO and id_cuenta in (select id_cuenta from rf_tr_cuentas_transferencia) 
)
union 
select ID_CUENTA_RAP idCuenta,NUM_CUENTA cuenta ,NOMBRE_CORTO banco, BENEFICIARIO, 3 tipo 
from RF_TC_CUENTAS_RAP cr, RF_TC_BANCOS_INVERSION bi 
where cr.ID_BANCO = bi.ID_BANCO 
) 
where 1= 1 :tipo :idCuenta 
</select>
<select id="destinatariosTF">
select 
 ID_DESTINATARIO,PUESTO,ESTATUS 
from 
 RF_TC_DESTINATARIOS 
where 
 estatus = 1 :idDestino 
</select>
<select id="obtenDatosCuentas">
select 
 ID_CUENTA,NUM_CUENTA,bc.nombre_corto,NOMBRE_CTA 
from 
 RF_TR_CUENTAS_BANCARIAS cb, rf_tc_bancos bc 
where 
 cb.id_banco = bc.id_banco :idCuenta
</select>
<select id="listadoReportes">
select 
  hr.reporte, to_char(fecha,'dd/mm/yyyy') fecha, consecutivo, informacion, descripcion  
from 
  RF_TR_HISTORICO_REPORTES hr, RF_TC_CLAVE_REPORTES cr 
where 
  hr.reporte = cr.reporte and (length(consecutivo) = 10  or length(consecutivo) = 11) and hr.reporte = 2 
  and ( substr(consecutivo,5,3) in (:folios) or substr(consecutivo,5,4) in (:folios))
ORDER BY to_date(fecha,'dd/mm/yyyy') DESC, consecutivo desc
</select>
<select id="folioTransferencia">
select nvl(LPAD(max(sigFolio+1),3,'0'),'001') conSig from ( 
select fecha, consecutivo, reporte, 
    CASE WHEN length(consecutivo)&lt;=7 THEN substr(consecutivo,5,3) 
                                        ELSE substr(consecutivo,8,3) END sigFolio 
from  
  RF_TR_HISTORICO_REPORTES ) 
where  
  reporte = 2 and substr(consecutivo,5,3) = ':tipoFolio' and substr(consecutivo,1,4) >= ':anio' 
</select>
<select id="folioTransferenciaNR">
select nvl(LPAD(max(sigFolio+1),3,'0'),'001') conSig from ( 
select fecha, consecutivo, reporte, 
    CASE WHEN length(consecutivo)&lt;=8 THEN substr(consecutivo,5,4) 
                                        ELSE substr(consecutivo,9,3) END sigFolio 
from  
  RF_TR_HISTORICO_REPORTES ) 
where  
  reporte = 2 and substr(consecutivo,5,4) = ':tipoFolio' and substr(consecutivo,1,4) >= ':anio' 
</select>
<select id="RhTrFirmasDocsTesoreriaTransferencia">
select NOMBRE,TIPO_FIRMA, PUESTO_ESP, DOCUMENTO, NUM_EMPLEADO, rownum id from (
SELECT distinct nombre,tipo_firma, puesto_esp, documento, num_empleado from (
           select distinct(e.nombres||' '||e.apellido_pat||' '||e.apellido_mat) as nombre,fd.num_empleado,fd.tipo_firma,fd.documento, fd.activo, fa.puesto_esp
           from rh_tr_firmas_docs fd, rh_tr_empleados e, RH_TC_FIRMAS_AUTORIZADAS fa
           where (
           fd.unidad_ejecutora='109'
          and fd.ambito=1 
          and fd.entidad=1
          and fd.pais=147 
          and fd.num_empleado=e.num_empleado
          and fd.num_empleado=fa.num_empleado
          and fd.activo=1
          and e.plaza is not null
          )
       union all    
       select distinct(e.nombres||' '||e.apellido_pat||' '||e.apellido_mat) as nombre,f.num_empleado,f.tipo_firma, f.documento, f.activo, fa.puesto_esp
       from rh_tr_empleados e, rh_tr_firmas_docs f, RH_TC_FIRMAS_AUTORIZADAS fa
       where (
       f.unidad_ejecutora='109'
       and f.ambito=1 
       and f.entidad=1
       and f.pais=147 
       and f.num_empleado=e.num_empleado
       and f.num_empleado=fa.num_empleado
       and f.activo=1
       and e.plaza is not null
       ))) res
where documento=':docto' AND tipo_firma =':tipo' :numEmpleado
</select>
</submodulo>
  
<!-- listado de query para reportes de movimientos -->  
<submodulo id="reportesPDF">
  <select id="ingresosVentaAdministrativos">
select  cb.id_cuenta, cb.num_cuenta, cb.nombre_cta, fecha_hora, 
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) descripcion,
       nvl(decode(id_tipo_trans,'D',monto,0),0) cargo, nvl(decode(id_tipo_trans,'C',monto,0),0) abono, 
       decode(mov.referencia,null,' ',mov.referencia) referencia, r.id_cuenta, r.referencia 
from RF_TR_MOVIMIENTOS_CUENTA mov, RF_TR_CUENTAS_BANCARIAS cb, RF_TR_REFENCIAS_IXV r 
where mov.id_cuenta = cb.id_cuenta and  mov.id_cuenta = r.id_cuenta and  substr(mov.referencia,1,10) = r.referencia and 
      (mov.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  mov.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1) and 
      mov.id_cuenta in (:idCuentas)
</select>
<select id="referenciasInvalidas">
select cb.id_cuenta, cb.num_cuenta, cb.nombre_cta, fecha_hora, mov.id_cuenta,
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) descripcion,
       nvl(decode(id_tipo_trans,'C',monto,0),0) abono, 
       decode(mov.referencia,null,' ',mov.referencia) referencia 
from RF_TR_MOVIMIENTOS_CUENTA mov, RF_TR_CUENTAS_BANCARIAS cb 
where mov.id_cuenta = cb.id_cuenta and mov.id_tipo_trans = 'C' and  
      (mov.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  mov.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1) and 
      mov.id_cuenta in (:idCuentas) and substr(mov.referencia,1,10) not in (select referencia from RF_TR_REFENCIAS_IXV)
</select>
<select id="ChqsSalvoBuenCobro">
select 
 tsr.obten_siguiente_dia_habil(tm.descripcion, trunc(tm.fecha_hora))as dias, 
 cb.num_cuenta, 
 decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta, 
 tm.descripcion, 
 to_char(tm.fecha_hora,'dd/MM/yyyy') fecha_hora,
 tm.monto 
from 
 (select id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
     rf_tr_movimientos_cuenta 
  where 
   (id_cuenta in (:idCuentas)) and
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
    id_clave_trans_recla  = 2 
  order by 
    id_cuenta, fecha_hora) tm 
inner join 
 rf_tr_cuentas_bancarias cb 
on 
 tm.id_cuenta = cb.id_cuenta  
inner join RF_TC_TIPO_CUENTA tc 
on 
 cb.id_tipo_cta = tc.id_tipo_cta 
order by 
 tm.fecha_hora 
   </select>
   <select id="RendimientoDetalleMultiva">
   select 
 nombre_cta, num_cuenta, rendimientos, ue.descripcion, r.unidad_ejecutora, r.entidad, r.ambito, grupo , unidad, subtotal 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, 
   cb.unidad_ejecutora  ||  cb.entidad || cb.ambito grupo,
   cb.unidad_ejecutora unidad,
   case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, 
     unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
       (id_cuenta in (:idCuentas)) and 
       ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
         fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
          and id_tipo_cta !=8 and id_tipo_programa in (:idTipoPrograma) ) cb
    left join
    (select 
       id_cuenta,  SUM(monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta 
     where
       fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
        AND (id_clave_trans_recla = 1201)
     group by 
       id_cuenta) mc 
    on 
      cb.id_cuenta = mc.id_cuenta ) r,   rf_tc_unidades_ejecutoras_tece ue 
    where   
      r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
    ORDER BY 
      grupo, num_cuenta
   </select>
   <select id="RendimientosGlobalMultiva">
   select 
  ren.totalrendimientos, ren.totalcuentas, descripcion 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa,unidad_ejecutora 
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_cuenta IN (:idCuentas)
      AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta !=8 and id_tipo_programa = :idTipoPrograma   
    ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
       AND (mvc.id_clave_trans_recla = 1201) 
     group by mvc.id_cuenta) 
  mc on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
   AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) ren,  sia_admin.rh_tc_uni_ejecutoras ue_rh 
  where 
      ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id="RendimientosGlobal">
select 
  ren.totalrendimientos, ren.totalcuentas, descripcion 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa, 
       decode(num_cuenta,    '4042105379',    '106',    '4042105361',    '113',    '4042105353',    '108',    '4025861329',    '101',    '4042105346',    '105',    '4040418089',    '101',    '4042105338',    '107',    '4042105312',    '101',    '4042105304',    '101',    '4042547786',    '101',    '4042547844',    '101',    '4025861311',    '101',    '4024426579',    '101',    '4042986018',    '109',    '4024426090',    '109',    '4040444184',    '109',    '4039477765',    '109',    '4024114555',    '109',    unidad_ejecutora) unidad_ejecutora 
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    6,    1,    6) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN(:idCuentas))) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta !=8 and id_tipo_programa in  (1,6)  
    ------id_tipo_programa !=7 and id_tipo_programa !=8 
    ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
     AND(mvc.id_clave_trans_recla = 47 OR mvc.id_clave_trans_recla = 69 OR mvc.id_clave_trans_recla = 177) 
     AND mvc.descripcion LIKE '%INT%' 
     group by mvc.id_cuenta) 
  mc on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
   AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) 
ren 
inner join 
 sia_admin.rh_tc_uni_ejecutoras ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
      <select id="RendimientoGlobalSant">
select 
  ren.totalrendimientos, ren.totalcuentas, descripcion 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa, 
       decode(num_cuenta,    '4042105379',    '106',    '4042105361',    '113',    '4042105353',    '108',    '4025861329',    '101',    '4042105346',    '105',    '4040418089',    '101',    '4042105338',    '107',    '4042105312',    '101',    '4042105304',    '101',    '4042547786',    '101',    '4042547844',    '101',    '4025861311',    '101',    '4024426579',    '101',    '4042986018',    '109',    '4024426090',    '109',    '4040444184',    '109',    '4039477765',    '109',    '4024114555',    '109',    unidad_ejecutora) unidad_ejecutora 
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    6,    1,    6) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN(:idCuentas))) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta !=8 and id_tipo_programa = 10) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
     AND(mvc.id_clave_trans_recla = 47 OR mvc.id_clave_trans_recla = 69 OR mvc.id_clave_trans_recla = 177) 
     AND mvc.descripcion LIKE '%INT%' 
     group by mvc.id_cuenta) 
  mc on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
   AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) 
ren 
inner join 
 sia_admin.rh_tc_uni_ejecutoras ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id="RendimientoGlobalGral">
   select 
  ren.totalrendimientos, ren.totalcuentas, descripcion 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa, unidad_ejecutora
     from 
      rf_tr_cuentas_bancarias 
     where 
          id_cuenta IN (:idCuentas) 
    AND ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta != 8 and id_tipo_programa in (:idTipoPrograma) ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
     AND (mvc.id_clave_trans_recla = 47 )
     group by mvc.id_cuenta) mc 
   on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue
   ON cb.unidad_ejecutora = ue.unidad_ejecutora 
       AND cb.entidad = ue.entidad 
        AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) 
ren 
inner join 
 sia_admin.rh_tc_uni_ejecutoras ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id="RendimientosGlobalBMX">
select 
  ren.totalrendimientos, ren.totalcuentas, upper(decode(descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','ORGANO INTERNO DE CONTROL','Contraloria Interna',descripcion)) descripcion, decode(ren.unidad_ejecutora,'901','0901','902','0902',ren.unidad_ejecutora) unidad_ejecutora 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       id_cuenta, id_tipo_programa, 
       decode(ambito, '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                      '43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                      '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                      '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,ambito) ambito,
       decode(num_cuenta,'43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                         '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                         '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                         '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,entidad) entidad,
       decode(num_cuenta,'43710154369','902','08400029068','901','43710149845','901','08400029076','901',
                         '08400029084','901','08400029092','901','08400030457','901',
                         '08400029122','902','08400029114','902','08400029106','902','08400029386','902',
                         '43710154377','902','43710154431','902','43710154547','902','43710154725','902',  
                         '43710154741','902','43710154857','902','43710155063','902','43710155071','902',  
                         '43710155098','902','43710155101','902',unidad_ejecutora) unidad_ejecutora
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    7,    1,    7) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN (:idCuentas))
        ) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
   and id_tipo_cta !=8 and  id_tipo_programa in (7,1)
   ----- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=9 and id_tipo_programa !=10 
   ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb, RF_TC_CLAVES_TRANSACCION ct
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
      AND mvc.id_clave_trans_recla = ct.id_clave_trans and
          (ct.id_clave_tb = 55)   and mvc.id_cuenta in (:idCuentas)
     group by mvc.id_cuenta) mc
   on cb.id_cuenta = mc.id_cuenta 
 inner join 
     (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue 
  ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
 -----  AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) ren 
inner join 
 (select unidad_ejecutora, descripcion
                            from sia_admin.rh_tc_uni_ejecutoras ut
                            union all
                            select unidad_ejecutora,  descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora
order by unidad_ejecutora 
   </select>
   <select id="RendimientosGlobalBBVA">
   select 
  ren.totalrendimientos, ren.totalcuentas, descripcion 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa, 
       unidad_ejecutora 
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    6,    1,    6) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN(:idCuentas))) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta !=8 and id_tipo_programa = 8 
    ----- id_tipo_programa !=7 and id_tipo_programa !=6 and id_tipo_programa !=10 and id_tipo_programa !=9 
    ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
     AND mvc.id_clave_trans_recla = 1162 
     group by mvc.id_cuenta) 
  mc on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
   AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) 
ren 
inner join 
 sia_admin.rh_tc_uni_ejecutoras ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id="RendimientosGlobalEsp">
select 
  ren.totalrendimientos, ren.totalcuentas, upper(decode(descripcion,
  'Oficina del C. Presidente','Junta de Gobierno y Presidencia','ORGANO INTERNO DE CONTROL','Contraloria Interna',descripcion)) descripcion, decode(ren.unidad_ejecutora,'901','0901','902','0902',ren.unidad_ejecutora) unidad_ejecutora 
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       id_cuenta, id_tipo_programa, ambito, entidad, unidad_ejecutora
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    7,    1,    7) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN (:idCuentas))
        ) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
   and id_tipo_cta !=8 and id_tipo_programa =9
   ---- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=10 
   ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb, RF_TC_CLAVES_TRANSACCION ct
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
      AND mvc.id_clave_trans_recla = ct.id_clave_trans and
          (ct.id_clave_tb = 55)   and mvc.id_cuenta in (:idCuentas)
     group by mvc.id_cuenta) mc
   on cb.id_cuenta = mc.id_cuenta 
 inner join 
     (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue 
  ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad  -----  AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) ren 
inner join 
 (select unidad_ejecutora, descripcion
                            from sia_admin.rh_tc_uni_ejecutoras ut
                            union all
                            select unidad_ejecutora,  descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
order by unidad_ejecutora
   </select>
   <select id="RendimientosTodosProgramas">
select 
 nombre_cta, num_cuenta, rendimientos, ue.descripcion, r.unidad_ejecutora, r.entidad, r.ambito, grupo , unidad, subtotal 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end  ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo, CASE cb.unidad_ejecutora  WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,6,1,6) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)))) and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa in (6,1) 
                              ----id_tipo_programa !=7 and id_tipo_programa !=8
                              ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' 
                            group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r
                          INNER JOIN 
                           rf_tc_unidades_ejecutoras_tece ue 
                          ON 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta 
   </select>
    <select id="RendimientosSantander">
select 
 nombre_cta, num_cuenta, rendimientos, ue.descripcion, r.unidad_ejecutora, r.entidad, r.ambito, grupo , unidad, subtotal 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end  ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo, CASE cb.unidad_ejecutora  WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,6,1,6) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)))) and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa = 10 ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' 
                            group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r
                          INNER JOIN 
                           rf_tc_unidades_ejecutoras_tece ue 
                          ON 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta 
   </select>
   <select id="RendimientosTodosProgramasBBVA">
   select 
 nombre_cta, num_cuenta, rendimientos, ue.descripcion, r.unidad_ejecutora, r.entidad, r.ambito, grupo , unidad, subtotal 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, 
   cb.unidad_ejecutora || decode(cb.entidad || cb.ambito,    '91',    '1',    cb.entidad) || cb.ambito grupo, 
   cb.unidad_ejecutora unidad, 
   case when cb.unidad_ejecutora &lt; '121' then 0 
        when cb.unidad_ejecutora = '130' then 0 
   else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, 
     case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,6,1,6) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)))) and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa = 8 
                              ---- id_tipo_programa !=7 and id_tipo_programa !=6 and id_tipo_programa !=10 and id_tipo_programa !=9 
                              ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND id_clave_trans_recla = 1162 
                            group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r
                          INNER JOIN 
                           rf_tc_unidades_ejecutoras_tece ue 
                          ON 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta
   </select>
   <select id="RendimientoDetalleGral">
  select 
 nombre_cta, num_cuenta, rendimientos, ue.descripcion, r.unidad_ejecutora, r.entidad, r.ambito, grupo , unidad, subtotal 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, 
   cb.unidad_ejecutora  ||  cb.entidad || cb.ambito grupo,
   cb.unidad_ejecutora unidad,
   case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, 
     unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
       (id_cuenta in (:idCuentas)) and 
       ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
         fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
          and id_tipo_cta !=8 and id_tipo_programa in (:idTipoPrograma) ) cb
    left join
    (select 
       id_cuenta,  SUM(monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta 
     where
       fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
       AND (id_clave_trans_recla = 47) 
     group by 
       id_cuenta) mc 
    on 
      cb.id_cuenta = mc.id_cuenta ) r,   rf_tc_unidades_ejecutoras_tece ue 
    where   
      r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
    ORDER BY 
      grupo, num_cuenta 
   </select>
   <select id="RendimientosTodosProgramasBMX">
select 
 nombre_cta, num_cuenta, rendimientos, decode(ue.descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','Organo Interno de Control','Contraloria Interna',ue.descripcion) descripcion, r.unidad_ejecutora, r.entidad, r.ambito,  unidad, 
 decode (r.unidad,'901','0901','902','0902',r.unidad) || decode(r.entidad || r.ambito,    '91',    '1',    r.entidad) || r.ambito grupo,
 case when unidad &lt; '121' then 0 
      when unidad in ('130','901','902') then 0 else 1 end subtotal  
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora,  
   decode(cb.ambito, '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                     '43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                     '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                     '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,cb.ambito) ambito,
   decode(num_cuenta,'43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                     '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                     '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                     '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,cb.entidad) entidad,
   CASE cb.unidad_ejecutora  
                             when '108' then case when cb.num_cuenta = '43710154369' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '109' then case when cb.num_cuenta in ('08400029068','43710149845','08400029076','08400029084','08400029092','08400030457') then '901'
                                                  when cb.num_cuenta in ('08400029122','08400029114','08400029106','08400029386')  then '902' 
                                                                     else  cb.unidad_ejecutora end 
                             when '121' then case when cb.num_cuenta = '43710154377' then '902'
                                                                    else cb.unidad_ejecutora end 
                             when '122' then case when cb.num_cuenta = '43710154431' then '902'
                                                                    else cb.unidad_ejecutora end                                   
                             when '123' then case when cb.num_cuenta = '43710154547' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '124' then case when cb.num_cuenta = '43710154725' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '125' then case when cb.num_cuenta = '43710154741' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '126' then case when cb.num_cuenta = '43710154857' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '127' then case when cb.num_cuenta = '43710155063' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '128' then case when cb.num_cuenta = '43710155071' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '129' then case when cb.num_cuenta = '43710155098' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '130' then case when cb.num_cuenta = '43710155101' then '902'
                                                                    else cb.unidad_ejecutora end
   ELSE
        cb.unidad_ejecutora END unidad
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,7,1,7) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)
                             ))) 
                             
                             and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa in (7,1) 
                              ----- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=9  and id_tipo_programa !=10 
                              ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta m, RF_TC_CLAVES_TRANSACCION ct 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND m.id_clave_trans_recla = ct.id_clave_trans and
                             (ct.id_clave_tb = 55)   and id_cuenta in (:idCuentas)
                           group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r,
                            (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue
                          where 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad) ---- AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta
   </select>
   <select id="RendimientosTodosProgramasEsp">
   select 
 nombre_cta, num_cuenta, rendimientos, decode(ue.descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','Organo Interno de Control','Contraloria Interna',ue.descripcion) descripcion, r.unidad_ejecutora, r.entidad, r.ambito,  unidad, 
 decode (r.unidad,'901','0901','902','0902',r.unidad) || decode(r.entidad || r.ambito,    '91',    '1',    r.entidad) || r.ambito grupo,
 case when unidad &lt; '121' then 0 
      when unidad in ('130','901','902') then 0 else 1 end subtotal  
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora,  
   cb.ambito, cb.entidad, cb.unidad_ejecutora unidad
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, 
     unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,7,1,7) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)))) 
                             and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa = 9
                              ----- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=10 
                              ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta m, RF_TC_CLAVES_TRANSACCION ct 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND m.id_clave_trans_recla = ct.id_clave_trans and
                             (ct.id_clave_tb = 55)   and id_cuenta in (:idCuentas)
                           group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r,
                            (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue
                          where 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad) ---- AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta
   </select>
   <select id="ComIndebidasChq">
select 
 cb.num_cuenta, cb.nombre_cta, to_char(mc.fecha_hora,'dd/mm/yyyy') fecha_hora, mc.clave_trans_recla, mc.descripcion, mc.monto 
from 
 (select 
   id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla 
  from 
   RF_TR_MOVIMIENTOS_CUENTA 
  where 
   (id_cuenta in (:idCuentas)) and 
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
   ((id_clave_trans_recla = 37 or id_clave_trans_recla = 31) and (descripcion LIKE '%CAJA%' ))) mc 
  inner join 
   RF_TR_CUENTAS_BANCARIAS cb 
  on 
   cb.id_cuenta = mc.id_cuenta 
  inner join 
   RF_TC_COSTOS_TRANSACCION ct 
  on 
   mc.id_clave_trans_recla = ct.id_clave_trans and ct.costo &lt; mc.monto 
  order by 
   num_cuenta, fecha_hora 
   </select>
   <select id="TerminalPuntoVta">
select 
    c.descripcion, to_char(c.fecha_hora,'dd/MM/yyyy') fecha_hora, c.monto, ue.descripcion || '  ' || tpv.descripcion unidad, ue.unidad_ejecutora 
from 
    rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
where 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
    id_clave_trans_recla  = 49 and tpv.referencia_tpv = substr(trim(c.descripcion),-7,7) and
    tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                            from rf_tr_cuentas_bancarias c
                            where c.id_cuenta  in (:idCuentas)) and 
    ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
    ue.entidad = tpv.entidad and 
    ue.ambito = tpv.ambito and 
    (ue.unidad_ejecutora,ue.entidad, ue.ambito) in 
    (select distinct c.unidad_ejecutora, entidad, ambito
     from rf_tr_cuentas_bancarias c
     where c.id_cuenta  in (:idCuentas)) 
order by 
  ue.unidad_ejecutora, unidad, c.fecha_hora 
</select>
<select id="tasaBanxico">
select 
  tasa 
from 
  RF_TR_TASAS_REND_DETALLE 
where 
  id_rendimiento = (
                    select id_rendimiento from RF_TR_TASAS_RENDIMIENTO
                    where fecha = to_date(':fechaInicial','dd/mm/yyyy') and 
                          id_banco = 498)  and 
  tasa != 0
</select>
<select id="TerminalPuntoVtaBMX">
select 
    c.descripcion, to_char(c.fecha_hora,'dd/MM/yyyy') fecha_hora, c.monto, ue.descripcion || '  ' || tpv.descripcion || ' (' || tpv.referencia_tpv || ')'  unidad, ue.unidad_ejecutora 
from 
    rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
where 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
    id_clave_trans_recla  = 634 and tpv.referencia_tpv = substr(trim(c.referencia),0,7) and
    tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                            from rf_tr_cuentas_bancarias c
                            where c.id_cuenta  in (:idCuentas)) and 
    ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
    ue.entidad = tpv.entidad and 
    ue.ambito = tpv.ambito 
order by 
  ue.unidad_ejecutora, unidad, c.fecha_hora 
   </select>
   <select id="MovimientosCtasDetalleBMX">
select cb.id_cuenta, cb.num_cuenta, cb.nombre_cta, fecha_hora,  
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) descripcion,
       nvl(decode(id_tipo_trans,'D',monto,0),0) cargo, nvl(decode(id_tipo_trans,'C',monto,0),0) abono, nvl(saldo,0) saldo,
       decode(referencia,null,' ',referencia) referencia, nvl(saldo_inicial,0) saldo_inicial,  nvl(saldo_final,0) saldo_final
from 
    RF_TR_CUENTAS_BANCARIAS cb, RF_TR_MOVIMIENTOS_CUENTA m,
    (select 
         m2.id_cuenta,  nvl(sd.saldo_calculado,0) saldo_inicial, 
         nvl(sd.saldo_calculado,0)+sum(decode(m2.id_tipo_trans,'C',monto,0)) +sum(decode(m2.id_tipo_trans,'D',monto,0)) saldo_final
     from 
         RF_TR_MOVIMIENTOS_CUENTA m2, 
         (select id_cuenta, saldo_calculado from rf_tr_saldos_diarios 
          where id_cuenta in (:idCuentas) and  
                fecha = (select  tsr.obten_anterior_dia_habil(to_date (':fechaInicial','yyyy-mm-dd')) from dual)
          )sd
     where 
          m2.id_cuenta in (:idCuentas) and 
          m2.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m2.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and 
          m2.id_cuenta = sd.id_cuenta(+) 
     group by m2.id_cuenta,saldo_calculado) sal 
where cb.id_cuenta in (:idCuentas) and cb.id_cuenta = m.id_cuenta(+) and cb.id_cuenta = sal.id_cuenta(+)  and
      m.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 
order by cb.num_cuenta, fecha_hora,  id_movimiento
   </select>
   <select id="MovimientosCtasDetalle">
select cb.id_cuenta, cb.num_cuenta, cb.nombre_cta, fecha_hora,  nvl(numero_cheque,0) numero_cheque, 
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) descripcion,
       nvl(decode(id_tipo_trans,'DR',monto,0),0) cargo, nvl(decode(id_tipo_trans,'CR',monto,0),0) abono, nvl(saldo,0) saldo,
       nvl(numero_folio,0) numero_folio,
       decode(referencia,null,' ',referencia) referencia, nvl(saldo_inicial,0) saldo_inicial,  nvl(saldo_final,0) saldo_final
from 
    RF_TR_CUENTAS_BANCARIAS cb, RF_TR_MOVIMIENTOS_CUENTA m,
    (select 
         m2.id_cuenta,  nvl(sd.saldo_calculado,0) saldo_inicial, 
         nvl(sd.saldo_calculado,0)+sum(decode(m2.id_tipo_trans,'CR',monto,0)) -sum(decode(m2.id_tipo_trans,'DR',monto,0)) saldo_final
     from 
         RF_TR_MOVIMIENTOS_CUENTA m2, 
         (select id_cuenta, saldo_calculado from rf_tr_saldos_diarios 
          where id_cuenta in (:idCuentas) and  
                fecha = (select  tsr.obten_anterior_dia_habil(to_date (':fechaInicial','yyyy-mm-dd')) from dual)
          )sd
     where 
          m2.id_cuenta in (:idCuentas) and 
          m2.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m2.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and 
          m2.id_cuenta = sd.id_cuenta(+) 
     group by m2.id_cuenta,saldo_calculado) sal 
where cb.id_cuenta in (:idCuentas) and cb.id_cuenta = m.id_cuenta(+) and cb.id_cuenta = sal.id_cuenta(+)  and
      m.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 
order by cb.num_cuenta, fecha_hora,  id_movimiento
   </select>
    <select id="MovimientosCtasDetalleBBVA">
select cb.id_cuenta, cb.num_cuenta, cb.nombre_cta, fecha_hora,  nvl(numero_cheque,0) numero_cheque, 
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) descripcion,
       nvl(decode(id_tipo_trans,'DR',monto,0),0) cargo, nvl(decode(id_tipo_trans,'CR',monto,0),0) abono, nvl(saldo,0) saldo,
       nvl(numero_folio,0) numero_folio,
       decode(referencia,null,' ',referencia) referencia, nvl(saldo_inicial,0) saldo_inicial,  nvl(saldo_final,0) saldo_final
from 
    RF_TR_CUENTAS_BANCARIAS cb, RF_TR_MOVIMIENTOS_CUENTA m,
    (select 
         m2.id_cuenta,  nvl(sd.saldo_calculado,0) saldo_inicial, 
         nvl(sd.saldo_calculado,0)+sum(decode(m2.id_tipo_trans,'CR',monto,0)) +sum(decode(m2.id_tipo_trans,'DR',monto,0)) saldo_final
     from 
         RF_TR_MOVIMIENTOS_CUENTA m2, 
         (select id_cuenta, saldo_calculado from rf_tr_saldos_diarios 
          where id_cuenta in (:idCuentas) and  
                fecha = (select  tsr.obten_anterior_dia_habil(to_date (':fechaInicial','yyyy-mm-dd')) from dual)
          )sd
     where 
          m2.id_cuenta in (:idCuentas) and 
          m2.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m2.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and 
          m2.id_cuenta = sd.id_cuenta(+) 
     group by m2.id_cuenta,saldo_calculado) sal 
where cb.id_cuenta in (:idCuentas) and cb.id_cuenta = m.id_cuenta(+) and cb.id_cuenta = sal.id_cuenta(+)  and
      m.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 
order by cb.num_cuenta, fecha_hora,  id_movimiento
   </select>
   <select id="SaldosDiarios">
select 
 descripcion, fecha, saldo_calculado, unidad_ejecutora
from 
 (select 
   cb.num_cuenta||' '|| decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) descripcion, sd.fecha, sd.saldo_calculado, cb.unidad_ejecutora
  from
   (select 
     fecha, saldo_calculado, id_cuenta 
    from 
     rf_tr_saldos_diarios 
    where 
     (id_cuenta in (:idCuentas)) and 
     fecha BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') 
    order by 
     id_cuenta, fecha) sd 
    inner join 
     rf_tr_cuentas_bancarias cb 
    on 
     sd.id_cuenta = cb.id_cuenta 
    inner join 
     RF_TC_TIPO_CUENTA tc 
    on 
     cb.id_tipo_cta = tc.id_tipo_cta 
    order by 
     cb.unidad_ejecutora,  cb.num_cuenta, cb.nombre_cta, fecha) 
   </select>
   <select id="MovimientosCtasTotalDia">
select 
 todasCtas.id_cuenta, todasCtas.num_cuenta, todasCtas.nombre_cta, nvl(totCargo,0) totCargo, nvl(totAbono,0) totAbono , todasCtas.SALDO_CALCULADO, todasCtas.FECHA, todasCtas.UNIDAD_EJECUTORA, todasCtas.SALDO_CALCULADO+nvl(totCargo,0)-nvl(totAbono,0) saldo_inicial 
from 
 (select 
   id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora, sum(cargo) totCargo, sum(abono) totAbono 
  from
   (select 
     m.id_cuenta,m.num_cuenta, m.nombre_cta,m.id_tipo_trans, m.saldo_calculado saldo_final, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as abono, trunc(fecha) fecha, m.unidad_ejecutora 
    from
     (select 
       mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.id_tipo_trans, sd.saldo_calculado, mc.monto, mc.fecha_hora fecha, cb.unidad_ejecutora 
      from 
       RF_TR_MOVIMIENTOS_CUENTA mc 
      inner join 
       RF_TR_CUENTAS_BANCARIAS cb 
      on 
       cb.id_cuenta = mc.id_cuenta 
      inner join 
       RF_TR_SALDOS_DIARIOS sd 
      on 
       cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = trunc(mc.fecha_hora) 
      where (id_cuenta in (:idCuentas)) and 
      mc.fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  mc.fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
      ) m 
      group by
       m.id_cuenta, m.num_cuenta, m.nombre_cta, m.id_tipo_trans, m.saldo_calculado,m.fecha, m.unidad_ejecutora) 
      group by 
       id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora) movexistentes 
      right join 
       (select 
          cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION, ID_SALDO_DIARIO,FECHA,SALDO_CALCULADO 
        from 
          RF_TR_CUENTAS_BANCARIAS cb 
        inner join 
         RF_TR_SALDOS_DIARIOS sd  
        on 
         cb.id_cuenta = sd.id_cuenta and sd.fecha BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') 
        where 
         (cb.id_cuenta in (:idCuentas))) todasCtas 
        on 
         movexistentes.id_cuenta = todasCtas.id_cuenta and  movexistentes.fecha = todasCtas.fecha 
        order by 
         todasCtas.UNIDAD_EJECUTORA, todasCtas.num_cuenta, todasCtas.nombre_cta, todasCtas.FECHA 
   </select>
   <select id="ChqsPagados">
select 
 cb.num_cuenta, cb.nombre_cta, tm.descripcion, tm.fecha_hora, tm.monto, tm.numero_cheque 
from 
 (select 
   id_cuenta, fecha_hora, monto,descripcion, clave_trans_recla,id_clave_trans_recla, id_movimiento, numero_cheque 
  from 
   RF_TR_MOVIMIENTOS_CUENTA 
  where 
   (id_cuenta in (:idCuentas)) and 
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
   id_clave_trans_recla  = 22 and monto > 5000.00 
  order by 
   id_cuenta, fecha_hora) tm 
  inner join 
   RF_TR_CUENTAS_BANCARIAS cb 
  on 
   tm.id_cuenta = cb.id_cuenta and cb.id_tipo_cta = 1 and cb.id_estatus_cta_prog = 1 
   order by cb.num_cuenta, tm.fecha_hora
   </select>
   <select id="ReversoComisiones">
select 
 cb.num_cuenta, cb.nombre_cta, tm.descripcion, to_char(tm.fecha_hora,'dd/mm/yyyy') fecha_hora, tm.clave_trans_recla, tm.monto 
from 
 (select 
   id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
   RF_TR_MOVIMIENTOS_CUENTA 
  where 
   (id_cuenta in (:idCuentas)) and 
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora  &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
  order by 
   id_cuenta, fecha_hora) tm 
  inner join 
   RF_TC_CLAVES_TRANSACCION tct 
  on 
   tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
  inner join 
   RF_TR_CUENTAS_BANCARIAS cb 
  on 
   tm.id_cuenta = cb.id_cuenta 
  order by 
   num_cuenta, fecha_hora 
   </select>
   <select id="TotalReversoCom">
select 
 cb.num_cuenta, cb.nombre_cta, sum(tm.monto) as TotalComisiones 
from 
 (select 
   id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
   RF_TR_MOVIMIENTOS_CUENTA 
  where 
   (id_cuenta in (:idCuentas)) and 
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
  order by 
   id_cuenta, fecha_hora) tm 
  inner join 
   RF_TC_CLAVES_TRANSACCION tct 
  on 
   tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
  inner join 
   RF_TR_CUENTAS_BANCARIAS cb 
  on 
   tm.id_cuenta = cb.id_cuenta 
  group by 
   cb.num_cuenta, cb.nombre_cta  
   </select>
   <select id="TotalComisionesCobradas">
select 
 cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta , sum(tm.monto) total 
from 
 (select 
   id_cuenta, fecha_hora, monto,descripcion, clave_trans_recla,id_clave_trans_recla, id_movimiento 
  from 
   RF_TR_MOVIMIENTOS_CUENTA 
  where 
   (id_cuenta in (:idCuentas)) and 
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
  order by 
   id_cuenta, fecha_hora) tm 
  inner join 
   RF_TC_CLAVES_TRANSACCION tct 
  on 
   tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
  inner join 
   RF_TC_COSTOS_TRANSACCION tc 
  on 
   tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto &lt;= tc.limite_superior) or (tc.limite_inferior is null and tc.limite_superior is null)) 
  inner join 
   RF_TR_CUENTAS_BANCARIAS cb 
  on 
   tm.id_cuenta = cb.id_cuenta 
  inner join 
   RF_TC_TIPO_CUENTA tc 
  on 
   cb.id_tipo_cta = tc.id_tipo_cta 
  group by 
   cb.num_cuenta, cb.nombre_cta, cb.id_tipo_cta, tc.nombre_corto 
  order by 
   num_cuenta 
   </select>
   <select id="TransaccionalidadCuentas">
select 
 transacciones, descripcion, substr(fecha,9,2)||'/'|| substr(fecha,6,2)||'/'|| substr(fecha,1,4) fecha 
from 
 (select 
    count(mc.id_cuenta) as transacciones, cb.num_cuenta ||' ' || (decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta)) descripcion, decode(mc.fecha_hora,null,':fechaInicial',mc.fecha_hora) as fecha 
  from 
    (select 
      id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora 
     from 
      rf_tr_movimientos_cuenta 
     where 
      (id_cuenta in (:idCuentas)) and 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1
     order by
      id_cuenta ) mc 
     RIGHT JOIN 
      (select 
        cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION 
       from 
        RF_TR_CUENTAS_BANCARIAS cb 
       where 
        (cb.id_cuenta in (:idCuentas)) ) cb 
       on 
        mc.id_cuenta = cb.id_cuenta 
       inner join 
        RF_TC_TIPO_CUENTA tc 
       on 
        cb.id_tipo_cta = tc.id_tipo_cta  
       group by 
        mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.fecha_hora,cb.id_tipo_cta, tc.nombre_corto 
       order by 
        cb.num_cuenta, mc.fecha_hora)  
   </select>
   <select id="DetalleComisionesCobradas">
select 
 cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta,tm.descripcion, tm.fecha_hora fecha_hora, tm.clave_trans_recla, tm.monto 
from 
 (select 
    id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
   RF_TR_MOVIMIENTOS_CUENTA 
  where 
   (id_cuenta in (:idCuentas)) and 
   fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
  order by 
   id_cuenta, fecha_hora) tm 
  inner join 
   RF_TC_CLAVES_TRANSACCION tct 
  on 
   tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
  inner join 
   RF_TC_COSTOS_TRANSACCION tc 
  on 
   tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto &lt;= tc.limite_superior) or (tc.limite_inferior is null and tc.limite_superior is null)) 
  inner join 
   RF_TR_CUENTAS_BANCARIAS cb 
  on 
   tm.id_cuenta = cb.id_cuenta 
  inner join 
   RF_TC_TIPO_CUENTA tc 
  on 
   cb.id_tipo_cta = tc.id_tipo_cta 
  order by 
   num_cuenta, fecha_hora 
   </select>
   <select id="MovimientosCuentasPropias">
select 
 num_cuenta, nombre_cta, to_date(fecha, 'yyyy-MM-dd') fecha, cargo, abono 
from 
 (select 
   (case when t.fecha is null then f.num_cuenta else t.num_cuenta end) num_cuenta, (case when t.fecha is null then f.nombre_cta else t.nombre_cta end) nombre_cta, (case when t.fecha is null then f.fecha else t.fecha end) fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono 
 from 
  (select 
    num_cuenta, nombre_cta, fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono, unidad_ejecutora 
   from 
     (select 
        m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as abono , unidad_ejecutora 
      from 
        (select 
          cb.num_cuenta, cb.nombre_cta, nvl(mc.monto,0) monto, nvl(mc.id_tipo_trans,0) id_tipo_trans, nvl(mc.descripcion,' ') descripcion, mc.fecha_hora fecha, unidad_ejecutora 
         from 
          (select 
             id_cuenta, num_cuenta, nombre_cta, unidad_ejecutora 
           from 
            RF_TR_CUENTAS_BANCARIAS 
           where 
            id_cuenta in (:idCuentas)) cb 
           left join 
             (select 
                mov.id_cuenta, monto, id_tipo_trans, descripcion, fecha_hora 
              from 
                (select 
                   id_cuenta, monto, id_tipo_trans, descripcion, to_char(trunc(fecha_hora),'yyyy-MM-dd') fecha_hora, substr(trim(descripcion),-10,10) cuenta 
                 from 
                  RF_TR_MOVIMIENTOS_CUENTA 
                 where 
                  (id_cuenta in (:idCuentas)) and 
                  fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                  and clave_trans in (5423, 5489)) mov 
                 inner join 
                  (select 
                    ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG, AMBITO,PROCESAR,FECHA_OPERACION,FECHA_FIN_OPERACION 
                   from 
                    RF_TR_CUENTAS_BANCARIAS 
                   where 
                    id_tipo_programa = (select 
                                         distinct id_tipo_programa 
                                        from 
                                         RF_TR_CUENTAS_BANCARIAS 
                                        where 
                                         id_cuenta in (:idCuentas))) ctas 
                  on 
                   ctas.num_cuenta = mov.cuenta ) mc 
                  on 
                   cb.id_cuenta = mc.id_cuenta ) m 
                  group by 
                   m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, m.unidad_ejecutora 
                  order by 
                   m.fecha, m.num_cuenta)) t, (select 
                                                * 
                                               from 
                                                 (select 
                                                    rownum-1, to_char(to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1,'yyyy-mm-dd') fecha 
                                                  from 
                                                   rf_tr_saldos_diarios t 
                                                  where 
                                                   to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1 BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) tt, 
                                              (select 
                                                c.num_cuenta, c.nombre_cta, c.unidad_ejecutora 
                                               from 
                                                rf_tr_cuentas_bancarias c 
                                               where 
                                                c.id_cuenta in (:idCuentas)) cc ) f 
                                               where 
                                                t.num_cuenta(+) = f.num_cuenta and t.fecha(+) = f.fecha 
                                               order by 
                                                f.unidad_ejecutora,  num_cuenta, nombre_cta, fecha) 
   </select>
   <select id="ReferenciasIdentificadasReintegros">
select 
 res.fecha_hora, res.num_cuenta, res.nombre_cta, res.referencia, res.monto, res.descripcion, res.ctaAfecta, cb1.nombre_cta ctaAfectar  
from 
  (SELECT 
     mc.fecha_hora, cb.num_cuenta, cb.nombre_cta, mc.referencia, mc.monto, mc.descripcion, substr(trim(mc.descripcion),-10,10) ctaAfecta 
   FROM 
     (SELECT 
         id_cuenta, monto, referencia, fecha_hora, clave_trans_recla, descripcion, id_tipo_trans 
      FROM 
        rf_tr_movimientos_cuenta 
      WHERE 
        (id_cuenta in (:idCuentas)) AND
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
        id_tipo_trans = 'CR' AND 
        (id_clave_trans_recla = 5 OR id_clave_trans_recla = 27) AND (clave_trans_recla = 5423 OR clave_trans_recla = 5489) AND 
        (referencia LIKE '%ARE%' OR (SUBSTR(referencia,    1,    2) = '03' OR SUBSTR(referencia,    1,    2) = '04' OR SUBSTR(referencia,    1,    2) = '23' OR 
         SUBSTR(referencia,    1,    2) = '24')) 
      ORDER BY 
        id_cuenta) mc 
      INNER JOIN 
       rf_tr_cuentas_bancarias cb 
      ON 
       mc.id_cuenta = cb.id_cuenta and num_cuenta not in ('4042547851','4042547869') and cb.id_tipo_cta not in (5,1,2)) res 
      inner join 
       rf_tr_cuentas_bancarias cb1 
      on 
       res.ctaAfecta = cb1.num_cuenta and cb1.id_tipo_cta !=3 
      order by 
       res.num_cuenta,  fecha_hora, ctaafecta 
   </select>
    <select id="consolidacionSaldos">
select 
 unidad_ejecutora, nombre_corto, sum(decode(tipoCuenta||bandera,10,saldo,0)) dispAnt, sum(decode(tipoCuenta||bandera,11,saldo,0)) dispAct, sum(decode(tipoCuenta||bandera,20,saldo,0)) ingAnt, sum(decode(tipoCuenta||bandera,21,saldo,0)) ingpAct, sum(decode(tipoCuenta||bandera,30,saldo,0)) chqGCAnt, sum(decode(tipoCuenta||bandera,31,saldo,0)) chqGCAct,       sum(decode(tipoCuenta||bandera,40,saldo,0)) chqSPAnt, sum(decode(tipoCuenta||bandera,41,saldo,0)) chqSPAct 
from 
 (select 
    sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto,0 bandera 
  from 
    (select 
       saldo_calculado, unidad_ejecutora, nombre_corto, decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta 
     from 
       (select 
         saldo_calculado,fecha, decode(num_cuenta,'4042547885',6,'4042547869',6,cb.id_tipo_cta ) tipo_cuenta, 
         decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora, 
         decode(num_cuenta,'4042547752','Tesorería','4040444184','Tesorería','4024426090','Tesorería','4039477765','Tesorería',ue.nombre_corto ) nombre_corto 
        from 
         rf_tr_saldos_diarios sd 
        inner join 
         rf_tr_cuentas_bancarias cb 
        on 
         sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas))    
        inner join 
          sia_admin.RH_TC_UNI_EJECUTORAS ue    
        on 
         cb.unidad_ejecutora = ue.unidad_ejecutora and
         ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
        where 
         fecha =  to_date(':fechaInicial','yyyy-mm-dd') and
              num_cuenta != 4042680082
          )sub) res 
        group by 
         tipoCuenta, unidad_ejecutora, nombre_corto 
        union all 
        select 
          sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto, 1 bandera 
        from 
          (select 
             saldo_calculado, unidad_ejecutora, nombre_corto, decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta 
          from 
            (select 
               saldo_calculado, decode(num_cuenta,'4042547885',6,'4042547869',6,cb.id_tipo_cta ) tipo_cuenta, 
               decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora, 
               decode(num_cuenta,'4042547752','Tesorería','4040444184','Tesorería','4024426090','Tesorería','4039477765','Tesorería',ue.nombre_corto ) nombre_corto 
             from 
               rf_tr_saldos_diarios sd 
             inner join 
               rf_tr_cuentas_bancarias cb    
             on 
              sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) 
             inner join 
              sia_admin.RH_TC_UNI_EJECUTORAS ue    
             on 
              cb.unidad_ejecutora = ue.unidad_ejecutora   and
              ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
             where 
              fecha = to_date(':fechaFinal','yyyy-mm-dd') and
              num_cuenta != 4042680082
              )sub) res 
             group by 
              tipoCuenta, unidad_ejecutora, nombre_corto 
            order by 
              unidad_ejecutora, tipoCuenta) 
            group by 
             unidad_ejecutora, nombre_corto 
   </select>
   <select id="consolidacionSaldosNL">
select 
 unidad, nombre_corto, 
 sum(decode(bandera,1,saldo,0)) saldoActual, 
 sum(decode(bandera,0,saldo,0)) saldoAnterior 
from  
( 
select 
   sum(saldo_calculado) saldo, unidad,
   decode(unidad,102,'Contraloría Interna',
                               105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                               107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                               109,'D.G. de Administración', 096,'Concentradoras',
                               097,'Gasto Corriente',098,'Servicios Personales',
                               099,'Ingresos', 100,'Reintegros',nombre_corto) nombre_corto, 1 bandera 
from  
(select 
      saldo_calculado,fecha, 
      decode(num_cuenta,'08400029084','098','08400030457','098','4042547752','096','43710149845','096','08400029068','096',         
                        '0161763024','096','18000008500','096','08400029076','097','8788788','096',
                         '08400031046','096',
                        '08400029122','099','08400029386','099','43710154369','099','08400029106','100', cb.unidad_ejecutora ) unidad, 
      decode(num_cuenta,'43710154369','D.G. Administración',nombre_corto)nombre_corto 
from 
      rf_tr_saldos_diarios sd, rf_tr_cuentas_bancarias cb, 
      sia_admin.RH_TC_UNI_EJECUTORAS ue   
where 
      fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
      cb.unidad_ejecutora = ue.unidad_ejecutora and 
      sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
      (trunc(cb.FECHA_FIN_OPERACION) >= to_date(':fechaInicial','yyyy-mm-dd') or cb.FECHA_FIN_OPERACION is null)  and 
      ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL))) 
)sub 
group by unidad, nombre_corto 
union all 
select 
   sum(saldo_calculado) saldo, unidad,
   decode(unidad,102,'Contraloría Interna',
                               105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                               107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                               109,'D.G. de Administración', 096,'Concentradoras',
                               097,'Gasto Corriente',098,'Servicios Personales',
                               099,'Ingresos', 100,'Reintegros',nombre_corto) nombre_corto, 0 bandera 
from  
(select 
      saldo_calculado,fecha, 
      decode(num_cuenta,'08400029084','098','08400030457','098','4042547752','096','43710149845','096','08400029068','096',         
                        '0161763024','096','18000008500','096','08400029076','097','8788788','096',
                         '08400031046','096',
                        '08400029122','099','08400029386','099','43710154369','099','08400029106','100', cb.unidad_ejecutora ) unidad, 
      decode(num_cuenta,'43710154369','D.G. Administración',nombre_corto)nombre_corto 
from 
      rf_tr_saldos_diarios sd, rf_tr_cuentas_bancarias cb, 
      sia_admin.RH_TC_UNI_EJECUTORAS ue   
where 
      fecha =  to_date(':fechaInicial','yyyy-mm-dd') and
      cb.unidad_ejecutora = ue.unidad_ejecutora and 
      sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
      (trunc(cb.FECHA_FIN_OPERACION) >= to_date(':fechaInicial','yyyy-mm-dd') or cb.FECHA_FIN_OPERACION is null) and 
      ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
 )sub 
group by unidad, nombre_corto 
) 
group by  
      unidad, nombre_corto 
order by unidad 
   </select>
   <select id="consolidacionSaldosBMX">
select 
 unidad_ejecutora, nombre_corto, 
 sum(decode(tipoCuenta||bandera,10,saldo,0)) ingAnt, 
 sum(decode(tipoCuenta||bandera,11,saldo,0)) ingAct, 
 sum(decode(tipoCuenta||bandera,20,saldo,0)) gcAnt, 
 sum(decode(tipoCuenta||bandera,21,saldo,0)) gcAct, 
 sum(decode(tipoCuenta||bandera,30,saldo,0)) spAnt, 
 sum(decode(tipoCuenta||bandera,31,saldo,0)) spAct          
from 
 (select 
    sum(saldo_calculado) saldo, res.tipoCuenta, 
    decode(res.unidad_ejecutora,'901','0901','902','0902',res.unidad_ejecutora) unidad_ejecutora, 
    res.nombre_corto,0 bandera 
  from 
    (select 
       saldo_calculado, unidad_ejecutora,
       decode(sub.unidad_ejecutora,901,'Tesorería',902,'Contabilidad Institucional',102,'Contraloría Interna',
                                   105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                                   107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                                   109,'D.G. de Administración',sub.nombre_corto) nombre_corto,
       decode(tipo_cuenta,6,1,1,2,2,3,tipo_cuenta) tipoCuenta 
     from 
       (select 
         saldo_calculado,fecha, 
         decode(num_cuenta,'08400029068',6,'43710149845',1,'08400029076',1,'08400029084',2,         
                           '08400029106',1,'08400029114',1,cb.id_tipo_cta  ) tipo_cuenta,
         cb.id_tipo_cta,
         decode(num_cuenta,'08400029068','901','43710149845','901','08400029076','901','08400029084','901','08400029092','901',         
                           '08400029122','901','08400029106','901','08400029114','901',
                           '08400030457','901','08400029386','901', cb.unidad_ejecutora ) unidad_ejecutora, 
         nombre_corto 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb, 
         sia_admin.RH_TC_UNI_EJECUTORAS ue   
          where 
         fecha =  to_date(':fechaInicial','yyyy-mm-dd') and
         cb.unidad_ejecutora = ue.unidad_ejecutora and
          sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
         ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
       
          )sub) res 
        group by 
         tipoCuenta, unidad_ejecutora, nombre_corto 
        union all 
        select 
          sum(saldo_calculado) saldo, res.tipoCuenta, 
             decode(res.unidad_ejecutora,'901','0901','902','0902',res.unidad_ejecutora) unidad_ejecutora, 
          res.nombre_corto, 1 bandera 
        from 
          (select 
             saldo_calculado, unidad_ejecutora,num_cuenta,
             decode(sub.unidad_ejecutora,901,'Tesorería',902,'Contabilidad Institucional',102,'Contraloría Interna',
                                   105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                                   107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                                   109,'D.G. de Administración',sub.nombre_corto) nombre_corto,
            decode(tipo_cuenta,6,1,1,2,2,3,tipo_cuenta) tipoCuenta 
          from 
            (select 
         saldo_calculado,fecha, num_cuenta,
         decode(num_cuenta,'08400029068',6,'43710149845',1,'08400029076',1,'08400029084',2,         
                           '08400029106',1,'08400029114',1,cb.id_tipo_cta  ) tipo_cuenta,
         cb.id_tipo_cta,
         decode(num_cuenta,'08400029068','901','43710149845','901','08400029076','901','08400029084','901','08400029092','901',         
                           '08400029122','901','08400029106','901','08400029114','901',
                           '08400030457','901','08400029386','901', cb.unidad_ejecutora ) unidad_ejecutora, 
         nombre_corto 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb, 
         sia_admin.RH_TC_UNI_EJECUTORAS ue   
          where 
            fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
            cb.unidad_ejecutora = ue.unidad_ejecutora and
            sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
              ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
              )sub) res 
             group by 
              tipoCuenta, unidad_ejecutora, nombre_corto 
            order by 
              unidad_ejecutora, tipoCuenta) 
          
            group by 
             unidad_ejecutora, nombre_corto
            order by 
             unidad_ejecutora
   </select>
   <select id="comisionesTPV">
select m.fecha_hora, m.unidad, m.unidad_ejecutora,m.monto, com.credito, com.debito from 
(select fecha_hora, unidad, unidad_ejecutora,
      sum(decode(valor,1,abs(monto)/0.018,0)) credito,
      sum(decode(valor,2,abs(monto)/0.013,0)) debito 
from (
    select 
        fecha_hora, c.monto, substr(trim(c.referencia),0,7) || ' - ' || ue.descripcion || '  ' || tpv.descripcion unidad,
        ue.unidad_ejecutora,
        case when c.referencia like '%COMISION TAR CRED%' then 1
             when c.referencia like '%COMISION TAR DEBIT%' then 2
        end valor 
    from 
        rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
    where 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
        id_clave_trans_recla  =324  and tpv.referencia_tpv = substr(trim(c.referencia),0,7) and
        tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                                from rf_tr_cuentas_bancarias c
                                where c.id_cuenta  in (:idCuentas)) and 
        ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
        ue.entidad = tpv.entidad and 
        ue.ambito = tpv.ambito 
      <!--   and 
        (ue.unidad_ejecutora,ue.entidad, ue.ambito) in 
        (select distinct c.unidad_ejecutora, entidad, ambito
         from rf_tr_cuentas_bancarias c
         where c.id_cuenta  in (:idCuentas))  -->
    )
 group by fecha_hora, unidad, unidad_ejecutora) com, 
    (select 
        fecha_hora, sum(c.monto) monto, substr(trim(c.referencia),0,7) || ' - ' || ue.descripcion || '  ' || tpv.descripcion unidad,
        ue.unidad_ejecutora
    from 
        rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
    where 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
        id_clave_trans_recla  = 634  and tpv.referencia_tpv = substr(trim(c.referencia),0,7) and
        tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                                from rf_tr_cuentas_bancarias c
                                where c.id_cuenta  in (:idCuentas)) and 
        ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
        ue.entidad = tpv.entidad and 
        ue.ambito = tpv.ambito 
     <!--    and 
        (ue.unidad_ejecutora,ue.entidad, ue.ambito) in 
        (select distinct c.unidad_ejecutora, entidad, ambito
         from rf_tr_cuentas_bancarias c
         where c.id_cuenta  in (:idCuentas)) -->
         group by fecha_hora,ue.unidad_ejecutora ,  substr(trim(c.referencia),0,7) || ' - ' || ue.descripcion || '  ' || tpv.descripcion
         ) m 
where com.FECHA_HORA = m.fecha_hora and
      com.unidad = m.unidad and
      com.unidad_ejecutora = m.unidad_ejecutora 
order by m.unidad, m.unidad_ejecutora,m.fecha_hora 
   </select>
    <select id="tasasRendimientoIF">
select fecha, sum(decode (plazo, 1, tasa, 0)) as plazo1, sum(decode (plazo, 7, tasa, 0)) as plazo7, 
              sum(decode (plazo, 14, tasa, 0)) as plazo14, sum(decode (plazo, 21, tasa, 0)) as plazo21, 
              sum(decode (plazo, 28, tasa, 0)) as plazo28 
  from (
    select tr.fecha, tr.id_banco, bcos.nombre_corto, trd.plazo, trd.tasa
    from rf_tr_tasas_rendimiento tr 
    inner join rf_tc_bancos_inversion bcos 
    on tr.id_banco = bcos.id_banco 
    inner join rf_tr_tasas_rend_detalle trd 
    on tr.id_rendimiento = trd.id_rendimiento
    where fecha >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha &lt;= to_date (':fechaFinal','yyyy-mm-dd') and 
          tr.id_banco in (:idBanco) and
          trd.plazo in (:plazos)
    order by fecha, plazo ) tasas
 group by fecha 
   </select>
    <select id="reserva">
select FECHA, MONTO/1000000 reserva,round(PORCENTAJE,1) otras_cuentas from RF_TR_FONDO_RESERVA 
where trunc(fecha) >= to_date (':fechaInicial','yyyy-mm-dd') AND trunc(fecha)  &lt;= to_date (':fechaFinal','yyyy-mm-dd') 
order by fecha 
   </select>
    <select id="tasasRendimiento">
select fecha, plazo, 
       sum(decode (id_banco, 6, tasa, 0)) as NAFIN, 
       sum(decode (id_banco, 7, tasa, 0)) as BMX, 
       sum(decode (id_banco, 35, tasa, 0)) as HSBC
  from (
    select tr.fecha, tr.id_banco, bcos.nombre_corto, trd.plazo, trd.tasa
    from rf_tr_tasas_rendimiento tr, rf_tc_bancos_inversion bcos, rf_tr_tasas_rend_detalle trd
    where 
      tr.id_banco = bcos.id_banco and 
      tr.id_rendimiento = trd.id_rendimiento and
      trunc(fecha) >= to_date(':fechaInicial','yyyy-mm-dd') and trunc(fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
      tr.id_banco in (6, 7, 35) and
      trd.plazo in (:plazo)
    order by plazo, fecha, id_banco
    ) tasas
 group by fecha, plazo
   </select>
    <select id="carteraInstFinCierre">
select tv.descripcion instrumento, dc.titulos_acciones, dc.importe, ci.plazo,
       ci.fecha inicia, ci.fecha+ci.plazo vence, ci.tasa, dc.rendimiento
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha &lt;= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha+ci.plazo > to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco)
   </select>
    <select id="importeCarteraInstFinCierre">
select 
  nvl(sum(dc.importe),0) importe 
from rf_tr_compras_inversion ci  
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha &lt;= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha+ci.plazo > to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco)
   </select>
     <select id="carteraCierreMes">
select tv.descripcion instrumento, dc.titulos_acciones, dc.importe, ci.plazo,
       ci.fecha inicia, ci.fecha+ci.plazo vence, ci.tasa, dc.rendimiento, bi.nombre_corto
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
inner join RF_TC_BANCOS_INVERSION bi on ctas.id_banco = bi.id_banco
where ci.fecha &lt;= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha+ci.plazo > to_date(':fechaFinal','yyyy-mm-dd') 
   </select>
    <select id="importeCarteraCierreMes">
select 
  sum(dc.importe) importe 
from rf_tr_compras_inversion ci  
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.fecha &lt;= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha+ci.plazo > to_date(':fechaFinal','yyyy-mm-dd') 
   </select> 
    <select id="compCarteraFechaInversion">   
select ci.fecha, dc.id_detalle_compra, tv.descripcion, 
       dc.titulos_acciones, dc.valor, dc.importe, ci.plazo, ci.vencimiento, ci.tasa
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc 
on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv 
on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas 
on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco) 
order by fecha, id_detalle_compra 
   </select> 
   <select id="invTipoInstrumento">   
select 
     tv.id_tipo_valores, tv.descripcion, count(*) numero, sum(dc.titulos_acciones) titulos, sum(dc.importe) importe 
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco) 
group by tv.id_tipo_valores, tv.descripcion      
order by tv.id_tipo_valores 
   </select>
   <select id="importeInvTipoInstrumento">   
  select sum(importe) importe from ( 
select 
      sum(dc.importe) importe 
from rf_tr_compras_inversion ci  
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco) 
group by tv.id_tipo_valores, tv.descripcion      
order by tv.id_tipo_valores) 
   </select>
   <select id="invTipoInstrumentoGlobal">   
select 
     tv.id_tipo_valores, tv.descripcion, count(*) numero, sum(dc.titulos_acciones) titulos, sum(dc.importe) importe 
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd')  
group by tv.id_tipo_valores, tv.descripcion      
order by tv.id_tipo_valores 
   </select>
   <select id="importeInvTipoInstrumentoGlobal">   
  select sum(importe) importe from ( 
select 
      sum(dc.importe) importe 
from rf_tr_compras_inversion ci  
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd')  
group by tv.id_tipo_valores, tv.descripcion      
order by tv.id_tipo_valores) 
   </select>
   <select id="rendimientosIF">   
select  coi.fecha, coi.PLAZO, coi.VENCIMIENTO vence, imp monto_invertido, rend rendimiento, coi.tasa porcentaje, 1 compras 
from RF_TC_BANCOS_INVERSION bi, RF_TR_CUENTAS_INVERSION ci, RF_TR_COMPRAS_INVERSION coi , 
(select id_compra_inversion, sum(dci.importe) imp, sum(dci.rendimiento) rend 
   from RF_TR_DETALLE_COMPRA dci 
   group by  dci.id_compra_inversion) dci 
where ci.id_cuenta_inversion=:idCuentaInversion and 
      ci.id_banco = bi.id_banco  and 
      coi.id_cuenta_inversion = ci.id_cuenta_inversion and 
      to_date(to_char(coi.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') >= to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(coi.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(':fechaFinal','yyyy-mm-dd') 
      and dci.id_compra_inversion = coi.id_compra_inversion 
union all 
select fecha, null plazo, vincimiento vence, importe monto_invertido, rendimiento, null porcentaje, 2 efectivo from rf_tr_efectivo_inversion 
where to_date(to_char(vincimiento,'yyyy-mm-dd'),'yyyy-mm-dd') >= to_date(':fechaInicial','yyyy-mm-dd') and 
     to_date(to_char(vincimiento,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(':fechaFinal','yyyy-mm-dd') 
     and id_cuenta_inversion=:idCuentaInversion
order by fecha 
   </select>
   <select id="comportamientoInversion">   
select fecha fecha_inversion, sum(x.dia_1) plazo1dia, sum(x.dias_7) plazo7dias, sum(x.dias_14) plazo14dias, 
sum(x.dias_21) plazo21dias, sum(x.dias_28) plazo28dias , 
sum(x.dia_1) + sum(x.dias_7) + sum(x.dias_14) +sum(x.dias_21) + sum(x.dias_28) total 
from (select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
             case when i.plazo > b.cons then d.importe else 0 end dia_1, 0 dias_7, 0 dias_14, 0 dias_21, 0 dias_28
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
           (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 6) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
      and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
      and i.plazo in (1,2,3,4,5,6)
      union all --plazo 7 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, case when i.plazo > b.cons then d.importe else 0 end dias_7, 0 dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 12) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo in (7,8,9,10,11,12)
      union all -- plazo 14 dias  
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, case when i.plazo > b.cons then d.importe else 0 end dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 20) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo in (13,14,15,16,17,18,19,20)
      union all --plazo 21 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, case when i.plazo > b.cons then d.importe else 0 end dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 27) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo in (21,22,23,24,25,26,27)
      union all -- plazo 28 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, 0 dias_21, case when i.plazo > b.cons then d.importe else 0 end dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 28) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo = 28 
      ) x 
group by x.fecha 
order by x.fecha
   </select>
   <select id="compInversionInstFinanciera">   
select fecha fecha_inversion, sum(x.dia_1) plazo1dia, sum(x.dias_7) plazo7dias, sum(x.dias_14) plazo14dias, 
sum(x.dias_21) plazo21dias, sum(x.dias_28) plazo28dias , 
sum(x.dia_1) + sum(x.dias_7) + sum(x.dias_14) +sum(x.dias_21) + sum(x.dias_28) total 
from (select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
             case when i.plazo > b.cons then d.importe else 0 end dia_1, 0 dias_7, 0 dias_14, 0 dias_21, 0 dias_28
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
           (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 6) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
      and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
      and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (1,2,3,4,5,6)
      union all --plazo 7 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, case when i.plazo > b.cons then d.importe else 0 end dias_7, 0 dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 12) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (7,8,9,10,11,12)
      union all -- plazo 14 dias  
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, case when i.plazo > b.cons then d.importe else 0 end dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 20) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (13,14,15,16,17,18,19,20)
      union all --plazo 21 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, case when i.plazo > b.cons then d.importe else 0 end dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 27) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (21,22,23,24,25,26,27)
      union all -- plazo 28 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, 0 dias_21, case when i.plazo > b.cons then d.importe else 0 end dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 28) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo = 28
      ) x 
group by x.fecha 
order by x.fecha
   </select>
    <select id="rensumenInversion">   
select replace(nombre,'Institucion de Banca Multiple','') nombre_corto, contrato_cuenta, coi.tasa, coi.fecha, vencimiento, 
 imp monto, rend, coi.plazo, ei.importe 
from RF_TC_BANCOS_INVERSION bi 
inner join RF_TR_CUENTAS_INVERSION ci on ci.id_banco = bi.id_banco  
inner join RF_TR_COMPRAS_INVERSION coi on coi.id_cuenta_inversion = ci.id_cuenta_inversion 
inner join ( 
  select id_compra_inversion, sum(dci.importe) imp, sum(dci.rendimiento) rend 
  from RF_TR_DETALLE_COMPRA dci 
  where id_compra_inversion = :idCompraInversion 
  group by id_compra_inversion 
) dci on dci.id_compra_inversion = coi.id_compra_inversion 
left join rf_tr_efectivo_inversion ei 
on coi.ID_COMPRA_INVERSION = ei.id_compras_inversion 
   </select>
   <select id="disponibilidadFinanciera">   
select sum(decode(orden,1,saldo_cierre, 0)) conIngresos, 
       sum(decode(orden,2,saldo_cierre, 0)) conEgresos, 
       sum(decode(orden,3,saldo_cierre, 0)) otrasCtas, 
       sum(decode(orden,4,saldo_cierre, 0)) vencimientoDia, 
       sum(decode(orden,5,saldo_cierre, 0)) inversiones, 
       sum(decode(orden,6,saldo_cierre, 0)) conclusion 
from (
      select saldo_cierre, decode(id_cuenta,680,1,524,2,679,6,951,1,950,2,1051,2,1055,2,1057,2,1059,2,1060,2) orden
      from RF_TR_SALDOS_reserva
      where id_cuenta in (680,524,679,951,950,1051,1055,1057,1059,1060) and 
            to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all 
      select sum(saldo_cierre), 3 orden
      from RF_TR_SALDOS_reserva sd, RF_TR_CUENTAS_BANCARIAS cb
      where sd.id_cuenta not in (680,524,679,951,950,1051,1055,1057,1059,1060) and 
            cb.id_cuenta = sd.id_cuenta and
            cb.id_tipo_programa in (6,7) and cb.id_tipo_cta !=8 and
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all
      select sum(total), 4 orden  
      from (
            select sum(d.importe+d.rendimiento) total
            from rf_tr_compras_inversion i, rf_tr_detalle_compra d, RF_TR_CUENTAS_INVERSION ci
            where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and
                  d.id_compra_inversion = i.id_compra_inversion
                  and ci.id_banco not in (35,7) and ci.id_cuenta_inversion = i.id_cuenta_inversion
            union
            select sum(e.importe+e.rendimiento) total
            from rf_tr_efectivo_inversion e, RF_TR_CUENTAS_INVERSION ci
            where to_char(e.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial'
                 and (select nvl(sum(d.importe+d.rendimiento),0)
                      from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                      where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial'
                            and d.id_compra_inversion = i.id_compra_inversion) > 0
                and ci.id_banco not in (7) and ci.id_cuenta_inversion = e.id_cuenta_inversion 
          )
      union all
      select sum(importe) importe, 5 orden 
      from ( 
            select a.importe+e.importe importe from (     
            select sum(importe) importe, r.id_compra_inversion  
            from (
                  select i.fecha, i.vencimiento, d.importe, d.rendimiento,d.importe+d.rendimiento total, i.* 
                  from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                  where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' 
                        and to_char(i.vencimiento,'yyyy-mm-dd') > ':fechaInicial' 
                        and d.id_compra_inversion = i.id_compra_inversion 
                 ) r
           group by id_compra_inversion) a, rf_tr_efectivo_inversion e 
           where e.id_compras_inversion = a.id_compra_inversion
           )
    )
   </select>
   <select id="totalDisponbilidadFinanciera">
select decode(sum(saldo_cierre),null,0,sum(saldo_cierre)) totalDisponibilidad 
   from (
      select saldo_cierre, decode(id_cuenta,680,1,679,6,524,2,951,1,950,2,1051,2,1055,2,1057,2,1059,2,1060,2) orden
      from RF_TR_SALDOS_reserva
      where id_cuenta in (680,679,524,951,950,1051,1055,1057,1059,1060) and 
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all 
      select sum(saldo_cierre), 3 orden
      from RF_TR_SALDOS_reserva sd, RF_TR_CUENTAS_BANCARIAS cb
      where sd.id_cuenta not in (680,524,679,951,950,1051,1055,1057,1059,1060) and 
            cb.id_cuenta = sd.id_cuenta and
            cb.id_tipo_programa in (6,7) and cb.id_tipo_cta !=8 and
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all
      select sum(total), 4 orden  
      from (
            select sum(d.importe+d.rendimiento) total
            from rf_tr_compras_inversion i, rf_tr_detalle_compra d, RF_TR_CUENTAS_INVERSION ci
            where to_char(i.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and
                  d.id_compra_inversion = i.id_compra_inversion
                  and ci.id_banco not in (35,7) and ci.id_cuenta_inversion = i.id_cuenta_inversion
            union
            select sum(e.importe+e.rendimiento) total
            from rf_tr_efectivo_inversion e, RF_TR_CUENTAS_INVERSION ci
            where to_char(e.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial'
                  and (select nvl(sum(d.importe+d.rendimiento),0)
                      from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                      where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial'
                            and d.id_compra_inversion = i.id_compra_inversion) > 0
                  and ci.id_banco not in (7) and ci.id_cuenta_inversion = e.id_cuenta_inversion 
          )
      union all
      select sum(importe) importe, 5 orden 
      from ( 
            select sum(importe) importe  
            from (
                  select i.fecha, i.vencimiento, d.importe, d.rendimiento,d.importe+d.rendimiento total, i.* 
                  from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                  where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') > ':fechaInicial' and
                        d.id_compra_inversion = i.id_compra_inversion 
                  )
        
          )
    )
  </select>
   <select id="totalDisponbilidadFinancieraSV">
select decode(sum(saldo_cierre),null,0,sum(saldo_cierre)) totalDisponibilidad 
   from (
      select saldo_cierre, decode(id_cuenta,680,1,524,2,951,1,950,2,1051,2,1055,2,1057,2,1059,2,1060,2) orden
      from RF_TR_SALDOS_reserva
      where id_cuenta in (680,524,951,950,1051,1055,1057,1059,1060) and 
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all 
      select sum(saldo_cierre), 3 orden
      from RF_TR_SALDOS_reserva sd, RF_TR_CUENTAS_BANCARIAS cb
      where sd.id_cuenta not in (680,524,951,950,1051,1055,1057,1059,1060) and 
            cb.id_cuenta = sd.id_cuenta and
            cb.id_tipo_programa in (6,7) and cb.id_tipo_cta !=8 and
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all
      select sum(importe) importe, 5 orden 
      from ( 
            select a.importe+e.importe importe from (     
            select sum(importe) importe, r.id_compra_inversion  
            from (
                  select i.fecha, i.vencimiento, d.importe, d.rendimiento,d.importe+d.rendimiento total, i.* 
                  from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                  where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' 
                        and to_char(i.vencimiento,'yyyy-mm-dd') > ':fechaInicial' 
                        and d.id_compra_inversion = i.id_compra_inversion 
                 ) r
           group by id_compra_inversion) a, rf_tr_efectivo_inversion e 
           where e.id_compras_inversion = a.id_compra_inversion
          )
    )
  </select>
  <select id="cotizacionTasas">
select x.id_banco, replace(b.nombre,'Institucion de Banca Multiple','') b.nombre_corto, max(x.dia_1) dia_1, max(x.dias_7) dias_7, max(x.dias_14) dias_14, 
       max(x.dias_21) dias_21, max(x.dias_28) dias_28 
from (select r.id_banco, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),1,rd.tasa,0) dia_1, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),7,rd.tasa,0) dias_7, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),14,rd.tasa,0) dias_14, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),21,rd.tasa,0) dias_21, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),28,rd.tasa,0) dias_28 
      from rf_tr_tasas_rend_detalle rd, rf_tr_tasas_rendimiento r 
      where r.id_rendimiento = rd.id_rendimiento 
      and to_char(r.fecha,'yyyy-mm-dd') between ':fechaInicial' and ':fechaInicial' 
     ) x, rf_tc_bancos_inversion b 
where b.id_banco = x.id_banco 
group by x.id_banco, b.nombre_corto 
order by x.id_banco 
  </select>
  <select id="dispCotTasas">
select decode(sum(total),null,0,sum(total)) total from ( 
select sum(d.importe+d.rendimiento) total  
from rf_tr_compras_inversion i, rf_tr_detalle_compra d  
where to_char(i.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and   
      d.id_compra_inversion = i.id_compra_inversion 
union 
select sum(e.importe+e.rendimiento) total  
from rf_tr_efectivo_inversion e 
where to_char(e.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial' 
)  
  </select>
  <select id="venDispCotTasas">
select decode(sum(total),null,0,sum(total)) total, orden from ( 
select i.id_cuenta_inversion , sum(d.IMPORTE + d.RENDIMIENTO) total, decode(nombre_corto,'NACIONAL FINANCIERA',1,'HSBC',2,'BANAMEX',3,nombre_corto) orden 
from rf_tr_compras_inversion i, rf_tr_detalle_compra d, RF_TR_CUENTAS_INVERSION inv, RF_TC_BANCOS_INVERSION b 
where to_char(i.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and    
      d.id_compra_inversion = i.id_compra_inversion and
      i.id_cuenta_inversion = inv.id_cuenta_inversion and
      inv.id_banco = b.id_banco
group by i.id_cuenta_inversion, nombre_corto 
union 
select e.id_cuenta_inversion, sum(e.importe + e.rendimiento) total, decode(nombre_corto,'NACIONAL FINANCIERA',1,'HSBC',2,'BANAMEX',3,nombre_corto) orden 
from rf_tr_efectivo_inversion e, RF_TR_CUENTAS_INVERSION inv, RF_TC_BANCOS_INVERSION b 
where to_char(e.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial' 
and  e.id_cuenta_inversion = inv.id_cuenta_inversion and 
      inv.id_banco = b.id_banco
group by e.id_cuenta_inversion, nombre_corto 
union 
select 0 id_cuenta_inversion, sum(saldo_cierre) total , 4 orden 
from RF_TR_SALDOS_RESERVA  
where id_cuenta in (950,524,1051,1055,1057,1059,1060) 
and to_char(fecha,'yyyy-mm-dd') = ':fechaInicial' 
) 
group by  orden 
order by orden 
  </select>
</submodulo>  
  <submodulo id="reportesXLS">
<select id="ingresosVentaAdministrativos">
select cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE,
       decode(to_char(fecha_hora,'dd/mm/yyyy'),null,' ',to_char(fecha_hora,'dd/mm/yyyy')) FECHA,
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) DESCRIPCION,
       nvl(decode(id_tipo_trans,'D',monto,0),0) cargo, nvl(decode(id_tipo_trans,'C',monto,0),0) abono, 
       decode(mov.referencia,null,' ',mov.referencia) referencia  
from RF_TR_MOVIMIENTOS_CUENTA mov, RF_TR_CUENTAS_BANCARIAS cb,  RF_TR_REFENCIAS_IXV r   
where mov.id_cuenta = cb.id_cuenta and  mov.id_cuenta = r.id_cuenta and  substr(mov.referencia,1,10) = r.referencia and   
      (mov.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  mov.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1) and  
       mov.id_cuenta in (:idCuentas)  
</select>
<select id="referenciasInvalidas">
select cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE,
       decode(to_char(fecha_hora,'dd/mm/yyyy'),null,' ',to_char(fecha_hora,'dd/mm/yyyy')) FECHA,
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) DESCRIPCION,
       nvl(decode(id_tipo_trans,'C',monto,0),0) abono, 
       decode(mov.referencia,null,' ',mov.referencia) referencia  
from RF_TR_MOVIMIENTOS_CUENTA mov, RF_TR_CUENTAS_BANCARIAS cb 
where mov.id_cuenta = cb.id_cuenta and  mov.id_tipo_trans = 'C' and 
      (mov.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  mov.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1) and 
      mov.id_cuenta in (:idCuentas) and substr(mov.referencia,1,10) not in (select referencia from RF_TR_REFENCIAS_IXV)
</select>
<select id="ChqsSalvoBuenCobro">
select  cuenta, nombre, descripcion, to_char(fecha_hora,'dd/mm/yyyy') fecha, 
        monto, 
        trunc(monto/(last_day(trunc(fecha_hora))-to_date('01/'||to_char(fecha_hora,'mm/yyyy'),'dd/mm/yyyy')+1),2) promedio, Dias 
from ( 
select 
 cb.num_cuenta cuenta, 
 decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre, 
 tm.descripcion descripcion, 
 tm.fecha_hora fecha_hora, 
 tm.monto monto, 
 tsr.obten_siguiente_dia_habil(tm.descripcion, trunc(tm.fecha_hora))as Dias 
from 
 (select 
    id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
    rf_tr_movimientos_cuenta 
  where 
    (id_cuenta in (:idCuentas)) and 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and 
    id_clave_trans_recla  = 2 
  ) tm 
inner join 
  rf_tr_cuentas_bancarias cb 
on 
  tm.id_cuenta = cb.id_cuenta 
inner join 
  RF_TC_TIPO_CUENTA tc 
on 
  cb.id_tipo_cta = tc.id_tipo_cta 
order by 
  tm.fecha_hora) 
   </select>
<select id="RendimientosGlobalMultiva">
select 
  descripcion UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS  
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa,unidad_ejecutora 
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_cuenta IN (:idCuentas)
      AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta !=8 and id_tipo_programa = :idTipoPrograma   
    ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
       AND (mvc.id_clave_trans_recla = 1201) 
     group by mvc.id_cuenta) 
  mc on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
   AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) ren,  sia_admin.rh_tc_uni_ejecutoras ue_rh 
  where 
      ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   
   <select id="RendimientosGlobal">
select 
  descripcion UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS 
from 
  (select 
    nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora 
  from 
    (select 
      ambito, entidad, nombre_cta, id_cuenta, num_cuenta, decode(num_cuenta,'4042105379','106','4042105361','113','4042105353','108','4025861329','101','4042105346','105','4040418089','101','4042105338','107','4042105312','101','4042105304','101','4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018','109','4024426090','109','4040444184','109','4039477765','109','4024114555','109',unidad_ejecutora) unidad_ejecutora 
    from 
      rf_tr_cuentas_bancarias 
    where 
      id_tipo_programa != 
                          (select 
                            decode(programa,6,1,6) res 
                          from 
                            (select  
                              distinct(id_tipo_programa) programa 
                            from 
                              RF_TR_CUENTAS_BANCARIAS 
                            where 
                              (id_cuenta in(:idCuentas)))) and 
                              ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR (fecha_fin_operacion IS NULL) or 
                               (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL))))
                    and id_tipo_cta !=8 and id_tipo_programa in (1,6) 
                    -----id_tipo_programa !=7 and id_tipo_programa !=8
                    ) cb 
    left join 
      (select 
        mvc.id_cuenta, sum(mvc.monto) as Rendimientos 
      FROM 
        rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
      where 
        mvc.id_cuenta = ctb.id_cuenta and 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and 
        (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' 
      group by 
        mvc.id_cuenta) mc 
      on 
        cb.id_cuenta = mc.id_cuenta 
      inner join 
        rf_tc_unidades_ejecutoras_tece ue 
      on 
        cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito 
      group by 
        cb.unidad_ejecutora) ren 
      inner join 
        sia_admin.rh_tc_uni_ejecutoras ue_rh 
      on 
        ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
     <select id="RendimientoGlobalSant">
select 
  descripcion UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS 
from 
  (select 
    nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora 
  from 
    (select 
      ambito, entidad, nombre_cta, id_cuenta, num_cuenta, decode(num_cuenta,'4042105379','106','4042105361','113','4042105353','108','4025861329','101','4042105346','105','4040418089','101','4042105338','107','4042105312','101','4042105304','101','4042547786','101','4042547844','101','4025861311','101','4024426579','101','4042986018','109','4024426090','109','4040444184','109','4039477765','109','4024114555','109',unidad_ejecutora) unidad_ejecutora 
    from 
      rf_tr_cuentas_bancarias 
    where 
      id_tipo_programa != 
                          (select 
                            decode(programa,6,1,6) res 
                          from 
                            (select  
                              distinct(id_tipo_programa) programa 
                            from 
                              RF_TR_CUENTAS_BANCARIAS 
                            where 
                              (id_cuenta in(:idCuentas)))) and 
                              ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR (fecha_fin_operacion IS NULL) or 
                               (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL))))
                    and id_tipo_cta !=8 and id_tipo_programa = 10) cb 
    left join 
      (select 
        mvc.id_cuenta, sum(mvc.monto) as Rendimientos 
      FROM 
        rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
      where 
        mvc.id_cuenta = ctb.id_cuenta and 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and 
        (mvc.id_clave_trans_recla = 47 or mvc.id_clave_trans_recla = 69 or mvc.id_clave_trans_recla = 177) and mvc.descripcion like '%INT%' 
      group by 
        mvc.id_cuenta) mc 
      on 
        cb.id_cuenta = mc.id_cuenta 
      inner join 
        rf_tc_unidades_ejecutoras_tece ue 
      on 
        cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito 
      group by 
        cb.unidad_ejecutora) ren 
      inner join 
        sia_admin.rh_tc_uni_ejecutoras ue_rh 
      on 
        ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id ="RendimientoGlobalGral">
select 
  descripcion UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS  
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       ambito, entidad, id_cuenta, id_tipo_programa, unidad_ejecutora
     from 
      rf_tr_cuentas_bancarias 
     where 
          id_cuenta IN (:idCuentas) 
    AND ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
    and id_tipo_cta != 8 and id_tipo_programa in (:idTipoPrograma) ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
     AND(mvc.id_clave_trans_recla = 47 )
     group by mvc.id_cuenta) mc 
   on cb.id_cuenta = mc.id_cuenta 
   inner join 
     rf_tc_unidades_ejecutoras_tece ue
   ON cb.unidad_ejecutora = ue.unidad_ejecutora 
       AND cb.entidad = ue.entidad 
        AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) 
ren 
inner join 
 sia_admin.rh_tc_uni_ejecutoras ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id ="RendimientosGlobalBMX">
   select 
  upper(decode(descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','ORGANO INTERNO DE CONTROL','Contraloria Interna',descripcion)) UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS, decode(ren.unidad_ejecutora,'901','0901','902','0902',ren.unidad_ejecutora) unidad_ejecutora  
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       id_cuenta, id_tipo_programa, 
       decode(ambito, '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                      '43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                      '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                      '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,ambito) ambito,
       decode(num_cuenta,'43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                         '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                         '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                         '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,entidad) entidad,
       decode(num_cuenta,'43710154369','902','08400029068','901','43710149845','901','08400029076','901',
                         '08400029084','901','08400029092','901','08400030457','901',
                         '08400029122','902','08400029114','902','08400029106','902','08400029386','902',
                         '43710154377','902','43710154431','902','43710154547','902','43710154725','902',  
                         '43710154741','902','43710154857','902','43710155063','902','43710155071','902',  
                         '43710155098','902','43710155101','902',unidad_ejecutora) unidad_ejecutora
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    7,    1,    7) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN (:idCuentas))
        ) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
   and id_tipo_cta !=8 and id_tipo_programa in (7,1)
   ----- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=9 and id_tipo_programa !=10  
   ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb, RF_TC_CLAVES_TRANSACCION ct
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
      AND mvc.id_clave_trans_recla = ct.id_clave_trans and
          (ct.id_clave_tb = 55)   and mvc.id_cuenta in (:idCuentas)
     group by mvc.id_cuenta) mc
   on cb.id_cuenta = mc.id_cuenta 
 inner join 
     (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue 
  ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad 
 ------  AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) ren 
inner join 
 (select unidad_ejecutora, descripcion
                            from sia_admin.rh_tc_uni_ejecutoras ut
                            union all
                            select unidad_ejecutora,  descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
order by unidad_ejecutora
   </select>
   <select id="RendimientosGlobalBBVA">
select 
  descripcion UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS 
from 
  (select 
    nvl(sum(mc.Rendimientos),0) as totalRendimientos, count(cb.unidad_ejecutora) as totalCuentas, cb.unidad_ejecutora 
  from 
    (select 
      ambito, entidad, nombre_cta, id_cuenta, num_cuenta, 
      unidad_ejecutora 
    from 
      rf_tr_cuentas_bancarias 
    where 
      id_tipo_programa != 
                          (select 
                            decode(programa,6,1,6) res 
                          from 
                            (select  
                              distinct(id_tipo_programa) programa 
                            from 
                              RF_TR_CUENTAS_BANCARIAS 
                            where 
                              (id_cuenta in (:idCuentas)))) and 
                              ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR (fecha_fin_operacion IS NULL) or 
                               (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL))))
                    and id_tipo_cta !=8 and id_tipo_programa = 8 
                    ---- id_tipo_programa !=7 and id_tipo_programa !=6 and id_tipo_programa !=10 and id_tipo_programa !=9
                    ) cb 
    left join 
      (select 
        mvc.id_cuenta, sum(mvc.monto) as Rendimientos 
      FROM 
        rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb 
      where 
        mvc.id_cuenta = ctb.id_cuenta and 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and 
        mvc.id_clave_trans_recla = 1162  
      group by 
        mvc.id_cuenta) mc 
      on 
        cb.id_cuenta = mc.id_cuenta 
      inner join 
        rf_tc_unidades_ejecutoras_tece ue 
      on 
        cb.unidad_ejecutora = ue.unidad_ejecutora and cb.entidad = ue.entidad and cb.ambito = ue.ambito 
      group by 
        cb.unidad_ejecutora) ren 
      inner join 
        sia_admin.rh_tc_uni_ejecutoras ue_rh 
      on 
        ren.unidad_ejecutora = ue_rh.unidad_ejecutora
   </select>
   <select id="RendimientosGlobalEsp">
select 
  upper(decode(descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','ORGANO INTERNO DE CONTROL','Contraloria Interna',descripcion)) UNIDAD_ADMINISTRATIVA, ren.totalcuentas CUENTAS, ren.totalrendimientos RENDIMIENTOS, decode(ren.unidad_ejecutora,'901','0901','902','0902',ren.unidad_ejecutora) unidad_ejecutora  
from 
  (select 
    nvl(SUM(mc.rendimientos),0) AS totalrendimientos, COUNT(cb.unidad_ejecutora) AS totalcuentas, cb.unidad_ejecutora 
   from 
    (select 
       id_cuenta, id_tipo_programa, ambito, entidad, unidad_ejecutora
     from 
      rf_tr_cuentas_bancarias 
     where 
      id_tipo_programa != 
      (select 
         decode(programa,    7,    1,    7) res 
       from 
        (select DISTINCT(id_tipo_programa) programa 
         from rf_tr_cuentas_bancarias 
         where 
            (id_cuenta IN (:idCuentas))
        ) 
      )
    AND((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd')) OR fecha_fin_operacion IS NULL) OR 
        (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR fecha_fin_operacion IS NULL)))
   and id_tipo_cta !=8 and id_tipo_programa =9 
   ----- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=10 
   ) cb 
  left join 
    (select 
       mvc.id_cuenta, SUM(mvc.monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta mvc, rf_tr_cuentas_bancarias ctb, RF_TC_CLAVES_TRANSACCION ct
     where 
      mvc.id_cuenta = ctb.id_cuenta AND
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
      AND mvc.id_clave_trans_recla = ct.id_clave_trans and
          (ct.id_clave_tb = 55)   and mvc.id_cuenta in (:idCuentas)
     group by mvc.id_cuenta) mc
   on cb.id_cuenta = mc.id_cuenta 
 inner join 
     (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue 
  ON cb.unidad_ejecutora = ue.unidad_ejecutora 
   AND cb.entidad = ue.entidad ------  AND cb.ambito = ue.ambito 
   group by 
    cb.unidad_ejecutora) ren 
inner join 
 (select unidad_ejecutora, descripcion
                            from sia_admin.rh_tc_uni_ejecutoras ut
                            union all
                            select unidad_ejecutora,  descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue_rh 
on ren.unidad_ejecutora = ue_rh.unidad_ejecutora 
order by unidad_ejecutora
   </select>
   <select id="RendimientosTodosProgramas">
SELECT 
  GRUPO, UNIDAD, SUBTOTAL, nombre_cta UNIDAD_ADMINISTRATIVA , num_cuenta CUENTA, RENDIMIENTOS, ue.descripcion DIRECCION           
from 
  (select 
    cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,'91','1',cb.entidad) || cb.ambito grupo, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
  FROM 
    (SELECT 
      nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    FROM 
      rf_tr_cuentas_bancarias 
    WHERE 
      id_tipo_programa != 
                          (select 
                            decode(programa,6,1,6) res 
                          from 
                            (select 
                              distinct(id_tipo_programa) programa 
                            from 
                              RF_TR_CUENTAS_BANCARIAS 
                            where 
                              (id_cuenta in (:idCuentas)))) and 
                              ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or fecha_fin_operacion is null ) or 
                               (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null ) ) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                               and id_tipo_cta !=8 and id_tipo_programa in (6,1) 
                               ------ id_tipo_programa !=7 and id_tipo_programa !=8
                               ) cb 
LEFT JOIN 
  (SELECT 
    id_cuenta, SUM(monto) AS rendimientos 
  FROM 
    rf_tr_movimientos_cuenta 
  WHERE 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1  and
    (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' 
  GROUP BY id_cuenta) mc 
ON 
  cb.id_cuenta = mc.id_cuenta) r 
INNER JOIN 
  rf_tc_unidades_ejecutoras_tece ue 
ON 
  r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
ORDER BY 
  grupo, num_cuenta
   </select>
    <select id="RendimientosSantander">
SELECT 
  GRUPO, UNIDAD, SUBTOTAL, nombre_cta UNIDAD_ADMINISTRATIVA , num_cuenta CUENTA, RENDIMIENTOS, ue.descripcion DIRECCION           
from 
  (select 
    cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, cb.unidad_ejecutora, cb.entidad, cb.ambito, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END || decode(cb.entidad || cb.ambito,'91','1',cb.entidad) || cb.ambito grupo, CASE cb.unidad_ejecutora WHEN '102' THEN '101' WHEN '109' THEN case when cb.entidad = 9 then '101' when cb.num_cuenta = '4042105304' then '101' when cb.num_cuenta = '4042105312' then '101' when cb.num_cuenta = '4042105338' then '107' when cb.num_cuenta = '4042105346' then '105' when cb.num_cuenta = '4042105353' then '108' when cb.num_cuenta = '4042105361' then '113' when cb.num_cuenta = '4042105379' then '106' else cb.unidad_ejecutora end when '108' then case when cb.num_cuenta = '4042986018' then '109' when cb.num_cuenta = '4024114555' then '109' else cb.unidad_ejecutora end ELSE cb.unidad_ejecutora END unidad, case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
  FROM 
    (SELECT 
      nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    FROM 
      rf_tr_cuentas_bancarias 
    WHERE 
      id_tipo_programa != 
                          (select 
                            decode(programa,6,1,6) res 
                          from 
                            (select 
                              distinct(id_tipo_programa) programa 
                            from 
                              RF_TR_CUENTAS_BANCARIAS 
                            where 
                              (id_cuenta in (:idCuentas)))) and 
                              ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or fecha_fin_operacion is null ) or 
                               (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null ) ) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                               and id_tipo_cta !=8 and id_tipo_programa = 10) cb 
LEFT JOIN 
  (SELECT 
    id_cuenta, SUM(monto) AS rendimientos 
  FROM 
    rf_tr_movimientos_cuenta 
  WHERE 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1  and
    (id_clave_trans_recla = 47 OR id_clave_trans_recla = 69 OR id_clave_trans_recla = 177) AND descripcion LIKE '%INT%' 
  GROUP BY id_cuenta) mc 
ON 
  cb.id_cuenta = mc.id_cuenta) r 
INNER JOIN 
  rf_tc_unidades_ejecutoras_tece ue 
ON 
  r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
ORDER BY 
  grupo, num_cuenta
   </select>
    <select id="RendimientoDetalleMultiva">
select 
   GRUPO, UNIDAD, SUBTOTAL, nombre_cta UNIDAD_ADMINISTRATIVA , num_cuenta CUENTA, RENDIMIENTOS, ue.descripcion DIRECCION  
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, 
   cb.unidad_ejecutora  ||  cb.entidad || cb.ambito grupo,
   cb.unidad_ejecutora unidad,
   case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, 
     unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
       (id_cuenta in (:idCuentas)) and 
       ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
         fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
          and id_tipo_cta !=8 and id_tipo_programa in (:idTipoPrograma) ) cb
    left join
    (select 
       id_cuenta,  SUM(monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta 
     where
       fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
        AND (id_clave_trans_recla = 1201)
     group by 
       id_cuenta) mc 
    on 
      cb.id_cuenta = mc.id_cuenta ) r,   rf_tc_unidades_ejecutoras_tece ue 
    where   
      r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
    ORDER BY 
      grupo, num_cuenta
   </select>
   
   
   <select id="RendimientoDetalleGral">
select 
   GRUPO, UNIDAD, SUBTOTAL, nombre_cta UNIDAD_ADMINISTRATIVA , num_cuenta CUENTA, RENDIMIENTOS, ue.descripcion DIRECCION 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora, cb.entidad, cb.ambito, 
   cb.unidad_ejecutora  ||  cb.entidad || cb.ambito grupo,
   cb.unidad_ejecutora unidad,
   case when cb.unidad_ejecutora &lt; '121' then 0 when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, 
     unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
       (id_cuenta in (:idCuentas)) and 
       ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
         fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
         fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
          and id_tipo_cta !=8 and id_tipo_programa in (:idTipoPrograma) ) cb
    left join
    (select 
       id_cuenta,  SUM(monto) AS rendimientos 
     from 
       rf_tr_movimientos_cuenta 
     where
       fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
       AND (id_clave_trans_recla = 47) 
     group by 
       id_cuenta) mc 
    on 
      cb.id_cuenta = mc.id_cuenta ) r,   rf_tc_unidades_ejecutoras_tece ue 
    where   
      r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
    ORDER BY 
      grupo, num_cuenta
   </select>
   <select id="RendimientosTodosProgramasBMX">
select 
 decode (r.unidad,'901','0901','902','0902',r.unidad) || decode(r.entidad || r.ambito,    '91',    '1',    r.entidad) || r.ambito GRUPO,
 UNIDAD, case when unidad &lt; '121' then 0 
              when unidad in ('130','901','902') then 0 
              else 1 
         end SUBTOTAL, 
 nombre_cta UNIDAD_ADMINISTRATIVA, num_cuenta CUENTA, RENDIMIENTOS, decode(ue.descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','Organo Interno de Control','Contraloria Interna',ue.descripcion) DIRECCION 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos,  cb.unidad_ejecutora,  
   decode(cb.ambito, '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                     '43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                     '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                     '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,cb.ambito) ambito,
   decode(num_cuenta,'43710154377',1,'43710155101',1,'43710155098',1,'43710155071',1,'43710155063',1,'43710154857',1,'43710154741',1,
                     '43710154725',1,'43710154547',1,'43710154431',1,'08400029386',1,
                     '08400029068',1,'43710149845',1,'08400029076',1,'08400029084',1,'08400029092',1,'08400030457',1,
                     '08400029106',1,'08400029114',1,'08400029122',1,'43710154369',1,cb.entidad) entidad,
   CASE cb.unidad_ejecutora  
                             when '108' then case when cb.num_cuenta = '43710154369' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '109' then case when cb.num_cuenta in ('08400029068','43710149845','08400029076','08400029084','08400029092','08400030457') then '901'
                                                  when cb.num_cuenta in ('08400029122','08400029114','08400029106','08400029386')  then '902' 
                                                                     else  cb.unidad_ejecutora end 
                             when '121' then case when cb.num_cuenta = '43710154377' then '902'
                                                                    else cb.unidad_ejecutora end 
                             when '122' then case when cb.num_cuenta = '43710154431' then '902'
                                                                    else cb.unidad_ejecutora end                                   
                             when '123' then case when cb.num_cuenta = '43710154547' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '124' then case when cb.num_cuenta = '43710154725' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '125' then case when cb.num_cuenta = '43710154741' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '126' then case when cb.num_cuenta = '43710154857' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '127' then case when cb.num_cuenta = '43710155063' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '128' then case when cb.num_cuenta = '43710155071' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '129' then case when cb.num_cuenta = '43710155098' then '902'
                                                                    else cb.unidad_ejecutora end
                             when '130' then case when cb.num_cuenta = '43710155101' then '902'
                                                                    else cb.unidad_ejecutora end
   ELSE
        cb.unidad_ejecutora END unidad
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,7,1,7) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)
                             ))) 
                             
                             and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa in (7,1) 
                              ----- id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=9 and id_tipo_programa !=10 
                              ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta m, RF_TC_CLAVES_TRANSACCION ct 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND m.id_clave_trans_recla = ct.id_clave_trans and
                             (ct.id_clave_tb = 55)   and id_cuenta in (:idCuentas)
                           group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r,
                            (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue
                          where 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad) ----- AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta
   </select>
   <select id="RendimientosTodosProgramasEsp">
select 
 decode (r.unidad,'901','0901','902','0902',r.unidad) || decode(r.entidad || r.ambito,    '91',    '1',    r.entidad) || r.ambito GRUPO,
 UNIDAD, case when unidad &lt; '121' then 0 
              when unidad in ('130','901','902') then 0 
              else 1 
         end SUBTOTAL, 
 nombre_cta UNIDAD_ADMINISTRATIVA, num_cuenta CUENTA, RENDIMIENTOS, decode(ue.descripcion,'Oficina del C. Presidente','Junta de Gobierno y Presidencia','Organo Interno de Control','Contraloria Interna',ue.descripcion) DIRECCION 
from 
 (select 
   cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, cb.unidad_ejecutora, cb.ambito, cb.entidad, cb.unidad_ejecutora unidad
   from 
   (select 
     nombre_cta, num_cuenta, id_cuenta, unidad_ejecutora, entidad, ambito, id_tipo_programa 
    from 
     rf_tr_cuentas_bancarias 
    where 
     id_tipo_programa != (select 
                           decode(programa,7,1,7) res 
                          from 
                           (select distinct(id_tipo_programa) programa 
                            from 
                             RF_TR_CUENTAS_BANCARIAS 
                            where 
                             (id_cuenta in (:idCuentas)))) 
                             and ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or 
                                                          fecha_fin_operacion is null ) or (fecha_operacion  &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null ) ) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or 
                                                          fecha_fin_operacion is null)) or (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                              and id_tipo_cta !=8 and id_tipo_programa = 9 
                              -----id_tipo_programa !=6 and id_tipo_programa !=8 and id_tipo_programa !=10 
                              ) cb
                          left join
                           (select 
                             id_cuenta,  SUM(monto) AS rendimientos 
                            from 
                             rf_tr_movimientos_cuenta m, RF_TC_CLAVES_TRANSACCION ct 
                            where
                             fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
                             AND m.id_clave_trans_recla = ct.id_clave_trans and
                             (ct.id_clave_tb = 55)   and id_cuenta in (:idCuentas)
                           group by 
                             id_cuenta) mc 
                          on 
                           cb.id_cuenta = mc.id_cuenta ) r,
                            (select unidad_ejecutora, entidad, ambito, descripcion
                            from rf_tc_unidades_ejecutoras_tece ut
                            union all
                            select unidad_ejecutora, entidad, ambito, descripcion
                            from RF_TC_CLASIFICA_UNIDADES) ue
                          where 
                           r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad) ----- AND r.ambito = ue.ambito 
                          ORDER BY 
                           grupo, num_cuenta
   </select>
   <select id="RendimientosTodosProgramasBBVA">
SELECT 
  GRUPO, UNIDAD, SUBTOTAL, nombre_cta UNIDAD_ADMINISTRATIVA , num_cuenta CUENTA, RENDIMIENTOS, ue.descripcion DIRECCION           
from 
  (select 
    cb.nombre_cta, cb.num_cuenta, nvl(mc.rendimientos,0) rendimientos, cb.unidad_ejecutora, cb.entidad, cb.ambito,
    cb.unidad_ejecutora || decode(cb.entidad || cb.ambito,'91','1',cb.entidad) || cb.ambito grupo,
    cb.unidad_ejecutora unidad,
    case when cb.unidad_ejecutora &lt; '121' then 0
         when cb.unidad_ejecutora = '130' then 0 else 1 end subtotal 
  FROM 
    (SELECT 
      nombre_cta, num_cuenta, id_cuenta,
      case unidad_ejecutora when '100' then '109' else unidad_ejecutora end unidad_ejecutora, entidad, ambito, id_tipo_programa 
    FROM 
      rf_tr_cuentas_bancarias 
    WHERE 
      id_tipo_programa != 
                          (select 
                            decode(programa,6,1,6) res 
                          from 
                            (select 
                              distinct(id_tipo_programa) programa 
                            from 
                              RF_TR_CUENTAS_BANCARIAS 
                            where 
                              (id_cuenta in (:idCuentas)))) and 
                              ((fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd')) or fecha_fin_operacion is null ) or 
                               (fecha_operacion &lt;= to_date(':fechaInicial','yyyy-mm-dd') and (fecha_fin_operacion >= to_date(':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null ) ) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion >= to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)) or 
                               (fecha_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and (fecha_fin_operacion BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') or fecha_fin_operacion is null)))
                               and id_tipo_cta !=8 and id_tipo_programa = 8 
                               ----- id_tipo_programa !=7 and id_tipo_programa !=6 and id_tipo_programa !=10 and id_tipo_programa !=9 
                               ) cb 
LEFT JOIN 
  (SELECT 
    id_cuenta, SUM(monto) AS rendimientos 
  FROM 
    rf_tr_movimientos_cuenta 
  WHERE 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1  and
    id_clave_trans_recla = 1162
  GROUP BY id_cuenta) mc 
ON 
  cb.id_cuenta = mc.id_cuenta) r 
INNER JOIN 
  rf_tc_unidades_ejecutoras_tece ue 
ON 
  r.unidad = ue.unidad_ejecutora AND (r.entidad = ue.entidad)  AND r.ambito = ue.ambito 
ORDER BY 
  grupo, num_cuenta
   </select>
   <select id="ComIndebidasChq">
select 
  cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, to_char(mc.fecha_hora,'dd/mm/yyyy') FECHA, mc.clave_trans_recla TRANSACCION, mc.descripcion DESCRIPCION, mc.monto MONTO 
from 
  (select 
      id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla 
   from 
      RF_TR_MOVIMIENTOS_CUENTA 
   where 
      (id_cuenta in (:idCuentas)) and 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
      ((id_clave_trans_recla = 37 or id_clave_trans_recla = 31) and (descripcion LIKE '%CAJA%' ))) mc 
inner join 
  RF_TR_CUENTAS_BANCARIAS cb 
on 
  cb.id_cuenta = mc.id_cuenta  
inner join 
  RF_TC_COSTOS_TRANSACCION ct 
on 
  mc.id_clave_trans_recla = ct.id_clave_trans and ct.costo &lt; mc.monto 
order by 
  num_cuenta, fecha_hora 
   </select>
  <select id="TerminalPuntoVta">
select 
  ue.descripcion || '  ' || tpv.descripcion Nombre,
  to_char(c.fecha_hora,'dd/MM/yyyy') Fecha,
  c.descripcion Concepto, 
  c.monto  
from 
    rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
where 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
    id_clave_trans_recla  = 49 and tpv.referencia_tpv = substr(trim(c.descripcion),-7,7) and
    tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                            from rf_tr_cuentas_bancarias c
                            where c.id_cuenta  in (:idCuentas))  and
    ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
    ue.entidad = tpv.entidad and 
    ue.ambito = tpv.ambito and 
    (ue.unidad_ejecutora,ue.entidad, ue.ambito) in 
    (select distinct c.unidad_ejecutora, entidad, ambito
     from rf_tr_cuentas_bancarias c
     where c.id_cuenta  in (:idCuentas)) 
order by 
  nombre, c.fecha_hora
   </select>
    <select id="TerminalPuntoVtaBMX">
select 
  ue.descripcion || '  ' || tpv.descripcion || ' (' || tpv.referencia_tpv || ')' Nombre,
  to_char(c.fecha_hora,'dd/MM/yyyy') Fecha,
  c.descripcion Concepto, 
  c.monto  
from 
    rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
where 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
    id_clave_trans_recla  = 634 and tpv.referencia_tpv = substr(trim(c.referencia),0,7) and
    tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                            from rf_tr_cuentas_bancarias c
                            where c.id_cuenta  in (:idCuentas))  and
    ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
    ue.entidad = tpv.entidad and 
    ue.ambito = tpv.ambito 
order by 
  nombre, c.fecha_hora
   </select>
   <select id="MovimientosCtasDetalleBMX">
select cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, 
       decode(to_char(fecha_hora,'dd/mm/yyyy'),null,' ',to_char(fecha_hora,'dd/mm/yyyy')) FECHA,  
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) DESCRIPCION,
       nvl(decode(id_tipo_trans,'D',monto,0),0) CARGO, nvl(decode(id_tipo_trans,'C',monto,0),0) ABONO, nvl(saldo,0) SALDO,
       decode(referencia,null,' ',referencia) REFERENCIA, nvl(saldo_inicial,0) SALDO_INICIAL, 
       nvl(saldo_final,0) SALDO_FINAL
from 
    RF_TR_CUENTAS_BANCARIAS cb, RF_TR_MOVIMIENTOS_CUENTA m,
    (select 
         m2.id_cuenta,  nvl(sd.saldo_calculado,0) saldo_inicial, 
         nvl(sd.saldo_calculado,0)+sum(decode(m2.id_tipo_trans,'C',monto,0)) +sum(decode(m2.id_tipo_trans,'D',monto,0)) saldo_final
     from 
         RF_TR_MOVIMIENTOS_CUENTA m2, 
         (select id_cuenta, saldo_calculado from rf_tr_saldos_diarios 
          where id_cuenta in (:idCuentas) and  
                fecha = (select  tsr.obten_anterior_dia_habil(to_date (':fechaInicial','yyyy-mm-dd')) from dual)
          )sd
     where 
          m2.id_cuenta in (:idCuentas) and 
          m2.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m2.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and 
          m2.id_cuenta = sd.id_cuenta(+) 
     group by m2.id_cuenta,saldo_calculado) sal 
where cb.id_cuenta in (:idCuentas) and cb.id_cuenta = m.id_cuenta(+) and cb.id_cuenta = sal.id_cuenta(+)  and
      m.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 
order by cb.num_cuenta, id_movimiento, fecha_hora
   </select>
   <select id="MovimientosCtasDetalle">
select cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, 
       decode(to_char(fecha_hora,'dd/mm/yyyy'),null,' ',to_char(fecha_hora,'dd/mm/yyyy')) FECHA,  
       nvl(numero_cheque,0) CHEQUE, 
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) DESCRIPCION,
       nvl(decode(id_tipo_trans,'DR',monto,0),0) CARGO, nvl(decode(id_tipo_trans,'CR',monto,0),0) ABONO, nvl(saldo,0) SALDO,
       nvl(numero_folio,0) FOLIO, decode(referencia,null,' ',referencia) REFERENCIA, nvl(saldo_inicial,0) SALDO_INICIAL, 
       nvl(saldo_final,0) SALDO_FINAL
from 
    RF_TR_CUENTAS_BANCARIAS cb, RF_TR_MOVIMIENTOS_CUENTA m,
    (select 
         m2.id_cuenta,  nvl(sd.saldo_calculado,0) saldo_inicial, 
         nvl(sd.saldo_calculado,0)+sum(decode(m2.id_tipo_trans,'CR',monto,0)) -sum(decode(m2.id_tipo_trans,'DR',monto,0)) saldo_final
     from 
         RF_TR_MOVIMIENTOS_CUENTA m2, 
         (select id_cuenta, saldo_calculado from rf_tr_saldos_diarios 
          where id_cuenta in (:idCuentas) and  
                fecha = (select  tsr.obten_anterior_dia_habil(to_date (':fechaInicial','yyyy-mm-dd')) from dual)
          )sd
     where 
          m2.id_cuenta in (:idCuentas) and 
          m2.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m2.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and 
          m2.id_cuenta = sd.id_cuenta(+) 
     group by m2.id_cuenta,saldo_calculado) sal 
where cb.id_cuenta in (:idCuentas) and cb.id_cuenta = m.id_cuenta(+) and cb.id_cuenta = sal.id_cuenta(+)  and
      m.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 
order by cb.num_cuenta, id_movimiento, fecha_hora
   </select>
   <select id="MovimientosCtasDetalleBBVA">
select cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, 
       decode(to_char(fecha_hora,'dd/mm/yyyy'),null,' ',to_char(fecha_hora,'dd/mm/yyyy')) FECHA,  
       nvl(numero_cheque,0) CHEQUE, 
       decode(clave_trans_recla,null,' ',clave_trans_recla) || ' ' || decode(descripcion,null,' ',descripcion) DESCRIPCION,
       nvl(decode(id_tipo_trans,'DR',monto,0),0) CARGO, nvl(decode(id_tipo_trans,'CR',monto,0),0) ABONO, nvl(saldo,0) SALDO,
       nvl(numero_folio,0) FOLIO, decode(referencia,null,' ',referencia) REFERENCIA, nvl(saldo_inicial,0) SALDO_INICIAL, 
       nvl(saldo_final,0) SALDO_FINAL
from 
    RF_TR_CUENTAS_BANCARIAS cb, RF_TR_MOVIMIENTOS_CUENTA m,
    (select 
         m2.id_cuenta,  nvl(sd.saldo_calculado,0) saldo_inicial, 
         nvl(sd.saldo_calculado,0)+sum(decode(m2.id_tipo_trans,'CR',monto,0)) +sum(decode(m2.id_tipo_trans,'DR',monto,0)) saldo_final
     from 
         RF_TR_MOVIMIENTOS_CUENTA m2, 
         (select id_cuenta, saldo_calculado from rf_tr_saldos_diarios 
          where id_cuenta in (:idCuentas) and  
                fecha = (select  tsr.obten_anterior_dia_habil(to_date (':fechaInicial','yyyy-mm-dd')) from dual)
          )sd
     where 
          m2.id_cuenta in (:idCuentas) and 
          m2.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m2.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and 
          m2.id_cuenta = sd.id_cuenta(+) 
     group by m2.id_cuenta,saldo_calculado) sal 
where cb.id_cuenta in (:idCuentas) and cb.id_cuenta = m.id_cuenta(+) and cb.id_cuenta = sal.id_cuenta(+)  and
      m.fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  m.fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 
order by cb.num_cuenta, id_movimiento, fecha_hora
   </select>
   <select id="EncabezadosSaldosDiarios">
select 
  distinct fecha 
from 
  RF_TR_SALDOS_DIARIOS 
where 
  fecha BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') and
  (id_cuenta in (:idCuentas))  
order by fecha 
   </select>
   <select id="SaldosDiarios">
select 
  cuenta, to_char(fecha,'dd/mm/yyyy') fecha, saldo 
from 
  (select 
    cb.num_cuenta||' '|| decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) Cuenta, fecha, sd.saldo_calculado saldo 
  from 
    (select 
      fecha, saldo_calculado, id_cuenta 
     from 
      rf_tr_saldos_diarios 
     where (id_cuenta in (:idCuentas)) and 
      fecha BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') 
     order by 
      id_cuenta, fecha) sd 
  inner join 
    rf_tr_cuentas_bancarias cb 
  on 
    sd.id_cuenta = cb.id_cuenta 
  inner join 
    RF_TC_TIPO_CUENTA tc 
  on 
    cb.id_tipo_cta = tc.id_tipo_cta 
  order by 
    cb.unidad_ejecutora,  cb.num_cuenta, cb.nombre_cta, fecha)  
   </select>
   <select id="MovimientosCtasTotalDia">
select 
  todasCtas.num_cuenta CUENTA, todasCtas.nombre_cta NOMBRE,  to_char(todasCtas.FECHA,'dd/mm/yyyy') FECHA,   todasCtas.SALDO_CALCULADO+nvl(totCargo,0)- nvl(totAbono,0) SALDO_INICIAL,   nvl(totCargo,0) CARGOS,   nvl(totAbono,0) ABONOS,   todasCtas.SALDO_CALCULADO SALDO_FINAL 
from 
  (select 
    id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora, sum(cargo) totCargo, sum(abono) totAbono 
  from 
    (select 
      m.id_cuenta,m.num_cuenta, m.nombre_cta,m.id_tipo_trans, m.saldo_calculado saldo_final, (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as cargo, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as abono, trunc(fecha) fecha, m.unidad_ejecutora 
     from 
      (select 
        mc.id_cuenta, cb.num_cuenta, cb.nombre_cta, mc.id_tipo_trans, sd.saldo_calculado, mc.monto, mc.fecha_hora fecha, cb.unidad_ejecutora 
      from 
        RF_TR_MOVIMIENTOS_CUENTA mc 
      inner join 
        RF_TR_CUENTAS_BANCARIAS cb 
      on 
        cb.id_cuenta = mc.id_cuenta 
      inner join 
        RF_TR_SALDOS_DIARIOS sd 
      on 
        cb.id_cuenta = sd.id_cuenta and trunc(sd.fecha) = trunc(mc.fecha_hora) 
    where 
      (id_cuenta in (:idCuentas)) and 
      mc.fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  mc.fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
      ) m 
group by 
  m.id_cuenta, m.num_cuenta, m.nombre_cta, m.id_tipo_trans, m.saldo_calculado,m.fecha, m.unidad_ejecutora) 
group by 
  id_cuenta, num_cuenta, nombre_cta, saldo_final, fecha, unidad_ejecutora) movexistentes 
right join 
  (select 
    cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION, ID_SALDO_DIARIO,FECHA,SALDO_CALCULADO 
  from 
    RF_TR_CUENTAS_BANCARIAS cb 
  inner join 
    RF_TR_SALDOS_DIARIOS sd 
  on 
    cb.id_cuenta = sd.id_cuenta and sd.fecha BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date (':fechaFinal','yyyy-mm-dd') 
  where 
    (cb.id_cuenta in (:idCuentas))) todasCtas 
on 
  movexistentes.id_cuenta = todasCtas.id_cuenta and movexistentes.fecha = todasCtas.fecha 
order by 
  todasCtas.UNIDAD_EJECUTORA, todasCtas.num_cuenta, todasCtas.nombre_cta, todasCtas.FECHA 
   </select>
    <select id="ChqsPagados">
select 
  cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, to_char(tm.fecha_hora,'dd/mm/yyyy') FECHA, tm.numero_cheque NO_CHEQUE, tm.monto IMPORTE 
from 
  (select 
    id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento, numero_cheque 
  from 
    RF_TR_MOVIMIENTOS_CUENTA 
  where 
    (id_cuenta in (:idCuentas)) and 
    fecha_hora >= to_date(':fechaInicial','yyyy-mm-dd') AND  fecha_hora  &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and
    id_clave_trans_recla  = 22 and monto > 5000.00 
  order by 
    id_cuenta, fecha_hora) tm 
inner join 
  RF_TR_CUENTAS_BANCARIAS cb 
on 
  tm.id_cuenta = cb.id_cuenta and cb.id_tipo_cta = 1 and cb.id_estatus_cta_prog = 1 
  order by cb.num_cuenta, tm.fecha_hora
   </select>
   <select id="ReversoComisiones">
select 
  cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, to_char(tm.fecha_hora,'dd/mm/yyyy') FECHA, tm.clave_trans_recla CLAVE, tm.descripcion TRANSACCION, tm.monto MONTO 
from 
  (select 
    id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
    RF_TR_MOVIMIENTOS_CUENTA 
  where 
    (id_cuenta in (:idCuentas)) and 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora  &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
  order by 
    id_cuenta, fecha_hora) tm 
inner join 
  RF_TC_CLAVES_TRANSACCION tct 
on 
  tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and 
  ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
inner join 
  RF_TR_CUENTAS_BANCARIAS cb 
on 
  tm.id_cuenta = cb.id_cuenta 
order by 
  num_cuenta, fecha_hora 
  </select>
  <select id="TotalReversoCom">
select 
  cb.num_cuenta CUENTA, cb.nombre_cta NOMBRE, sum(tm.monto) as MONTO 
from 
    (select 
      id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
    from 
      RF_TR_MOVIMIENTOS_CUENTA  
    where 
      (id_cuenta in (:idCuentas)) and 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
    order by 
      id_cuenta, fecha_hora) tm 
    inner join 
      RF_TC_CLAVES_TRANSACCION tct 
    on 
      tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'R' and ((tm.fecha_hora >= tct.vigencia_ini and 
      (tm.fecha_hora &lt; tct.vigencia_fin or tct.vigencia_fin is null))) 
inner join 
  RF_TR_CUENTAS_BANCARIAS cb 
on 
  tm.id_cuenta = cb.id_cuenta 
group by  
  cb.num_cuenta, cb.nombre_cta 
   </select>
 <select id="TotalComisionesCobradas">
select 
 num_cuenta CUENTA, nombre_cta NOMBRE, total MONTO 
from 
  (select 
    cb.num_cuenta, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) nombre_cta , sum(tm.monto) total 
  from 
    (select 
      id_cuenta, fecha_hora, monto,descripcion, clave_trans_recla,id_clave_trans_recla, id_movimiento 
    from 
      RF_TR_MOVIMIENTOS_CUENTA 
    where 
      (id_cuenta in (:idCuentas)) and 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
    order by 
      id_cuenta, fecha_hora) tm 
inner join 
  RF_TC_CLAVES_TRANSACCION tct 
on 
  tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and 
  ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
inner join 
  RF_TC_COSTOS_TRANSACCION tc 
on 
  tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto &lt;= tc.limite_superior) or 
  (tc.limite_inferior is null and tc.limite_superior is null)) 
inner join 
  RF_TR_CUENTAS_BANCARIAS cb 
on 
  tm.id_cuenta = cb.id_cuenta 
inner join 
  RF_TC_TIPO_CUENTA tc 
on 
  cb.id_tipo_cta = tc.id_tipo_cta 
group by 
  cb.num_cuenta, cb.nombre_cta,cb.id_tipo_cta,tc.nombre_corto 
order 
  by num_cuenta) 
   </select>
<select id="EncabezadoTransaccionalidad">
select 
  distinct fecha
from 
  (select 
    rownum-1, to_char(to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1,'yyyy-mm-dd') fecha 
  from 
    rf_tr_saldos_diarios t 
  where 
    to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1 BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) tt, 
  (select 
    c.num_cuenta, c.nombre_cta, c.unidad_ejecutora 
  from 
    rf_tr_cuentas_bancarias c 
  where 
    c.id_cuenta in (:idCuentas)) cc 
  </select>
   <select id="TransaccionalidadCuentas">
select num_cuenta ||' ' || (decode(tipo_cta,6,nombre_cta || ' ' || nom_tipo_cta,nombre_cta)) CUENTA, TRANSACCIONES, FECHA
FROM 
(
select 
 (case when t.fecha is null then f.num_cuenta else t.num_cuenta end) num_cuenta,
 (case when t.fecha is null then f.nombre_cta else t.nombre_cta end) nombre_cta,
 (case when t.fecha is null then f.id_tipo_cta else t.id_tipo_cta end) tipo_cta,
 (case when t.fecha is null then f.nombre_corto else t.nombre_corto end) nom_tipo_cta,
 (case when t.fecha is null then f.fecha else t.fecha end) fecha,
 nvl(transacciones,0) transacciones
from  
(select 
    cb.num_cuenta,
    cb.nombre_cta,
    cb.id_tipo_cta,
    tc.nombre_corto,
    count(mc.id_cuenta) as transacciones, 
    mc.fecha_hora fecha 
  from 
    (select 
      id_cuenta, to_char(fecha_hora,'yyyy-mm-dd') fecha_hora 
    from 
      rf_tr_movimientos_cuenta 
    where 
      (id_cuenta in (:idCuentas)) and 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
    order by 
      id_cuenta ) mc 
RIGHT JOIN 
  (select 
    cb.ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,AMBITO,PROCESAR,FECHA_OPERACION 
  from 
    RF_TR_CUENTAS_BANCARIAS cb 
  where 
    (cb.id_cuenta in (:idCuentas)) 
  ) cb 
  on 
    mc.id_cuenta = cb.id_cuenta  
  inner join 
    RF_TC_TIPO_CUENTA tc 
  on 
    cb.id_tipo_cta = tc.id_tipo_cta  
  group by 
    mc.id_cuenta, cb.num_cuenta, cb.nombre_cta,
    mc.fecha_hora,
    cb.id_tipo_cta, tc.nombre_corto 
  order by 
    cb.num_cuenta, mc.fecha_hora) t,
(select 
  * 
from 
  (select 
    rownum-1, to_char(to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1,'yyyy-mm-dd') fecha 
  from 
    rf_tr_saldos_diarios t 
  where 
    to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1 BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')
  ) tt, 
  (select 
    c.num_cuenta, c.nombre_cta, c.unidad_ejecutora, c.id_tipo_cta, tc.nombre_corto
  from 
    rf_tr_cuentas_bancarias c, rf_tc_tipo_cuenta tc
  where 
    c.id_cuenta in (:idCuentas)
    and c.id_tipo_cta = tc.id_tipo_cta 
  ) cc
) f 
where t.num_cuenta(+) = f.num_cuenta and t.fecha(+) = f.fecha 
      and t.id_tipo_cta(+) = f.id_tipo_cta 
order by num_cuenta, nombre_cta, fecha)
   </select>
   <select id="DetalleComisionesCobradas">
select 
    cb.num_cuenta CUENTA, decode(cb.id_tipo_cta,6,cb.nombre_cta || ' ' || tc.nombre_corto,cb.nombre_cta) NOMBRE, tm.fecha_hora FECHA, tm.clave_trans_recla CLAVE, tm.descripcion TRANSACCION, tm.monto MONTO 
from 
  (select 
    id_cuenta, fecha_hora, monto, descripcion, clave_trans_recla, id_clave_trans_recla, id_movimiento 
  from 
    RF_TR_MOVIMIENTOS_CUENTA 
  where 
    (id_cuenta in (:idCuentas)) and 
    fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 
  order by 
    id_cuenta, fecha_hora) tm 
  inner join 
    RF_TC_CLAVES_TRANSACCION tct 
  on 
    tm.id_clave_trans_recla = tct.id_clave_trans and id_tipo_aplica = 'C' and 
    ((tm.fecha_hora >= tct.vigencia_ini and (tm.fecha_hora &lt;= tct.vigencia_fin or tct.vigencia_fin is null))) 
  inner join 
    RF_TC_COSTOS_TRANSACCION tc 
  on 
    tct.id_clave_trans = tc.id_clave_trans and ((tm.monto >= tc.limite_inferior and tm.monto &lt;= tc.limite_superior) or 
    (tc.limite_inferior is null and tc.limite_superior is null)) 
  inner join 
    RF_TR_CUENTAS_BANCARIAS cb 
  on 
    tm.id_cuenta = cb.id_cuenta 
  inner join 
    RF_TC_TIPO_CUENTA tc 
  on 
    cb.id_tipo_cta = tc.id_tipo_cta 
  order by 
    num_cuenta, Fecha 
   </select>
   <select id="MovimientosCuentasPropias">
select unidad_ejecutora,num_cuenta CUENTA, nombre_cta NOMBRE, FECHA, sum(cargo) ABONOS, sum(abono) CARGOS from ( 
select f.unidad_ejecutora,
    (case when t.fecha is null then f.num_cuenta else t.num_cuenta end) num_cuenta, 
    (case when t.fecha is null then f.nombre_cta else t.nombre_cta end) nombre_cta,
    (case when t.fecha is null then f.fecha else t.fecha end) fecha, 
   nvl(cargo, 0) as cargo, nvl(abono,0) as abono 
  from 
    (select 
      num_cuenta, nombre_cta, fecha, nvl(cargo, 0) as cargo, nvl(abono,0) as abono, unidad_ejecutora 
    from 
      (select 
        m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, (case when m.id_tipo_trans ='CR' then sum(m.monto) end) as cargo, 
        (case when m.id_tipo_trans ='DR' then sum(m.monto) end) as abono , unidad_ejecutora 
      from 
        (select 
          cb.num_cuenta, cb.nombre_cta, nvl(mc.monto,0) monto, nvl(mc.id_tipo_trans,0) id_tipo_trans, nvl(mc.descripcion,' ') descripcion,
          mc.fecha_hora fecha, unidad_ejecutora 
        from 
          (select 
            id_cuenta, num_cuenta, nombre_cta, unidad_ejecutora 
          from 
            RF_TR_CUENTAS_BANCARIAS 
          where 
            id_cuenta in (:idCuentas)) cb 
left join 
  (select 
    mov.id_cuenta, monto, id_tipo_trans, descripcion, fecha_hora 
  from 
    (select 
      id_cuenta, monto, id_tipo_trans, descripcion, to_char(trunc(fecha_hora),'yyyy-MM-dd') fecha_hora, substr(trim(descripcion),-10,10) cuenta 
    from 
      RF_TR_MOVIMIENTOS_CUENTA 
    where 
      (id_cuenta in (:idCuentas)) and 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND fecha_hora &lt; to_date(':fechaFinal','yyyy-mm-dd')+1 and
      clave_trans in (5423, 5489)) mov 
inner join 
  (select 
    ID_CUENTA,NUM_CUENTA,ENTIDAD,ID_BANCO,NOMBRE_CTA,UNIDAD_EJECUTORA,ID_TIPO_CTA,ID_TIPO_PROGRAMA,OPERACION_CENTRAL,ID_ESTATUS_CTA_PROG,
    AMBITO,PROCESAR,FECHA_OPERACION,FECHA_FIN_OPERACION 
  from 
    RF_TR_CUENTAS_BANCARIAS 
  where 
    id_tipo_programa = 
                      (select 
                        distinct id_tipo_programa 
                      from 
                        RF_TR_CUENTAS_BANCARIAS 
                      where 
                        id_cuenta in (:idCuentas))) ctas 
on 
ctas.num_cuenta = mov.cuenta ) mc 
on 
  cb.id_cuenta = mc.id_cuenta ) m 
group by 
  m.num_cuenta, m.nombre_cta, m.fecha, m.id_tipo_trans, m.unidad_ejecutora 
order by 
  m.fecha, m.num_cuenta)) t, 
(select 
  * 
from 
  (select 
    rownum-1, to_char(to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1,'yyyy-mm-dd') fecha 
  from 
    rf_tr_saldos_diarios t 
  where 
    to_date(':fechaInicial','yyyy-mm-dd')+ rownum-1 BETWEEN to_date (':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) tt, 
  (select 
    c.num_cuenta, c.nombre_cta, c.unidad_ejecutora 
  from 
    rf_tr_cuentas_bancarias c 
  where 
    c.id_cuenta in (:idCuentas)) cc ) f 

  where t.num_cuenta(+) = f.num_cuenta and t.fecha(+) = f.fecha 
)
group by unidad_ejecutora,num_cuenta, nombre_cta,fecha
order by unidad_ejecutora, num_cuenta, nombre_cta, fecha
   </select>
 <select id="ReferenciasIdentificadasReintegros">
select 
  res.num_cuenta CUENTA, res.nombre_cta NOMBRE, fecha_hora FECHA, res.ctaAfecta CUENTA_DESTINO , cb1.nombre_cta NOMBRE_CUENTA_DESTINO,res.referencia, res.monto MONTO 
from 
  (SELECT 
    mc.fecha_hora, cb.num_cuenta, cb.nombre_cta, mc.referencia, mc.monto, mc.descripcion, substr(trim(mc.descripcion),-10,10) ctaAfecta 
  FROM 
    (SELECT 
      id_cuenta, monto, referencia, fecha_hora, clave_trans_recla, descripcion, id_tipo_trans 
    FROM 
      rf_tr_movimientos_cuenta 
    WHERE 
      (id_cuenta in (:idCuentas)) AND 
      fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
      id_tipo_trans = 'CR' AND (id_clave_trans_recla = 5 OR id_clave_trans_recla = 27) AND (clave_trans_recla = 5423 OR clave_trans_recla = 5489) AND
      (referencia LIKE '%ARE%' OR (SUBSTR(referencia,1,2)='03' OR SUBSTR(referencia,1,2)='04' OR SUBSTR(referencia,1,2)='23' OR SUBSTR(referencia,1,2)='24')) 
    ORDER BY 
      id_cuenta) mc 
INNER JOIN 
  rf_tr_cuentas_bancarias cb 
ON 
  mc.id_cuenta = cb.id_cuenta and num_cuenta not in ('4042547851','4042547869') and cb.id_tipo_cta not in (5,1,2)) res 
inner join 
  rf_tr_cuentas_bancarias cb1 
on 
  res.ctaAfecta = cb1.num_cuenta and cb1.id_tipo_cta !=3 
order by 
  res.num_cuenta,  fecha_hora, ctaafecta 
   </select>
   <select id="resumenConsolidacionSaldos">
   select totalSaldo from ( 
select sum(saldo_calculado) totalSaldo, tipoCuenta from ( 
select saldo_calculado, unidad_ejecutora, nombre_corto, 
       decode(tipo_cuenta,3,0,4,1,5,1,6,3,1,2,2,2,7,4,tipo_cuenta) tipoCuenta 
from 
    ( 
    select saldo_calculado, id_tipo_cta,num_cuenta, 
           decode(num_cuenta,'4042547885',6,'4042680082',7,'4042547869',6,cb.id_tipo_cta) tipo_cuenta , 
           decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora) unidad_ejecutora , 
           decode(num_cuenta,'4042547752','TESORERIA CENTRAL','4040444184','TESORERIA CENTRAL','4024426090','TESORERIA CENTRAL','4039477765','TESORERIA CENTRAL',ue.nombre_corto ) nombre_corto 
    from rf_tr_saldos_diarios sd 
    inner join rf_tr_cuentas_bancarias cb 
    on sd.id_cuenta = cb.id_cuenta and cb.id_cuenta in (:idCuentas) 
    inner join sia_admin.RH_TC_UNI_EJECUTORAS ue 
    on cb.unidad_ejecutora = ue.unidad_ejecutora  
    where trunc(fecha) = to_date(':fechaFinal','yyyy-mm-dd'))sub 
) res 
group by tipoCuenta) 
order by tipoCuenta 
   </select>
   <select id="resumenConsolidacionSaldosBMX">
<!--select saldo 
from (
        select 
          nvl(saldo_calculado,0) saldo, 0 tipo 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta and cb.id_cuenta = 951
        union all  
        select 
          nvl(saldo_calculado,0) saldo, 1 tipo 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta and cb.id_cuenta = 950
        union all 
        select 
         nvl(sum(saldo_calculado),0) saldo, 2 tipo 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta and cb.id_cuenta in (952,953,954)
         union all
        select 
         nvl(sum(saldo_calculado),0) saldo, 3 tipo 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta  and cb.id_cuenta != 954 and cb.id_tipo_cta in (1,2)  and id_tipo_programa = 7
        union all
        select 
         nvl(sum(saldo_calculado),0) saldo, 4 tipo
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta and cb.id_tipo_cta = 6 and id_tipo_programa = 7
        union all
        select 
         nvl(sum(saldo_calculado),0) saldo, 5 tipo
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta and cb.id_cuenta in (955,956)
       union all
        select 
         nvl(sum(saldo_calculado),0) saldo, 6 tipo
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where 
         fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
         sd.id_cuenta = cb.id_cuenta and cb.id_tipo_programa = 6 and
         cb.id_tipo_cta not in (7,8,9)
    ) 
order by tipo-->
select (select nvl(saldo_calculado,0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_cuenta = 951) conIngBMX, 
       (select nvl(saldo_calculado,0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_cuenta = 950) conEgrBMX,
       (select nvl(sum(saldo_calculado),0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_cuenta in (952,953,954)) pagCentrales,
       (select nvl(sum(saldo_calculado),0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta  and cb.id_cuenta != 954 and cb.id_tipo_cta in (1,2)  and id_tipo_programa = 7) chequeras,
       (select nvl(sum(saldo_calculado),0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_tipo_cta = 6 and id_tipo_programa = 7) ingresos,
       (select nvl(sum(saldo_calculado),0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_cuenta in (955,956)) reinExtra,
       (select nvl(sum(saldo_calculado),0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_cuenta = 524) conEgreHSBC,
       (select nvl(sum(saldo_calculado),0) saldo from rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb
        where fecha =  to_date(':fechaFinal','yyyy-mm-dd') and sd.id_cuenta = cb.id_cuenta and cb.id_cuenta = 1051) conEgreBBVA
from dual 
   </select>
   <select id="resumenInversion10min">
select   nombre_corto NOMBANCO ,  sum(importe) SALDO_REAL, VENCIMIENTO
from
( select  b.id_banco, b.nombre_corto, 'Inversión '|| i.plazo || ' día' plazo, d.importe, 'vence ' || i.vencimiento vencimiento
  from rf_tr_compras_inversion i, rf_tr_detalle_compra d,  rf_tr_cuentas_inversion c, rf_tc_bancos_inversion b
  where trunc(i.fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
        trunc(i.vencimiento) > to_date(':fechaFinal','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo in (1,2,3,4,5,6) 
      and c.id_cuenta_inversion = i.id_cuenta_inversion and b.id_banco = c.id_banco 
 union all
  select  b.id_banco, b.nombre_corto, 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento
  from rf_tr_compras_inversion i, rf_tr_detalle_compra d ,  rf_tr_cuentas_inversion c, rf_tc_bancos_inversion b
  where trunc(i.fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
        trunc(i.vencimiento) > to_date(':fechaFinal','yyyy-mm-dd') and
        d.id_compra_inversion = i.id_compra_inversion and i.plazo in (7,8,9,10,11,12)
      and c.id_cuenta_inversion = i.id_cuenta_inversion and b.id_banco = c.id_banco
 union all
  select b.id_banco, b.nombre_corto, 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento
  from rf_tr_compras_inversion i, rf_tr_detalle_compra d ,  rf_tr_cuentas_inversion c, rf_tc_bancos_inversion b
  where trunc(i.fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
        trunc(i.vencimiento) > to_date(':fechaFinal','yyyy-mm-dd') and
        d.id_compra_inversion = i.id_compra_inversion and i.plazo in (13,14,15,16,17,18,19,20)
      and c.id_cuenta_inversion = i.id_cuenta_inversion and b.id_banco = c.id_banco
 union all
  select b.id_banco, b.nombre_corto, 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento 
  from rf_tr_compras_inversion i, rf_tr_detalle_compra d ,  rf_tr_cuentas_inversion c, rf_tc_bancos_inversion b
  where trunc(i.fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
        trunc(i.vencimiento) > to_date(':fechaFinal','yyyy-mm-dd') and
       d.id_compra_inversion = i.id_compra_inversion and i.plazo in (21,22,23,24,25,26,27)
      and c.id_cuenta_inversion = i.id_cuenta_inversion and b.id_banco = c.id_banco
 union all
  select  b.id_banco, b.nombre_corto, 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento
  from rf_tr_compras_inversion i, rf_tr_detalle_compra d ,  rf_tr_cuentas_inversion c, rf_tc_bancos_inversion b
  where trunc(i.fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
        trunc(i.vencimiento) > to_date(':fechaFinal','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo = 28 
      and c.id_cuenta_inversion = i.id_cuenta_inversion and b.id_banco = c.id_banco
 union all
  select  b.id_banco, b.nombre_corto, ' ' plazo, sum(e.importe) importe, 'Efectivo' vencimiento
  from rf_tr_efectivo_inversion e,  rf_tr_cuentas_inversion c, rf_tc_bancos_inversion b
  where trunc(e.fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
     ( trunc(e.vincimiento) >to_date(':fechaFinal','yyyy-mm-dd')
      or e.vincimiento is null)
      and c.id_cuenta_inversion = e.id_cuenta_inversion and b.id_banco = c.id_banco
  group by b.id_banco, b.nombre_corto
)
group by id_banco,nombre_corto, plazo, vencimiento
   </select>
   <select id="consolidacionSaldos">
select 
  unidad_ejecutora || ' ' ||nombre_corto UNIDAD_EJECUTORA,  sum(decode(tipoCuenta||bandera,10,saldo,0)) DISSAL_ANT,   sum(decode(tipoCuenta||bandera,11,saldo,0)) DISSAL_ACT, sum(decode(tipoCuenta||bandera,20,saldo,0)) IXVSAL_ANT, sum(decode(tipoCuenta||bandera,21,saldo,0)) IXVSAL_ACT, sum(decode(tipoCuenta||bandera,30,saldo,0)) CGCSAL_ANT, sum(decode(tipoCuenta||bandera,31,saldo,0)) CGCSAL_ACT, sum(decode(tipoCuenta||bandera,40,saldo,0)) CSPSAL_ANT, sum(decode(tipoCuenta||bandera,41,saldo,0)) CSPSAL_ACT 
from 
  (select 
    sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto,0 bandera 
  from 
    (select 
      saldo_calculado, unidad_ejecutora, nombre_corto, decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta 
    from 
      (select 
        saldo_calculado,fecha,decode(num_cuenta,'4042547885',6,'4042547869',6,cb.id_tipo_cta ) tipo_cuenta, 
        decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora, 
        decode(num_cuenta,'4042547752','Tesorería','4040444184','Tesorería','4024426090','Tesorería','4039477765','Tesorería',ue.nombre_corto ) nombre_corto 
      from 
        rf_tr_saldos_diarios sd 
      inner join 
        rf_tr_cuentas_bancarias cb 
      on 
        sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) 
inner join 
  sia_admin.RH_TC_UNI_EJECUTORAS ue 
on 
  cb.unidad_ejecutora = ue.unidad_ejecutora and
     ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
      (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
      (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
      (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
where 
  fecha =  to_date(':fechaInicial','yyyy-mm-dd') and
              num_cuenta != 4042680082
            )sub) res 
group by 
  tipoCuenta, unidad_ejecutora, nombre_corto 
union all 
select 
  sum(saldo_calculado) saldo, res.tipoCuenta, res.unidad_ejecutora, res.nombre_corto, 1 bandera 
from 
  (select 
    saldo_calculado, unidad_ejecutora, nombre_corto,decode(tipo_cuenta,3,1,4,1,5,1,6,2,1,3,2,4,tipo_cuenta) tipoCuenta 
  from 
    (select 
      saldo_calculado, decode(num_cuenta,'4042547885',6,'4042547869',6,cb.id_tipo_cta ) tipo_cuenta , 
      decode(num_cuenta,'4042547752','100','4040444184','100','4024426090','100','4039477765','100',cb.unidad_ejecutora ) unidad_ejecutora , 
      decode(num_cuenta,'4042547752','Tesorería','4040444184','Tesorería','4024426090','Tesorería','4039477765','Tesorería',ue.nombre_corto ) nombre_corto 
    from 
      rf_tr_saldos_diarios sd 
    inner join 
      rf_tr_cuentas_bancarias cb 
    on 
      sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) 
    inner join 
      sia_admin.RH_TC_UNI_EJECUTORAS ue 
    on 
      cb.unidad_ejecutora = ue.unidad_ejecutora and
     ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
      (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
      (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
      (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
  where 
    fecha = to_date(':fechaFinal','yyyy-mm-dd') and
              num_cuenta != 4042680082
    )sub) res 
group by 
  tipoCuenta, unidad_ejecutora, nombre_corto 
order by 
  unidad_ejecutora, tipoCuenta) 
group by 
  unidad_ejecutora, nombre_corto 
   </select>
   <select id="consolidacionSaldosNL">
select 
 unidad, nombre_corto nombre, 
 sum(decode(bandera,1,saldo,0)) saldo_Actual, 
 sum(decode(bandera,0,saldo,0)) saldo_Anterior 
from  
( 
select 
   sum(saldo_calculado) saldo, unidad,
   decode(unidad,102,'Contraloría Interna',
                               105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                               107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                               109,'D.G. de Administración', 096,'Concentradoras',
                               097,'Gasto Corriente',098,'Servicios Personales',
                               099,'Ingresos', 100,'Reintegros',nombre_corto) nombre_corto, 1 bandera 
from  
(select 
      saldo_calculado,fecha, 
      decode(num_cuenta,'08400029084','098','08400030457','098','4042547752','096','43710149845','096','08400029068','096',         
                        '0161763024','096','18000008500','096','08400029076','097','8788788','096',
                         '08400031046','096',
                        '08400029122','099','08400029386','099','43710154369','099','08400029106','100', cb.unidad_ejecutora ) unidad, 
      decode(num_cuenta,'43710154369','D.G. Administración',nombre_corto)nombre_corto 
from 
      rf_tr_saldos_diarios sd, rf_tr_cuentas_bancarias cb, 
      sia_admin.RH_TC_UNI_EJECUTORAS ue   
where 
      fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
      cb.unidad_ejecutora = ue.unidad_ejecutora and 
      sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
      (trunc(cb.FECHA_FIN_OPERACION) >= to_date(':fechaInicial','yyyy-mm-dd') or cb.FECHA_FIN_OPERACION is null) and 
      ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL))) 
)sub 
group by unidad, nombre_corto 
union all 
select 
   sum(saldo_calculado) saldo, unidad,
   decode(unidad,102,'Contraloría Interna',
                               105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                               107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                               109,'D.G. de Administración', 096,'Concentradoras',
                               097,'Gasto Corriente',098,'Servicios Personales',
                               099,'Ingresos', 100,'Reintegros',nombre_corto) nombre_corto, 0 bandera 
from  
(select 
      saldo_calculado,fecha, 
      decode(num_cuenta,'08400029084','098','08400030457','098','4042547752','096','43710149845','096','08400029068','096',         
                        '0161763024','096','18000008500','096','08400029076','097','8788788','096',
                         '08400031046','096',
                        '08400029122','099','08400029386','099','43710154369','099','08400029106','100', cb.unidad_ejecutora ) unidad, 
      decode(num_cuenta,'43710154369','D.G. Administración',nombre_corto)nombre_corto 
from 
      rf_tr_saldos_diarios sd, rf_tr_cuentas_bancarias cb, 
      sia_admin.RH_TC_UNI_EJECUTORAS ue   
where 
      fecha =  to_date(':fechaInicial','yyyy-mm-dd') and
      cb.unidad_ejecutora = ue.unidad_ejecutora and 
      sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
      (trunc(cb.FECHA_FIN_OPERACION) >= to_date(':fechaInicial','yyyy-mm-dd') or cb.FECHA_FIN_OPERACION is null) and 
      ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
       (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL))) 
 )sub 
group by unidad, nombre_corto 
) 
group by  
      unidad, nombre_corto 
order by unidad   
   </select>
   <select id="programasEspecificos10min">
select nombre_cta cuenta, saldo_calculado saldo
from
 rf_tr_saldos_diarios sd, rf_tr_cuentas_bancarias cb 
where 
 cb.id_cuenta in (1052,1053,1054) and 
 (trunc(cb.FECHA_FIN_OPERACION) >= to_date(':fechaFinal','yyyy-mm-dd') or cb.FECHA_FIN_OPERACION is null)  and  
 sd.id_cuenta = cb.id_cuenta and 
 trunc(sd.fecha) = to_date(':fechaFinal','yyyy-mm-dd') 
order by cb.unidad_ejecutora
   </select>
   <select id="consolidacionSaldosBMX">
select 
 unidad_ejecutora ue, nombre_corto unidad, 
 sum(decode(tipoCuenta||bandera,10,saldo,0)) ingSAL_ANT, 
 sum(decode(tipoCuenta||bandera,11,saldo,0)) ingSAL_ACT, 
 sum(decode(tipoCuenta||bandera,20,saldo,0)) cgcSAL_ANT, 
 sum(decode(tipoCuenta||bandera,21,saldo,0)) cgcSAL_ACT, 
 sum(decode(tipoCuenta||bandera,30,saldo,0)) cspSAL_ANT, 
 sum(decode(tipoCuenta||bandera,31,saldo,0)) cspSAL_ACT         
from 
 (select 
    sum(saldo_calculado) saldo, res.tipoCuenta, 
    decode(res.unidad_ejecutora,'901','0901','902','0902',res.unidad_ejecutora) unidad_ejecutora, 
    res.nombre_corto,0 bandera 
  from 
    (select 
       saldo_calculado, unidad_ejecutora,
       decode(sub.unidad_ejecutora,901,'Tesorería',902,'Contabilidad Institucional',102,'Contraloría Interna',
                                   105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                                   107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                                   109,'D.G. de Administración',sub.nombre_corto) nombre_corto,
       decode(tipo_cuenta,6,1,1,2,2,3,tipo_cuenta) tipoCuenta 
     from 
       (select 
         saldo_calculado,fecha, 
         decode(num_cuenta,'08400029068',6,'43710149845',1,'08400029076',1,'08400029084',2,         
                           '08400029106',1,'08400029114',1,cb.id_tipo_cta  ) tipo_cuenta,
         cb.id_tipo_cta,
         decode(num_cuenta,'08400029068','901','43710149845','901','08400029076','901','08400029084','901','08400029092','901',         
                           '08400029122','901','08400029106','901','08400029114','901',
                           '08400030457','901','08400029386','901', cb.unidad_ejecutora ) unidad_ejecutora, 
         nombre_corto 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb, 
         sia_admin.RH_TC_UNI_EJECUTORAS ue   
          where 
         fecha =  to_date(':fechaInicial','yyyy-mm-dd') and
         cb.unidad_ejecutora = ue.unidad_ejecutora and
          sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
         ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
          (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
       
          )sub) res 
        group by 
         tipoCuenta, unidad_ejecutora, nombre_corto 
        union all 
        select 
          sum(saldo_calculado) saldo, res.tipoCuenta, 
             decode(res.unidad_ejecutora,'901','0901','902','0902',res.unidad_ejecutora) unidad_ejecutora, 
          res.nombre_corto, 1 bandera 
        from 
          (select 
             saldo_calculado, unidad_ejecutora,num_cuenta,
             decode(sub.unidad_ejecutora,901,'Tesorería',902,'Contabilidad Institucional',102,'Contraloría Interna',
                                   105,'D.G. Estadísticas Sociodemográficas',106,'D.G. Estadísticas Económicas',
                                   107,'D.G. Geografía y Medio Ambiente',108,'D.G. Servicio Público de Información',
                                   109,'D.G. de Administración',sub.nombre_corto) nombre_corto,
            decode(tipo_cuenta,6,1,1,2,2,3,tipo_cuenta) tipoCuenta 
          from 
            (select 
         saldo_calculado,fecha, num_cuenta,
         decode(num_cuenta,'08400029068',6,'43710149845',1,'08400029076',1,'08400029084',2,         
                           '08400029106',1,'08400029114',1,cb.id_tipo_cta  ) tipo_cuenta,
         cb.id_tipo_cta,
         decode(num_cuenta,'08400029068','901','43710149845','901','08400029076','901','08400029084','901','08400029092','901',         
                           '08400029122','901','08400029106','901','08400029114','901',
                           '08400030457','901','08400029386','901', cb.unidad_ejecutora ) unidad_ejecutora, 
         nombre_corto 
        from 
         rf_tr_saldos_diarios sd,rf_tr_cuentas_bancarias cb, 
         sia_admin.RH_TC_UNI_EJECUTORAS ue   
          where 
            fecha =  to_date(':fechaFinal','yyyy-mm-dd') and
            cb.unidad_ejecutora = ue.unidad_ejecutora and
            sd.id_cuenta = cb.id_cuenta and (cb.id_cuenta in (:idCuentas)) and
              ((vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde &lt;= to_date(':fechaInicial','yyyy-mm-dd')  AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta >= to_date(':fechaFinal','yyyy-mm-dd')) OR vigencia_hasta IS NULL) OR 
               (vigencia_desde BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') AND (vigencia_hasta BETWEEN to_date(':fechaInicial','yyyy-mm-dd') AND to_date(':fechaFinal','yyyy-mm-dd') OR vigencia_hasta IS NULL)))
              )sub) res 
             group by 
              tipoCuenta, unidad_ejecutora, nombre_corto 
            order by 
              unidad_ejecutora, tipoCuenta) 
          
            group by 
             unidad_ejecutora, nombre_corto
            order by 
             unidad_ejecutora
   </select>
<select id="comisionesTPV">
select  m.unidad, m.fecha_hora fecha, m.monto, com.credito, com.debito from 
(select fecha_hora, unidad, unidad_ejecutora,
      sum(decode(valor,1,abs(monto)/0.018,0)) credito,
      sum(decode(valor,2,abs(monto)/0.013,0)) debito 
from (
    select 
        fecha_hora, c.monto, substr(trim(c.referencia),0,7) || ' - ' || ue.descripcion || '  ' || tpv.descripcion unidad,
        ue.unidad_ejecutora,
        case when c.referencia like '%COMISION TAR CRED%' then 1
             when c.referencia like '%COMISION TAR DEBIT%' then 2
        end valor 
    from 
        rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
    where 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
        id_clave_trans_recla  =324  and tpv.referencia_tpv = substr(trim(c.referencia),0,7) and
        tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                                from rf_tr_cuentas_bancarias c
                                where c.id_cuenta  in (:idCuentas)) and 
        ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
        ue.entidad = tpv.entidad and 
        ue.ambito = tpv.ambito 
      <!--   and 
        (ue.unidad_ejecutora,ue.entidad, ue.ambito) in 
        (select distinct c.unidad_ejecutora, entidad, ambito
         from rf_tr_cuentas_bancarias c
         where c.id_cuenta  in (:idCuentas))  -->
    )
 group by fecha_hora, unidad, unidad_ejecutora) com, 
    (select 
        fecha_hora,  sum(c.monto) monto, substr(trim(c.referencia),0,7) || ' - ' || ue.descripcion || '  ' || tpv.descripcion unidad,
        ue.unidad_ejecutora
    from 
        rf_tr_movimientos_cuenta c , rf_tc_cuentas_tpv tpv, rf_tc_unidades_ejecutoras_tece ue 
    where 
        fecha_hora >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha_hora &lt; to_date (':fechaFinal','yyyy-mm-dd')+1 and
        id_clave_trans_recla  = 634  and tpv.referencia_tpv = substr(trim(c.referencia),0,7) and
        tpv.unidad_ejecutora in (select distinct c.unidad_ejecutora
                                from rf_tr_cuentas_bancarias c
                                where c.id_cuenta  in (:idCuentas)) and 
        ue.UNIDAD_EJECUTORA = tpv.UNIDAD_EJECUTORA and 
        ue.entidad = tpv.entidad and 
        ue.ambito = tpv.ambito 
      <!--   and 
        (ue.unidad_ejecutora,ue.entidad, ue.ambito) in 
        (select distinct c.unidad_ejecutora, entidad, ambito
         from rf_tr_cuentas_bancarias c
         where c.id_cuenta  in (:idCuentas))  -->
         group by fecha_hora,ue.unidad_ejecutora ,  substr(trim(c.referencia),0,7) || ' - ' || ue.descripcion || '  ' || tpv.descripcion ) m 
where com.FECHA_HORA = m.fecha_hora and
      com.unidad = m.unidad and
      com.unidad_ejecutora = m.unidad_ejecutora 
order by m.unidad, m.unidad_ejecutora,m.fecha_hora 
</select>
<select id="tasasRendimiento">
select to_char(fecha,'dd/mon/yyyy') fecha, 
       sum(decode (id_banco, 35, tasa, 0)) as HSBC,
       sum(decode (id_banco, 6, tasa, 0)) as NAFINSA, 
       sum(decode (id_banco, 7, tasa, 0)) as BANAMEX
  from (
    select tr.fecha, tr.id_banco, bcos.nombre_corto, trd.plazo, trd.tasa
    from rf_tr_tasas_rendimiento tr, rf_tc_bancos_inversion bcos, rf_tr_tasas_rend_detalle trd
    where 
      tr.id_banco = bcos.id_banco and 
      tr.id_rendimiento = trd.id_rendimiento and
      trunc(fecha) >= to_date(':fechaInicial','yyyy-mm-dd') and trunc(fecha) &lt;= to_date(':fechaFinal','yyyy-mm-dd') and
      tr.id_banco in (6, 7, 35) and
      trd.plazo in (:plazo)
    order by plazo, fecha, id_banco
    ) tasas
 group by fecha
   </select>
  <select id="tasasRendimientoIF">
select to_char(fecha,'dd/mon/yyyy') fecha, 
              sum(decode (plazo, 1, tasa, 0)) as plazo_1, 
              sum(decode (plazo, 7, tasa, 0)) as plazo_7, 
              sum(decode (plazo, 14, tasa, 0)) as plazo_14,
              sum(decode (plazo, 21, tasa, 0)) as plazo_21, 
              sum(decode (plazo, 28, tasa, 0)) as plazo_28 
  from (
    select tr.fecha, tr.id_banco, bcos.nombre_corto, trd.plazo, trd.tasa
    from rf_tr_tasas_rendimiento tr 
    inner join rf_tc_bancos_inversion bcos 
    on tr.id_banco = bcos.id_banco 
    inner join rf_tr_tasas_rend_detalle trd 
    on tr.id_rendimiento = trd.id_rendimiento
    where fecha >= to_date (':fechaInicial','yyyy-mm-dd') AND  fecha &lt;= to_date (':fechaFinal','yyyy-mm-dd') and 
          tr.id_banco in (:idBanco) and
          trd.plazo in (:plazos)
    order by fecha, plazo ) tasas
 group by fecha 
   </select>
    <select id="invTipoInstrumento">   
select 
      tv.descripcion instrumento,
      sum(dc.titulos_acciones) titulos,
      sum(dc.importe) importe,
      count(*) operaciones
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco) 
group by tv.id_tipo_valores, tv.descripcion      
order by tv.id_tipo_valores 
   </select>
     <select id="invTipoInstrumentoGlobal">   
select 
      tv.descripcion instrumento,
      sum(dc.titulos_acciones) titulos,
      sum(dc.importe) importe,
      count(*) operaciones
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd')  
group by tv.id_tipo_valores, tv.descripcion      
order by tv.id_tipo_valores 
   </select>
  <select id="reserva">
select FECHA, MONTO/1000000 reserva ,round(PORCENTAJE,1) otras_cuentas from RF_TR_FONDO_RESERVA 
where trunc(fecha) >= to_date (':fechaInicial','yyyy-mm-dd') AND trunc(fecha)  &lt;= to_date (':fechaFinal','yyyy-mm-dd') 
order by fecha 
   </select>
   <select id="carteraCierreMes">
select bi.nombre_corto institucion_bancaria, tv.descripcion instrumento, dc.titulos_acciones titulos,
       dc.importe, dc.rendimiento, ci.fecha inicia_inversion, ci.plazo, ci.fecha+ci.plazo fecha_vencimiento,
       ci.tasa tasa_rendimiento
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
inner join RF_TC_BANCOS_INVERSION bi on ctas.id_banco = bi.id_banco
where ci.fecha &lt;= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha+ci.plazo > to_date(':fechaFinal','yyyy-mm-dd') 
   </select>
     <select id="carteraInstFinCierre">
select tv.descripcion instrumento, dc.titulos_acciones titulos, dc.importe, dc.rendimiento,
       ci.fecha inicia_inversion, ci.plazo, ci.fecha+ci.plazo fecha_vencimiento, ci.tasa tasa_rendimiento
from rf_tr_compras_inversion ci 
inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion 
inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores 
inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha &lt;= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha+ci.plazo > to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco)
   </select>
    <select id="compCarteraFechaInversion">   
select ci.fecha, 1 cons, dc.id_detalle_compra, ci.plazo, ci.vencimiento, tv.descripcion instrumento,
       dc.titulos_acciones titulos, dc.valor costo_titulo,
       dc.importe valor_operacion, ci.tasa
  from rf_tr_compras_inversion ci 
  inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion
  inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores
  inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco) 
union  
select ci.fecha, 2 cons, 0 id_detalle_compra, 0 plazo, null vencimiento, 'total' descripcion, 0 titulos_acciones, 0 valor, sum(dc.importe) importe, 0 tasa 
  from rf_tr_compras_inversion ci 
  inner join rf_tr_detalle_compra dc on ci.id_compra_inversion = dc.id_compra_inversion
  inner join rf_tc_tipo_valores tv on dc.id_tipo_valores = tv.id_tipo_valores
  inner join rf_tr_cuentas_inversion ctas on ci.id_cuenta_inversion = ctas.id_cuenta_inversion 
where ci.id_cuenta_inversion in (:idCuentaInversion) and 
      ci.fecha >= to_date(':fechaInicial','yyyy-mm-dd') and ci.fecha &lt;= to_date(':fechaFinal','yyyy-mm-dd') and 
      ctas.id_banco in (:idBanco) 
 group by ci.fecha
 order by fecha, cons, id_detalle_compra
   </select> 
  <select id="rendimientosIF">  
select  coi.fecha, coi.PLAZO, coi.VENCIMIENTO vence, imp monto_invertido, rend rendimiento, coi.tasa, 1 compras 
from RF_TC_BANCOS_INVERSION bi, RF_TR_CUENTAS_INVERSION ci, RF_TR_COMPRAS_INVERSION coi , 
(select id_compra_inversion, sum(dci.importe) imp, sum(dci.rendimiento) rend 
   from RF_TR_DETALLE_COMPRA dci 
   group by  dci.id_compra_inversion) dci 
where ci.id_cuenta_inversion=:idCuentaInversion and 
      ci.id_banco = bi.id_banco  and 
      coi.id_cuenta_inversion = ci.id_cuenta_inversion and 
      to_date(to_char(coi.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') >= to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(coi.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(':fechaFinal','yyyy-mm-dd') 
      and dci.id_compra_inversion = coi.id_compra_inversion
union all 
select fecha, 0 plazo, vincimiento vence, importe monto_invertido, rendimiento, 0 porcentaje, 2 efectivo from rf_tr_efectivo_inversion 
where to_date(to_char(vincimiento,'yyyy-mm-dd'),'yyyy-mm-dd') >= to_date(':fechaInicial','yyyy-mm-dd') and 
     to_date(to_char(vincimiento,'yyyy-mm-dd'),'yyyy-mm-dd') &lt;= to_date(':fechaFinal','yyyy-mm-dd') 
     and id_cuenta_inversion=:idCuentaInversion 
order by fecha   
   </select>
    <select id="comportamientoInversion">   
select fecha fecha, sum(x.dia_1) plazo_1, sum(x.dias_7) plazo_7, sum(x.dias_14) plazo_14, 
sum(x.dias_21) plazo_21, sum(x.dias_28) plazo_28 , 
sum(x.dia_1) + sum(x.dias_7) + sum(x.dias_14) +sum(x.dias_21) + sum(x.dias_28) total 
from (select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
             case when i.plazo > b.cons then d.importe else 0 end dia_1, 0 dias_7, 0 dias_14, 0 dias_21, 0 dias_28
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
           (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 6) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
      and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
      and i.plazo in (1,2,3,4,5,6)
      union all --plazo 7 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, case when i.plazo > b.cons then d.importe else 0 end dias_7, 0 dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 12) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo in (7,8,9,10,11,12)
      union all -- plazo 14 dias  
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, case when i.plazo > b.cons then d.importe else 0 end dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 20) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo in (13,14,15,16,17,18,19,20)
      union all --plazo 21 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, case when i.plazo > b.cons then d.importe else 0 end dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 27) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo in (21,22,23,24,25,26,27)
      union all -- plazo 28 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, 0 dias_21, case when i.plazo > b.cons then d.importe else 0 end dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 28) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and i.plazo = 28 
      ) x 
group by x.fecha 
order by x.fecha
   </select>
   <select id="compInversionInstFinanciera">   
select fecha fecha, sum(x.dia_1) plazo_1, sum(x.dias_7) plazo_7, sum(x.dias_14) plazo_14, 
sum(x.dias_21) plazo_21, sum(x.dias_28) plazo_28 , 
sum(x.dia_1) + sum(x.dias_7) + sum(x.dias_14) +sum(x.dias_21) + sum(x.dias_28) total 
from (select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
             case when i.plazo > b.cons then d.importe else 0 end dia_1, 0 dias_7, 0 dias_14, 0 dias_21, 0 dias_28
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
           (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 6) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
      and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
      and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (1,2,3,4,5,6)
      union all --plazo 7 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, case when i.plazo > b.cons then d.importe else 0 end dias_7, 0 dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 12) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (7,8,9,10,11,12)
      union all -- plazo 14 dias  
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, case when i.plazo > b.cons then d.importe else 0 end dias_14, 0 dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 20) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo  in (13,14,15,16,17,18,19,20)
      union all --plazo 21 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, case when i.plazo > b.cons then d.importe else 0 end dias_21, 0 dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 27) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo in (21,22,23,24,25,26,27)
      union all -- plazo 28 dias
      select c.id_banco,c.contrato_cuenta,i.fecha+ b.cons fecha, 
            0 dia_1, 0 dias_7, 0 dias_14, 0 dias_21, case when i.plazo > b.cons then d.importe else 0 end dias_28 
      from rf_tr_compras_inversion i, rf_tr_detalle_compra d, rf_tr_cuentas_inversion c,
            (select  rownum-1 cons from rf_tc_bancos_inversion b where rownum &lt;= 28) b
      where i.id_cuenta_inversion = c.id_cuenta_inversion and i.id_compra_inversion = d.id_compra_inversion
             and to_char(i.fecha+ b.cons,'yyyy-mm-dd') between ':fechaInicial' and ':fechaFinal'
             and c.id_banco = :idbanco and c.contrato_cuenta = ':contrato' and i.plazo = 28
      ) x 
group by x.fecha 
order by x.fecha
   </select>
   <select id="rensumenInversion">  
select replace(nombre,'Institucion de Banca Multiple','') nombre_corto , contrato_cuenta, coi.tasa, coi.fecha, vencimiento,  
  imp monto, rend, coi.plazo, ei.importe 
from RF_TC_BANCOS_INVERSION bi 
inner join RF_TR_CUENTAS_INVERSION ci on ci.id_banco = bi.id_banco  
inner join RF_TR_COMPRAS_INVERSION coi on coi.id_cuenta_inversion = ci.id_cuenta_inversion 
inner join ( 
  select id_compra_inversion, sum(dci.importe) imp, sum(dci.rendimiento) rend 
  from RF_TR_DETALLE_COMPRA dci 
  where id_compra_inversion = :idCompraInversion 
  group by id_compra_inversion 
) dci on dci.id_compra_inversion = coi.id_compra_inversion  
left join rf_tr_efectivo_inversion ei 
on coi.ID_COMPRA_INVERSION = ei.id_compras_inversion 
   </select>
    <select id="rensumenInvOfertas">  
select replace(nombre,'Institucion de Banca Multiple','')  INTERMEDIARIO_FINANCIERO, contacto, tr.fecha, 'Valores Gubernamentales' instrumento, trd.tasa 
from rf_tc_bancos_inversion bi 
inner join rf_tr_tasas_rendimiento tr on bi.id_banco = tr.id_banco and to_date(to_char(fecha,'dd/mm/yy'),'dd/mm/yy') = to_date(':FECHACOMPRA','dd/mm/yy')  
inner join rf_tr_tasas_rend_detalle trd on trd.id_rendimiento = tr.id_rendimiento and plazo in (:PLAZO) 
where bi.id_banco in (6,35,7) 
order by tasa desc  
   </select>
   <select id="disponibilidadFinanciera">   
select sum(decode(orden,1,saldo_cierre, 0)) conIngresos, 
       sum(decode(orden,2,saldo_cierre, 0)) conEgresos, 
       sum(decode(orden,3,saldo_cierre, 0)) otrasCtas, 
       sum(decode(orden,4,saldo_cierre, 0)) vencimientoDia, 
       sum(decode(orden,5,saldo_cierre, 0)) inversiones, 
       sum(decode(orden,6,saldo_cierre, 0)) conclusion 
from (
      select saldo_cierre, decode(id_cuenta,680,1,524,2,679,6,951,1,950,2,1051,2,1055,2,1057,2,1059,2,1060,2) orden
      from RF_TR_SALDOS_reserva
      where id_cuenta in (680,524,679,951,950,1051,1055,1057,1059,1060) and 
            to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all 
      select sum(saldo_cierre), 3 orden
      from RF_TR_SALDOS_reserva sd, RF_TR_CUENTAS_BANCARIAS cb
      where sd.id_cuenta not in (680,524,679,951,950,1051,1055,1057,1059,1060) and 
            cb.id_cuenta = sd.id_cuenta and
            cb.id_tipo_programa in (6,7) and cb.id_tipo_cta !=8 and
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all
      select sum(total), 4 orden  
      from (
            select sum(d.importe+d.rendimiento) total
            from rf_tr_compras_inversion i, rf_tr_detalle_compra d, RF_TR_CUENTAS_INVERSION ci
            where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and
                  d.id_compra_inversion = i.id_compra_inversion
                  and ci.id_banco not in (35,7) and ci.id_cuenta_inversion = i.id_cuenta_inversion
            union
            select sum(e.importe+e.rendimiento) total
            from rf_tr_efectivo_inversion e, RF_TR_CUENTAS_INVERSION ci
            where to_char(e.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial'
             and (select nvl(sum(d.importe+d.rendimiento),0)
                 from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                 where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial'
                        and d.id_compra_inversion = i.id_compra_inversion) > 0
                 and ci.id_banco not in (7) and ci.id_cuenta_inversion = e.id_cuenta_inversion 
          )
      union all
      select sum(importe) importe, 5 orden 
      from ( 
            select a.importe+e.importe importe from (     
            select sum(importe) importe, r.id_compra_inversion  
            from (
                  select i.fecha, i.vencimiento, d.importe, d.rendimiento,d.importe+d.rendimiento total, i.* 
                  from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                  where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' 
                        and to_char(i.vencimiento,'yyyy-mm-dd') > ':fechaInicial' 
                        and d.id_compra_inversion = i.id_compra_inversion 
                 ) r
           group by id_compra_inversion) a, rf_tr_efectivo_inversion e 
           where e.id_compras_inversion = a.id_compra_inversion
          )
    )
   </select>
   <select id="totalDisponbilidadFinanciera">
select decode(sum(saldo_cierre),null,0,sum(saldo_cierre)) totalDisponibilidad 
   from (
      select saldo_cierre, decode(id_cuenta,680,1,524,2,951,1,950,2,1051,2,1055,2,1057,2,1059,2,1060,2) orden
      from RF_TR_SALDOS_reserva
      where id_cuenta in (680,524,951,950,1051,1055,1057,1059,1060) and 
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all 
      select sum(saldo_cierre), 3 orden
      from RF_TR_SALDOS_reserva sd, RF_TR_CUENTAS_BANCARIAS cb
      where sd.id_cuenta not in (680,524,951,950,1051,1055,1057,1059,1060) and 
            cb.id_cuenta = sd.id_cuenta and
            cb.id_tipo_programa in (6,7) and cb.id_tipo_cta !=8 and
             to_char(fecha,'yyyy-mm-dd') = ':fechaInicial'
      union all
      select sum(total), 4 orden  
      from (
            select sum(d.importe+d.rendimiento) total
            from rf_tr_compras_inversion i, rf_tr_detalle_compra d, RF_TR_CUENTAS_INVERSION ci
            where to_char(i.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and
                  d.id_compra_inversion = i.id_compra_inversion
                  and ci.id_banco not in (35,7) and ci.id_cuenta_inversion = i.id_cuenta_inversion
            union
            select sum(e.importe+e.rendimiento) total
            from rf_tr_efectivo_inversion e, RF_TR_CUENTAS_INVERSION ci
            where to_char(e.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial'
                  and (select nvl(sum(d.importe+d.rendimiento),0)
                      from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                      where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial'
                            and d.id_compra_inversion = i.id_compra_inversion) > 0
                  and ci.id_banco not in (7) and ci.id_cuenta_inversion = e.id_cuenta_inversion
          )
      union all
      select sum(importe) importe, 5 orden 
      from ( 
            select sum(importe) importe  
            from (
                  select i.fecha, i.vencimiento, d.importe, d.rendimiento,d.importe+d.rendimiento total, i.* 
                  from rf_tr_compras_inversion i, rf_tr_detalle_compra d
                  where to_char(i.fecha,'yyyy-mm-dd') &lt; ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') > ':fechaInicial' and
                        d.id_compra_inversion = i.id_compra_inversion 
                 )
         
          )
    )
  </select>
   <select id="cotizacionTasas">
select replace(b.nombre,'Institucion de Banca Multiple','')  b.nombre_corto institucion_financiera, max(x.dia_1) dia_1, max(x.dias_7) dias_7, max(x.dias_14) dias_14, 
       max(x.dias_21) dias_21, max(x.dias_28) dias_28 
from (select r.id_banco, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),1,rd.tasa,0) dia_1, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),7,rd.tasa,0) dias_7, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),14,rd.tasa,0) dias_14, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),21,rd.tasa,0) dias_21, 
             decode(decode(rd.plazo,1,1,2,1,3,1,decode(rd.plazo,6,7,7,7,rd.plazo)),28,rd.tasa,0) dias_28 
      from rf_tr_tasas_rend_detalle rd, rf_tr_tasas_rendimiento r 
      where r.id_rendimiento = rd.id_rendimiento 
      and to_char(r.fecha,'yyyy-mm-dd') between ':fechaInicial' and ':fechaInicial' 
     ) x, rf_tc_bancos_inversion b 
where b.id_banco = x.id_banco 
group by x.id_banco, b.nombre_corto 
order by x.id_banco 
  </select>
  <select id="dispCotTasas">
select sum(total) total from ( 
select sum(d.importe+d.rendimiento) total  
from rf_tr_compras_inversion i, rf_tr_detalle_compra d  
where to_char(i.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(i.vencimiento,'yyyy-mm-dd') = ':fechaInicial' and   
      d.id_compra_inversion = i.id_compra_inversion 
union 
select sum(e.importe+e.rendimiento) total  
from rf_tr_efectivo_inversion e 
where to_char(e.fecha,'yyyy-mm-dd') &lt;= ':fechaInicial' and to_char(e.vincimiento,'yyyy-mm-dd') = ':fechaInicial' 
)  
  </select>
<select id="tasaBanxico">
select 
  tasa 
from 
  RF_TR_TASAS_REND_DETALLE 
where 
  id_rendimiento = (
                    select id_rendimiento from RF_TR_TASAS_RENDIMIENTO
                    where fecha = to_date(':fechaInicial','dd/mm/yyyy') and 
                          id_banco = 498)  and 
  tasa != 0
</select>
<select id="inversionesCotTasas">
select plazo, vencimiento, r.importe+e.importe importe from (
select  plazo, vencimiento, id_compra_inversion, sum(importe) importe from (
select 'Inversión '|| i.plazo || ' día' plazo, d.importe, 'vence ' || i.vencimiento vencimiento, i.id_compra_inversion
from rf_tr_compras_inversion i, rf_tr_detalle_compra d
where to_date(to_char(i.fecha,'yyyy-mm-dd'),'yyyy-mm-dd') &lt; to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(i.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') > to_date(':fechaInicial','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo in (1,2,3,4,5,6)
union all
select 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento, i.id_compra_inversion
from rf_tr_compras_inversion i, rf_tr_detalle_compra d
where to_date(to_char(i.fecha,'yyyy-mm-dd'),'yyyy-mm-dd') &lt; to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(i.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') > to_date(':fechaInicial','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo in (7,8,9,10,11,12)
union all
select 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento, i.id_compra_inversion
from rf_tr_compras_inversion i, rf_tr_detalle_compra d
where to_date(to_char(i.fecha,'yyyy-mm-dd'),'yyyy-mm-dd') &lt; to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(i.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') > to_date(':fechaInicial','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo in (13,14,15,16,17,18,19,20)
union all
select 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento, i.id_compra_inversion
from rf_tr_compras_inversion i, rf_tr_detalle_compra d
where to_date(to_char(i.fecha,'yyyy-mm-dd'),'yyyy-mm-dd') &lt; to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(i.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') > to_date(':fechaInicial','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo in (21,22,23,24,25,26,27)
union all
select 'Inversión '|| i.plazo || ' dias' plazo, d.importe, 'vence ' || i.vencimiento vencimiento, i.id_compra_inversion
from rf_tr_compras_inversion i, rf_tr_detalle_compra d
where to_date(to_char(i.fecha,'yyyy-mm-dd'),'yyyy-mm-dd') &lt; to_date(':fechaInicial','yyyy-mm-dd') and to_date(to_char(i.vencimiento,'yyyy-mm-dd'),'yyyy-mm-dd') > to_date(':fechaInicial','yyyy-mm-dd') and
      d.id_compra_inversion = i.id_compra_inversion and i.plazo = 28) 
group by  plazo , vencimiento, id_compra_inversion ) r, rf_tr_efectivo_inversion e 
where e.id_compras_inversion = r.id_compra_inversion
  </select>
  </submodulo>  
</dml>